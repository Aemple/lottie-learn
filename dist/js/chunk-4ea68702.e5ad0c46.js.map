{"version":3,"sources":["webpack:///./src/views/lottie.vue?82fe","webpack:///src/views/lottie.vue","webpack:///./src/views/lottie.vue?ba45","webpack:///./src/views/lottie.vue","webpack:///./node_modules/_lottie-web@5.5.6@lottie-web/build/player/lottie.js","webpack:///./src/views/lottie.vue?d7d8"],"names":["render","_vm","this","_h","$createElement","_c","_self","staticClass","attrs","id","on","click","lottieClick","_l","value","key","$event","changeFun","_v","_s","speedFun","speed","staticRenderFns","lottievue_type_script_lang_js_","name","components","data","lottie","isAnimationLoad","dataJson","heart1","__webpack_require__","heart2","hand1","hand2","computed","props","created","methods","setSpeed","console","log","destroy","initLottie","currentFrame","totalFrames","setDirection","play","completeFun","lottie_default","a","loadAnimation","container","document","getElementById","renderer","loop","autoplay","animationData","addEventListener","mounted","watch","destroyed","views_lottievue_type_script_lang_js_","component","Object","componentNormalizer","__webpack_exports__","__WEBPACK_AMD_DEFINE_RESULT__","navigator","root","factory","call","exports","module","undefined","window","svgNS","locationHref","initialDefaultFrame","subframeEnabled","expressionsPlugin","isSafari","test","userAgent","cachedColors","bm_rounder","Math","round","bm_rnd","bm_pow","pow","bm_sqrt","sqrt","bm_abs","abs","bm_floor","floor","bm_max","max","bm_min","min","blitter","BMMath","ProjectInterface","i","propertyNames","len","length","random","val","tOfVal","absArr","createSizedArray","defaultCurveSegments","degToRads","PI","roundCorner","roundValues","flag","styleDiv","element","style","position","top","left","display","transformOrigin","webkitTransformOrigin","backfaceVisibility","webkitBackfaceVisibility","transformStyle","webkitTransformStyle","mozTransformStyle","BMEnterFrameEvent","n","c","t","d","type","currentTime","totalTime","direction","BMCompleteEvent","BMCompleteLoopEvent","currentLoop","totalLoops","BMSegmentStartEvent","f","firstFrame","BMDestroyEvent","target","createElementID","_count","HSVtoRGB","h","s","v","r","g","b","p","q","RGBtoHSV","addSaturationToRGB","color","offset","hsv","addBrightnessToRGB","addHueToRGB","rgbToHex","hex","colorMap","toString","BaseEvent","prototype","triggerEvent","eventName","args","_cbs","callback","push","removeEventListener","bind","splice","createTypedArray","createRegularArray","arr","Float32Array","Int16Array","Uint8ClampedArray","Array","apply","createNS","createElementNS","createTag","createElement","DynamicPropertyContainer","addDynamicProperty","prop","dynamicProperties","indexOf","_isAnimated","iterateDynamicProperties","_mdf","getValue","initDynamicPropertyContainer","getBlendMode","blendModeEnums","0","1","2","3","4","5","6","7","8","9","10","11","12","13","14","15","mode","Matrix","_cos","cos","_sin","sin","_tan","tan","_rnd","reset","rotate","angle","mCos","mSin","_t","rotateX","rotateY","rotateZ","shear","sx","sy","skew","ax","ay","skewFromAxis","scale","sz","setTransform","e","j","k","l","m","o","translate","tx","ty","tz","transform","a2","b2","c2","d2","e2","f2","g2","h2","i2","j2","k2","l2","m2","n2","o2","p2","_p","_identityCalculated","a1","b1","c1","d1","e1","f1","g1","h1","i1","j1","k1","l1","m1","n1","o1","p1","isIdentity","_identity","equals","matr","clone","cloneFromProps","applyToPoint","x","y","z","applyToX","applyToY","applyToZ","inversePoint","pt","determinant","inversePoints","pts","retPts","applyToTriplePoints","pt1","pt2","pt3","p0","p4","p5","p12","p13","applyToPointArray","applyToPointStringified","toCSS","cssValue","roundMatrixProperty","to2dCSS","_a","_b","_d","_e","_f","pool","math","nodecrypto","global","width","chunks","digits","rngname","startdenom","significance","overflow","mask","seedrandom","seed","options","entropy","shortseed","mixkey","flatten","tostring","autoseed","arc4","ARC4","prng","int32","quick","double","S","pass","is_math_call","state","copy","keylen","me","count","slice","obj","depth","result","typ","smear","stringseed","charCodeAt","randomBytes","out","Uint8Array","crypto","msCrypto","getRandomValues","browser","plugins","Date","screen","String","fromCharCode","BezierFactory","ob","getBezierEasing","beziers","nm","str","replace","bezEasing","BezierEasing","NEWTON_ITERATIONS","NEWTON_MIN_SLOPE","SUBDIVISION_PRECISION","SUBDIVISION_MAX_ITERATIONS","kSplineTableSize","kSampleStepSize","float32ArraySupported","A","aA1","aA2","B","C","calcBezier","aT","getSlope","binarySubdivide","aX","aA","aB","mX1","mX2","currentX","currentT","newtonRaphsonIterate","aGuessT","currentSlope","points","_mSampleValues","_precomputed","get","mY1","mY2","_precompute","_getTForX","_calcSampleValues","mSampleValues","intervalStart","currentSample","lastSample","dist","guessForT","initialSlope","extendPrototype","sources","destination","sourcePrototype","attr","hasOwnProperty","getDescriptor","object","getOwnPropertyDescriptor","createProxyFunction","ProxyFunction","bezFunction","pointOnLine2D","x1","y1","x2","y2","x3","y3","det1","pointOnLine3D","z1","z2","z3","diffDist","dist1","dist2","dist3","getBezierLength","pt4","ptCoord","perc","ptDistance","curveSegments","addedLength","point","lastPoint","lengthData","bezier_length_pool","newElement","percents","lengths","getSegmentsLength","shapeData","segmentsLength","segments_length_pool","closed","pathV","pathO","pathI","_length","totalLength","BezierData","segmentLength","PointData","partial","partialLength","buildBezierData","storedData","bezierName","bezierData","getDistancePerc","initPos","lengthPos","lPerc","dir","getPointInSegment","percent","t1","u1","ptX","ptY","bezier_segment_points","getNewSegment","startPerc","endPerc","t0","u0","u0u0u0","t0u0u0_3","t0t0u0_3","t0t0t0","u0u0u1","t0u0u1_3","t0t0u1_3","t0t0t1","u0u1u1","t0u1u1_3","t0t1u1_3","t0t1t1","u1u1u1","t1u1u1_3","t1t1u1_3","t1t1t1","lastTime","vendors","requestAnimationFrame","cancelAnimationFrame","currTime","getTime","timeToCall","setTimeout","clearTimeout","bez","dataFunctionManager","completeLayers","layers","comps","fontManager","layerData","jLen","kLen","completed","tt","td","hasMask","maskProps","masksProperties","convertPathsToAbsoluteValues","findCompLayers","refId","completeShapes","shapes","completeText","__used","JSON","parse","stringify","ks","it","path","checkVersion","minimum","animVersionString","animVersion","split","checkText","minimumVersion","updateTextLayer","textLayer","documentData","iterateLayers","assets","checkChars","chars","pathData","paths","__converted","checkColors","iterateShapes","checkShapes","cl","completeData","__complete","singleShape","moduleOb","dataManager","FontManager","maxWaitingTime","emptyChar","w","size","combinedCharacters","setUpNode","font","family","parentNode","fontFamily","node","innerHTML","fontSize","fontVariant","fontStyle","fontWeight","letterSpacing","appendChild","body","offsetWidth","parent","checkLoadedFonts","fonts","loadedCount","loaded","fOrigin","origin","monoCase","sansCase","removeChild","now","initTime","isLoaded","createHelper","def","fontData","tHelper","setAttribute","fFamily","fStyle","fWeight","textContent","fClass","tCanvasHelper","getContext","addFonts","defs","list","fontArr","_pendingFonts","loadedSelector","shouldLoadFont","fPath","querySelectorAll","href","rel","src","sc","helper","cache","addChars","found","ch","getCharData","char","warn","measureText","fontName","getFontByName","index","doubleSize","getComputedTextLength","singleSize","fName","getCombinedCharacterCodes","concat","Font","typekitLoaded","PropertyFactory","initFrame","math_abs","interpolateValue","frameNum","caching","newValue","offsetTime","propType","pv","keyData","nextKeyData","fnc","iterationIndex","lastIndex","keyframes","endValue","nextKeyTime","keyTime","to","ti","ind","__fnct","segmentPerc","distanceInLine","lastFrame","_lastKeyframeIndex","_lastAddedLength","_lastPoint","outX","outY","inX","inY","keyValue","sh","quatStart","createQuaternion","quatEnd","time","quaternionToEuler","slerp","constructor","omega","cosom","sinom","scale0","scale1","az","aw","bx","by","bz","bw","acos","quat","qx","qy","qz","qw","heading","atan2","attitude","asin","bank","values","c3","s1","s2","s3","getValueAtCurrentTime","comp","renderedFrame","endTime","_caching","renderResult","setVValue","multipliedValue","mult","processEffectsSequence","elem","globalData","frameId","effectsSequence","lock","_isFirstFrame","finalValue","kf","addEffect","effectFunction","ValueProperty","vel","MultiDimensionalProperty","KeyframedValueProperty","st","KeyframedMultidimensionalProperty","arrLen","getProp","TransformPropertyFactory","applyToMatrix","mat","sk","sa","rz","ry","rx","or","px","py","pz","processKeys","forceRender","_isDirty","precalculateMatrix","pre","appliedTransformations","autoOriented","v1","v2","frameRate","getValueAtTime","autoOrient","_addDynamicProperty","TransformProperty","getTransformProperty","ShapePath","_maxLength","setPathData","setLength","point_pool","doubleArrayLength","setXYAt","pos","setTripleAt","vX","vY","oX","oY","iX","iY","reverse","newPath","vertices","outPoints","inPoints","init","cnt","ShapePropertyFactory","interpolateShape","previousValue","keyPropS","keyPropE","isHold","vertexValue","interpolateShapeCurrentTime","resetShape","localShapeCollection","shapesEqual","shape1","shape2","shape_pool","releaseShapes","addShape","ShapeProperty","shapeCollection_pool","newShapeCollection","KeyframedShapeProperty","EllShapeProperty","cPoint","convertEllToPath","s0","_cw","StarShapeProperty","ir","is","convertToPath","convertStarToPath","convertPolygonToPath","os","rad","roundness","perimSegment","numPts","longFlag","longRad","shortRad","longRound","shortRound","longPerimSegment","shortPerimSegment","currentAng","ox","oy","RectShapeProperty","convertRectToPath","v0","getShapeProp","dataProp","keys","getConstructorFunction","getKeyframedConstructorFunction","ShapeModifiers","modifiers","registerModifier","getModifier","ShapeModifier","TrimModifier","RoundCornersModifier","RepeaterModifier","ShapeCollection","DashProperty","dataProps","dashStr","dashArray","dashoffset","GradientProperty","cLength","_cmdf","_omdf","_collapsable","checkCollapsable","_hasOpacity","initModifierProperties","addShapeToModifier","shape","setAsAnimated","sValue","eValue","pathsData","calculateShapeEdges","shapeLength","totalModifierLength","segments","segmentOb","shapeSegments","shapeS","shapeE","releasePathsData","release","processShapes","shapePaths","totalShapeLength","edges","newShapesData","addShapes","lastShapeInCollection","lastShape","pop","addPaths","newPaths","addSegment","shapePath","newShape","addSegmentFromArray","shapeSegment","currentLengthData","segmentCount","segment","rd","processPath","cloned_path","currentV","currentI","currentO","closerV","distance","newPosPerc","tr","so","eo","pMatrix","rMatrix","sMatrix","tMatrix","matrix","applyTransforms","inv","scaleX","scaleY","elemsData","_currentCopies","_elements","_groups","unshift","resetElements","elements","_processed","cloneElements","newElements","changeGroupRender","renderFlag","_render","items","itemsTransform","cont","copies","ceil","group","ix","reloadShapes","offsetModulo","roundOffset","pProps","rProps","sProps","iteration","mProps","op","comparePoints","diff","buildShapeString","pathNodes","_o","_i","shapeString","ImagePreloader","proxyImage","canvas","height","ctx","fillStyle","fillRect","imageLoaded","loadedAssets","totalImages","imagesLoadedCb","getAssetsPath","assetData","assetsPath","original_path","imagePath","u","createImageData","img","crossOrigin","_imageLoaded","loadAssets","cb","images","_createImageData","setPath","setAssetsPath","getImage","featureSupport","maskType","filtersFactory","createFilter","filId","fil","createAlphaToLuminanceFilter","feColorMatrix","assetLoader","formatResponse","xhr","response","responseText","loadAsset","errorCallback","XMLHttpRequest","open","responseType","err","send","onreadystatechange","readyState","status","load","TextAnimatorProperty","textData","renderType","_hasMaskedPath","_frameId","_textData","_renderType","_elem","_animatorsData","_pathData","_moreOptions","alignment","renderedLetters","lettersChangedFlag","TextAnimatorDataProperty","animatorProps","defaultData","textAnimator_animatables","sw","fc","fh","fs","fb","TextSelectorProp","getTextSelectorProp","LetterProps","TextProperty","keysIndex","canResize","minimumFontSize","currentData","ascent","boxWidth","defaultBoxWidth","justifyOffset","lh","lineWidths","ls","of","ps","fillColorAnim","strokeColorAnim","strokeWidthAnim","yOffset","finalSize","finalText","finalLineHeight","copyData","searchProperty","completeTextData","searchProperties","maskManager","getMaskProperty","getMeasures","xPos","yPos","pathInfo","currentLength","currentPoint","pointInd","segmentInd","prevPoint","tanAngle","animators","matrixHelper","mHelper","renderedLettersCount","letters","tLength","pi","animatorSelector","letterValue","yOff","firstLine","offf","xPathPos","yPathPos","elemOpacity","letterSw","letterSc","letterFc","letterO","initPathPos","initSegmentInd","initPointInd","currentLine","letterM","letterP","defaultPropsArray","animatorJustifyOffset","animatorFirstCharOffset","justifyOffsetMult","isNewLine","getMult","anIndexes","totalChars","line","extra","an","animatorOffset","add","rot","atan","update","updated","setCurrentData","searchKeyframes","getKeyframeValue","_finalValue","currentValue","currentIndex","textKeys","buildFinalText","text","charCode","charactersArray","charAt","substr","newLineFlag","charData","styleName","anchorGrouping","currentSize","currentPos","lineWidth","maxLineWidth","styles","toLowerCase","trackingOffset","currentHeight","boxHeight","lastSpaceIndex","currentChar","uncollapsedSpaces","animatorData","letterData","based","indexes","rn","newInd","currentInd","updateDocumentData","newData","dData","recalculate","canResizeFont","_canResize","setMinimumFontSize","_fontValue","_currentTextLength","finalS","finalE","xe","ne","textProperty","easer","tot","newCharsFlag","divisor","pool_factory","initialLength","_create","_release","_clone","pooling","create","cloned","shapeCollection","BaseRenderer","SVGRenderer","animationItem","config","svgElement","ariaLabel","title","titleElement","titleId","description","descElement","descId","maskElement","layerElement","renderConfig","preserveAspectRatio","imagePreserveAspectRatio","progressiveLoad","hideOnTransparent","viewBoxOnly","viewBoxSize","className","pendingElements","rendererType","CanvasRenderer","clearCanvas","context","dpr","wrapper","devicePixelRatio","currentGlobalAlpha","contextData","CVContextData","transformMat","HybridRenderer","threeDElements","camera","supports3d","MaskElement","viewData","solidPath","rect","expansor","feMorph","properties","currentMasks","layerId","maskRef","filterID","expan","lastPath","lastOperator","filterId","lastRadius","createLayerSolidPath","invRect","drawPath","maskedElement","addRenderableComponent","HierarchyElement","FrameElement","TransformElement","RenderableElement","RenderableDOMElement","ProcessedElement","SVGStyleData","level","lvl","hd","pElem","msElem","SVGShapeData","transformers","caches","lStr","SVGTransformData","SVGStrokeStyleData","styleOb","SVGFillStyleData","SVGGradientFillStyleData","initGradientData","SVGGradientStrokeStyleData","ShapeGroupData","prevViewData","gr","checkLayers","num","ip","buildItem","checkPendingElements","createItem","layer","createImage","createComp","createSolid","createNull","createShape","createText","createCamera","Error","buildAllItems","includeLayers","newLayers","setProjectInterface","pInterface","projectInterface","initItems","buildElementParenting","parentName","hierarchy","setAsParent","setHierarchy","addPendingElement","searchExtraCompositions","xt","initExpressions","registerComposition","setupGlobalData","animData","fontsContainer","getAssetData","imageLoader","imagePreloader","fr","compSize","NullElement","SVGShapeElement","SVGTextElement","IImageElement","SVGCompElement","ISolidElement","configAnimation","maskId","updateContainerSize","appendElementInPos","setMatte","checkParenting","renderFrame","prepareFrame","getBaseElement","nextElement","insertBefore","hide","show","CVShapeElement","CVTextElement","CVImageElement","CVCompElement","CVSolidElement","ctxTransform","cProps","cTr","trProps","canvasContext","ctxOpacity","globalAlpha","cO","restore","save","actionFlag","cArrPos","duplicate","saved","savedOp","blendMode","popped","mozTransformOrigin","transformCanvas","isDashed","elementWidth","elementHeight","elementRel","animationRel","offsetHeight","par","fillType","beginPath","closePath","clip","clearRect","newDOMElement","ddd","addTo3dContainer","nextDOMElement","nextLayer","tmpDOMElement","getThreeDContainerByPos","HShapeElement","HTextElement","HCameraElement","HImageElement","HCompElement","HSolidElement","startPos","endPos","perspectiveElem","createThreeDContainer","webkitTransform","threeDContainerData","build3dContainers","lastThreeDContainerData","currentContainer","resizerElem","svg","setup","cWidth","cHeight","perspective","webkitPerspective","floatingContainer","isFirstFrame","finalMat","finalTransform","mProp","getMaskelement","pathString","pathShapeValue","initHierarchy","_isParent","prepareProperties","isVisible","initTransform","_matMdf","_opMdf","ao","renderTransform","globalToLocal","transforms","ptNew","initRenderable","isInRange","hidden","isTransparent","renderableComponents","removeRenderableComponent","prepareRenderableFrame","checkLayerLimits","checkTransparency","renderRenderable","sourceRectAtTime","getLayerSize","_prototype","initElement","initBaseData","initRendererElement","createContainerElements","createRenderableComponents","createContent","baseElement","renderElement","renderInnerContent","innerElem","destroyBaseElement","stops","setGradientData","setGradientOpacity","pathElement","gradientId","gfill","stop","gf","cst","opacityId","opFill","ms","ost","SVGElementsRenderer","_identityMatrix","_matrixHelper","createRenderFunction","renderFill","renderGradient","renderGradientStroke","renderStroke","renderPath","renderContentTransform","styleData","itemData","pathStringTransformed","redraw","iterations","lLen","styleElem","hasOpacity","attr1","attr2","cValues","oValues","ang","ShapeTransformManager","sequences","sequenceList","transform_key_count","CVShapeData","transformsManager","styledShapes","styledShape","addTransformSequence","trNodes","BaseElement","SVGBaseElement","IShapeElement","ITextElement","ICompElement","sourceRect","tm","_placeholder","textSpans","shapesData","stylesList","shapeModifiers","itemsData","processedElements","animatedContents","SVGTintFilter","filter","filterManager","matrixFilter","effectElements","feMergeNode","feMerge","SVGFillFilter","SVGGaussianBlurEffect","feGaussianBlur","SVGStrokeEffect","initialized","SVGTritoneFilter","feComponentTransfer","feFuncR","feFuncG","feFuncB","SVGProLevelsFilter","createFeFunc","feFuncA","feFuncRComposed","feFuncGComposed","feFuncBComposed","SVGDropShadowEffect","feOffset","feFlood","feComposite","originalNodeAdded","sequence","processSequence","processSequences","getNewKey","checkMasks","layerInterface","LayerExpressionInterface","registerMaskInterface","effectsInterface","EffectsExpressionInterface","createEffectsInterface","registerEffectsInterface","compInterface","CompExpressionInterface","shapeInterface","ShapeExpressionInterface","content","textInterface","TextExpressionInterface","setBlendMode","blendModeValue","bm","sr","effectsManager","EffectsManager","getType","matteElement","transformedElement","_sizeChanged","gg","layerElementParent","masker","maskGroup","maskGrouper","feCTr","feFunc","alphaRect","ln","cp","clipId","cpGroup","renderableEffectsManager","SVGEffects","addShapeToModifiers","isShapeInAnimatedModifiers","isAnimatedWithShape","renderModifiers","lcEnum","ljEnum","searchProcessedElement","addProcessedElement","textAnimator","buildNewText","createPathShape","shapeStr","_fontSize","applyTextPropertiesToMatrix","lineNumber","buildColor","colorData","emptyProp","timeRemapped","setElements","elems","getElements","destroyElements","assetPath","pr","setAttributeNS","textContainer","buildTextContents","textArray","textContents","currentTextContent","tSpan","usesGlyphs","cachedSpansLength","tElement","justify","textBox","getBBox","bbox","renderedLetter","textSpan","initSecondaryElement","identityMatrix","buildExpressionInterface","searchShapes","filterUniqueShapes","tempShapes","areAnimated","setShapesAsAnimated","createStyleElement","elementData","gradientConstructor","lc","lj","ml","addToAnimatedContents","createGroupElement","createTransformElement","transformProperty","createShapeElement","ownTransformers","shapeProperty","fn","setElementStyles","currentTransform","modifier","processedPos","ownStyles","ownModifiers","renderShape","animatedContent","colorBlack","colorWhite","opacity","kBlurrinessToSigma","sigma","dimensions","sigmaX","sigmaY","edgeMode","initialize","groupPath","elemChildren","children","childNodes","removeAttribute","pathMasker","dasharrayValue","getTotalLength","lineLength","units","color1","color2","color3","tableR","tableG","tableB","getTableValue","inputBlack","inputWhite","gamma","outputBlack","outputWhite","colorValue","table","outputDelta","inputDelta","join","col","_svgMatteSymbols","SVGMatte3Effect","filterElem","ef","filters","CVBaseElement","CVMaskElement","hasMasks","stroke","fill","currentRender","sWidth","fValue","CVEffects","HBaseElement","shapesContainer","currentBBox","textPaths","isMasked","pe","_prevMat","HEffects","findSymbol","replaceInParent","symbolId","nextChild","useElem","setElementAsMask","symbol","newLength","currentSavedOp","set","createElements","globalCompositeOperation","hideElement","showElement","widthCrop","heightCrop","imgW","imgH","imgRel","canvasRel","drawImage","parentMatrix","moveTo","lineTo","bezierCurveTo","transformHelper","dashResetter","preTransforms","co","wi","da","do","addTransformToStyleList","removeTransformFromStyleList","closeStyles","shouldRender","ownTransforms","_shouldRender","renderShapeTransform","parentTransform","groupTransform","drawLayer","nodes","currentStyle","coOp","strokeStyle","grd","lineCap","lineJoin","miterLimit","setLineDash","lineDashOffset","isMain","renderGradientFill","renderStyledShape","shapeNodes","groupTransformMat","createLinearGradient","createRadialGradient","addColorStop","hasFill","hasStroke","commands","pathArr","lastFill","lastStroke","lastStrokeW","checkBlendMode","tg","addEffects","backgroundColor","_createBaseContainerElements","_renderShapeFrame","shapeCont","getTransformedPoint","calculateShapeBoundingBox","item","boundingBox","vPoint","oPoint","nextIPoint","nextVPoint","checkBounds","getBoundsOfCurve","bounds","shapeBoundingBox","xMax","right","yMax","bottom","tempBoundingBox","p3","b2ac","t2","calculateF","calculateBoundingBox","currentBoxContains","box","changed","compW","compH","innerElemStyle","strokeWidth","lineHeight","tParent","tCont","textPath","margin","Image","imageElem","mTransf","diffVector","mag","lookDir","lookLengthOnXZ","m_rotationX","m_rotationY","hasMatrixChanged","animationManager","registeredAnimations","playingAnimationsNum","_stopped","_isFrozen","removeElement","ev","animItem","animation","isPaused","subtractPlayingCount","registerAnimation","AnimationItem","setupAnimation","setData","getRegisteredAnimations","animations","addPlayingCount","activate","params","setParams","resume","nowTime","elapsedTime","advanceTime","first","pause","goToAndStop","isFrame","togglePause","searchAnimations","standalone","animElements","getElementsByClassName","getElementsByTagName","div","resize","freeze","unfreeze","currentRawFrame","frameMult","playSpeed","playDirection","playCount","animationID","timeCompleted","segmentPos","_idle","_completedLoop","animType","rendererSettings","parseInt","autoloadSegments","lastIndexOf","fileName","trigger","wrapperAttributes","attributes","getNamedItem","prerender","loadNextSegment","shift","segmentPath","loadSegments","imagesLoaded","checkLoaded","preloadImages","updaFrameModifier","waitForFontsLoaded","gotoFrame","setSubframe","setCurrentRawFrameValue","frameModifier","goToAndPlay","nextValue","_isComplete","checkSegments","adjustSegment","setSegment","end","pendingFrame","playSegments","forceFlag","resetSegments","onEnterFrame","onLoopComplete","onComplete","onSegmentStart","onDestroy","getPath","getDuration","Expressions","stackCount","registers","pushExpression","popExpression","releaseInstances","registerExpressionProperty","expression","ExpressionManager","$bm_isInstanceOfArray","isNumerable","tOfV","Number","$bm_neg","tOfA","lenA","retArr","easeInBez","easeOutBez","easeInOutBez","sum","tOfB","lenB","sub","mul","mod","$bm_sum","$bm_sub","$bm_mul","$bm_div","$bm_mod","clamp","mm","radiansToDegrees","radians_to_degrees","degreesToRadians","degrees_to_radians","helperLengthArray","arr1","arr2","normalize","vec","rgbToHsl","hue2rgb","hslToRgb","linear","tMin","tMax","value1","value2","_tMin","rnd","rndm","createPath","inTangents","outTangents","inVertexPoint","outVertexPoint","arrPlaceholder","initiateExpression","property","needsVelocity","_needsRandom","elemType","$bm_transform","effect","thisProperty","valueAtTime","defineProperty","frameDuration","displayStartTime","inPoint","outPoint","loopIn","loop_in","loopOut","loop_out","smooth","toWorld","fromWorld","fromComp","toComp","fromCompToSurface","rotation","anchorPoint","thisLayer","thisComp","velocityAtTime","__expression_functions","scoped_bm_rt","xf","eval","expression_function","numKeys","active","wiggle","freq","amp","addedAmps","periods","loopInDuration","duration","loopOutDuration","getVelocityAtTime","velocity","textIndex","textTotal","selectorValue","lookAt","elem1","elem2","fVec","pitch","yaw","easeOut","val1","val2","applyEase","easeIn","ease","nearestKey","framesToTime","frames","fps","timeToFrames","seedRandom","randSeed","substring","hasParent","executeExpression","_value","frameExpressionId","expressionHelpers","searchExpressions","_cachingAtTime","getSpeedAtTime","delta","getStaticValueAtTime","setGroupProperty","propertyGroup","durationFlag","cycleDuration","firstKeyFrame","ret","lastKeyFrame","initV","endV","current","repeats","lastValue","nextLastValue","firstValue","nextFirstValue","samples","sampleValue","endFrame","sampleFrequency","getTransformValueAtTime","getTransformStaticValueAtTime","propertyGetProp","getShapeValueAtTime","shapeValue","propertyIndex","ShapePropertyConstructorFunction","KeyframedShapePropertyConstructorFunction","ShapeExpressions","isClosed","pointOnPath","_segmentsLength","accumulatedLength","initIndex","endIndex","vectorOnPath","vectorType","xLength","yLength","magnitude","unitVector","tangentOnPath","normalOnPath","propertyGetShapeProp","trims","calculateExpression","getExpressionValue","isKeyframed","hasExpressions","iterateElements","view","groupInterfaceFactory","fillInterfaceFactory","strokeInterfaceFactory","trimInterfaceFactory","ellipseInterfaceFactory","starInterfaceFactory","pathInterfaceFactory","rectInterfaceFactory","roundedInterfaceFactory","repeaterInterfaceFactory","contentsInterfaceFactory","interfaces","interfaceFunction","_name","mn","numProperties","cix","transformInterface","transformInterfaceFactory","np","defineProperties","ExpressionPropertyInterface","_propertyGroup","_dashPropertyGroup","dashOb","addPropertyToDashOb","dash","start","skewAxis","outerRadius","outerRoundness","innerRoundness","innerRadius","radius","_interfaceFunction","_prevValue","_sourceText","_thisLayerFunction","stringValue","toWorldMat","sampleImage","_registerMaskInterface","MaskManagerInterface","_registerEffectsInterface","effects","TransformExpressionInterface","anchorPointDescriptor","anchor_point","startTime","source","pixelAspect","numLayers","_thisFunction","xRotation","yRotation","xPosition","yPosition","zPosition","_transformFactory","compositions","_thisProjectFunction","effectsData","createGroupInterface","createValueInterface","groupInterface","enabled","en","expressionProperty","MaskInterface","_mask","_data","MaskManager","_masksInterfaces","maskFunction","defaultUnidimensionalValue","defaultMultidimensionalValue","completeProperty","expressionValue","valueProp","assign","speedAtTime","UnidimensionalPropertyInterface","MultidimensionalPropertyInterface","arrValue","defaultGetter","SliderEffect","AngleEffect","ColorEffect","PointEffect","LayerIndexEffect","MaskIndexEffect","CheckboxEffect","NoValueEffect","effectItem","GroupEffect","TextExpressionSelectorProp","getValueProxy","total","propertyGetTextProp","eff","lottiejs","setLocationHref","setSubframeRendering","setQuality","isNaN","inBrowser","installPlugin","plugin","getFactory","checkReady","clearInterval","readyStateCheckInterval","getQueryVariable","variable","vars","queryString","pair","decodeURIComponent","__getFactory","version","scripts","myScript","setInterval","_node_modules_mini_css_extract_plugin_0_6_0_mini_css_extract_plugin_dist_loader_js_ref_8_oneOf_1_0_node_modules_css_loader_1_0_1_css_loader_index_js_ref_8_oneOf_1_1_node_modules_vue_loader_15_7_0_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_3_0_0_postcss_loader_src_index_js_ref_8_oneOf_1_2_node_modules_sass_loader_7_1_0_sass_loader_lib_loader_js_ref_8_oneOf_1_3_node_modules_cache_loader_2_0_1_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_15_7_0_vue_loader_lib_index_js_vue_loader_options_lottie_vue_vue_type_style_index_0_id_168b94a0_lang_scss_scoped_true___WEBPACK_IMPORTED_MODULE_0__","_node_modules_mini_css_extract_plugin_0_6_0_mini_css_extract_plugin_dist_loader_js_ref_8_oneOf_1_0_node_modules_css_loader_1_0_1_css_loader_index_js_ref_8_oneOf_1_1_node_modules_vue_loader_15_7_0_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_3_0_0_postcss_loader_src_index_js_ref_8_oneOf_1_2_node_modules_sass_loader_7_1_0_sass_loader_lib_loader_js_ref_8_oneOf_1_3_node_modules_cache_loader_2_0_1_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_15_7_0_vue_loader_lib_index_js_vue_loader_options_lottie_vue_vue_type_style_index_0_id_168b94a0_lang_scss_scoped_true___WEBPACK_IMPORTED_MODULE_0___default"],"mappings":"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","file":"js/chunk-4ea68702.e5ad0c46.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"box\"},[_c('div',{attrs:{\"id\":\"bm\"},on:{\"click\":_vm.lottieClick}}),_vm._l((_vm.dataJson),function(value,key){return _c('button',{key:key,on:{\"click\":function($event){return _vm.changeFun(value)}}},[_vm._v(\" \"+_vm._s(key))])}),_c('button',{on:{\"click\":function($event){return _vm.speedFun(_vm.speed++)}}},[_vm._v(\"speed++\")]),_c('button',{on:{\"click\":function($event){return _vm.speedFun(_vm.speed--)}}},[_vm._v(\"speed--\")])],2)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n    <div class=\"box\">\n        <div id=\"bm\" @click=\"lottieClick\"></div>\n\n        <button v-for=\"(value,key) in dataJson\" :key=\"key\" @click=\"changeFun(value)\"> {{key}}</button>\n        <button @click=\"speedFun(speed++)  \">speed++</button>\n        <button @click=\"speedFun(speed--)  \">speed--</button>\n\n    </div>\n</template>\n\n<script>\n    import lottie from 'lottie-web';\n\n    export default {\n        name: 'lottie',\n        components: {},\n        data() {\n            return {\n                speed: 1,\n                lottie: '',\n                isAnimationLoad: true,\n                dataJson: {\n                    heart1: require('../assets/data'),\n                    heart2: require('../assets/lottie (1)'),\n                    hand1: require('../assets/lottie (2)'),\n                    hand2: require('../assets/lottie')\n                }\n            };\n        },\n        computed: {},\n        props: {},\n        created() {\n        },\n        methods: {\n            speedFun(value) {\n                if (value < 1) {\n                    value = 1;\n                }\n\n                this.lottie.setSpeed(value);\n            },\n            changeFun(data) {\n                console.log();\n                if (this.lottie != '') {\n                    this.lottie.destroy();\n                }\n                this.isAnimationLoad = true;\n                this.initLottie(data);\n            },\n            lottieClick() {\n                if (this.isAnimationLoad) {\n                    this.isAnimationLoad = false;\n                    if (this.lottie.currentFrame == this.lottie.totalFrames - 1) {\n                        this.lottie.setDirection(-1);\n                        this.lottie.play();\n                    } else {\n                        this.lottie.setDirection(1);\n                        this.lottie.play();\n                    }\n                }\n            },\n            completeFun() {\n                this.isAnimationLoad = true;\n            },\n            initLottie(data) {\n                this.lottie = lottie.loadAnimation({\n                    container: document.getElementById('bm'),\n                    renderer: 'svg',\n                    loop: false,\n                    autoplay: false,\n                    animationData: data\n                });\n\n                //初始化状态\n                // this.lottie.goToAndStop(this.lottie.totalFrames - 1, true);\n                this.lottie.addEventListener('complete', this.completeFun);\n            }\n        },\n        mounted() {\n\n            this.initLottie(this.dataJson.heart1);\n\n        },\n        watch: {},\n        destroyed() {\n            //页面销毁时\n        }\n\n    };\n</script>\n\n<style lang=\"scss\" scoped>\n\n    .box {\n        padding-top: 50px;\n        padding-left: 50px;\n\n        div {\n            border: 1px solid #efefef;\n            width: 100px;\n            height: 100px;\n        }\n\n        button {\n            padding: 4px 10px;\n            margin-top: 20px;\n            margin-right: 20px;\n        }\n    }\n</style>\n","import mod from \"-!../../node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js??ref--12-0!../../node_modules/_thread-loader@2.1.2@thread-loader/dist/cjs.js!../../node_modules/_babel-loader@8.0.6@babel-loader/lib/index.js!../../node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js??ref--0-0!../../node_modules/_vue-loader@15.7.0@vue-loader/lib/index.js??vue-loader-options!./lottie.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js??ref--12-0!../../node_modules/_thread-loader@2.1.2@thread-loader/dist/cjs.js!../../node_modules/_babel-loader@8.0.6@babel-loader/lib/index.js!../../node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js??ref--0-0!../../node_modules/_vue-loader@15.7.0@vue-loader/lib/index.js??vue-loader-options!./lottie.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./lottie.vue?vue&type=template&id=168b94a0&scoped=true&\"\nimport script from \"./lottie.vue?vue&type=script&lang=js&\"\nexport * from \"./lottie.vue?vue&type=script&lang=js&\"\nimport style0 from \"./lottie.vue?vue&type=style&index=0&id=168b94a0&lang=scss&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/_vue-loader@15.7.0@vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"168b94a0\",\n  null\n  \n)\n\nexport default component.exports","(typeof navigator !== \"undefined\") && (function(root, factory) {\r\n    if (typeof define === \"function\" && define.amd) {\r\n        define(function() {\r\n            return factory(root);\r\n        });\r\n    } else if (typeof module === \"object\" && module.exports) {\r\n        module.exports = factory(root);\r\n    } else {\r\n        root.lottie = factory(root);\r\n        root.bodymovin = root.lottie;\r\n    }\r\n}((window || {}), function(window) {\r\n    \"use strict\";\r\n    var svgNS = \"http://www.w3.org/2000/svg\";\r\n\r\nvar locationHref = '';\r\n\r\nvar initialDefaultFrame = -999999;\r\n\r\nvar subframeEnabled = true;\r\nvar expressionsPlugin;\r\nvar isSafari = /^((?!chrome|android).)*safari/i.test(navigator.userAgent);\r\nvar cachedColors = {};\r\nvar bm_rounder = Math.round;\r\nvar bm_rnd;\r\nvar bm_pow = Math.pow;\r\nvar bm_sqrt = Math.sqrt;\r\nvar bm_abs = Math.abs;\r\nvar bm_floor = Math.floor;\r\nvar bm_max = Math.max;\r\nvar bm_min = Math.min;\r\nvar blitter = 10;\r\n\r\nvar BMMath = {};\r\n(function(){\r\n    var propertyNames = [\"abs\", \"acos\", \"acosh\", \"asin\", \"asinh\", \"atan\", \"atanh\", \"atan2\", \"ceil\", \"cbrt\", \"expm1\", \"clz32\", \"cos\", \"cosh\", \"exp\", \"floor\", \"fround\", \"hypot\", \"imul\", \"log\", \"log1p\", \"log2\", \"log10\", \"max\", \"min\", \"pow\", \"random\", \"round\", \"sign\", \"sin\", \"sinh\", \"sqrt\", \"tan\", \"tanh\", \"trunc\", \"E\", \"LN10\", \"LN2\", \"LOG10E\", \"LOG2E\", \"PI\", \"SQRT1_2\", \"SQRT2\"];\r\n    var i, len = propertyNames.length;\r\n    for(i=0;i<len;i+=1){\r\n        BMMath[propertyNames[i]] = Math[propertyNames[i]];\r\n    }\r\n}());\r\n\r\nfunction ProjectInterface(){return {};}\r\n\r\nBMMath.random = Math.random;\r\nBMMath.abs = function(val){\r\n    var tOfVal = typeof val;\r\n    if(tOfVal === 'object' && val.length){\r\n        var absArr = createSizedArray(val.length);\r\n        var i, len = val.length;\r\n        for(i=0;i<len;i+=1){\r\n            absArr[i] = Math.abs(val[i]);\r\n        }\r\n        return absArr;\r\n    }\r\n    return Math.abs(val);\r\n\r\n};\r\nvar defaultCurveSegments = 150;\r\nvar degToRads = Math.PI/180;\r\nvar roundCorner = 0.5519;\r\n\r\nfunction roundValues(flag){\r\n    if(flag){\r\n        bm_rnd = Math.round;\r\n    }else{\r\n        bm_rnd = function(val){\r\n            return val;\r\n        };\r\n    }\r\n}\r\nroundValues(false);\r\n\r\nfunction styleDiv(element){\r\n    element.style.position = 'absolute';\r\n    element.style.top = 0;\r\n    element.style.left = 0;\r\n    element.style.display = 'block';\r\n    element.style.transformOrigin = element.style.webkitTransformOrigin = '0 0';\r\n    element.style.backfaceVisibility  = element.style.webkitBackfaceVisibility = 'visible';\r\n    element.style.transformStyle = element.style.webkitTransformStyle = element.style.mozTransformStyle = \"preserve-3d\";\r\n}\r\n\r\nfunction BMEnterFrameEvent(n,c,t,d){\r\n    this.type = n;\r\n    this.currentTime = c;\r\n    this.totalTime = t;\r\n    this.direction = d < 0 ? -1:1;\r\n}\r\n\r\nfunction BMCompleteEvent(n,d){\r\n    this.type = n;\r\n    this.direction = d < 0 ? -1:1;\r\n}\r\n\r\nfunction BMCompleteLoopEvent(n,c,t,d){\r\n    this.type = n;\r\n    this.currentLoop = t;\r\n    this.totalLoops = c;\r\n    this.direction = d < 0 ? -1:1;\r\n}\r\n\r\nfunction BMSegmentStartEvent(n,f,t){\r\n    this.type = n;\r\n    this.firstFrame = f;\r\n    this.totalFrames = t;\r\n}\r\n\r\nfunction BMDestroyEvent(n,t){\r\n    this.type = n;\r\n    this.target = t;\r\n}\r\n\r\nvar createElementID = (function(){\r\n    var _count = 0;\r\n    return function createID() {\r\n        return '__lottie_element_' + ++_count\r\n    }\r\n}())\r\n\r\nfunction HSVtoRGB(h, s, v) {\r\n    var r, g, b, i, f, p, q, t;\r\n    i = Math.floor(h * 6);\r\n    f = h * 6 - i;\r\n    p = v * (1 - s);\r\n    q = v * (1 - f * s);\r\n    t = v * (1 - (1 - f) * s);\r\n    switch (i % 6) {\r\n        case 0: r = v; g = t; b = p; break;\r\n        case 1: r = q; g = v; b = p; break;\r\n        case 2: r = p; g = v; b = t; break;\r\n        case 3: r = p; g = q; b = v; break;\r\n        case 4: r = t; g = p; b = v; break;\r\n        case 5: r = v; g = p; b = q; break;\r\n    }\r\n    return [ r,\r\n        g,\r\n         b ];\r\n}\r\n\r\nfunction RGBtoHSV(r, g, b) {\r\n    var max = Math.max(r, g, b), min = Math.min(r, g, b),\r\n        d = max - min,\r\n        h,\r\n        s = (max === 0 ? 0 : d / max),\r\n        v = max / 255;\r\n\r\n    switch (max) {\r\n        case min: h = 0; break;\r\n        case r: h = (g - b) + d * (g < b ? 6: 0); h /= 6 * d; break;\r\n        case g: h = (b - r) + d * 2; h /= 6 * d; break;\r\n        case b: h = (r - g) + d * 4; h /= 6 * d; break;\r\n    }\r\n\r\n    return [\r\n         h,\r\n         s,\r\n         v\r\n    ];\r\n}\r\n\r\nfunction addSaturationToRGB(color,offset){\r\n    var hsv = RGBtoHSV(color[0]*255,color[1]*255,color[2]*255);\r\n    hsv[1] += offset;\r\n    if (hsv[1] > 1) {\r\n        hsv[1] = 1;\r\n    }\r\n    else if (hsv[1] <= 0) {\r\n        hsv[1] = 0;\r\n    }\r\n    return HSVtoRGB(hsv[0],hsv[1],hsv[2]);\r\n}\r\n\r\nfunction addBrightnessToRGB(color,offset){\r\n    var hsv = RGBtoHSV(color[0]*255,color[1]*255,color[2]*255);\r\n    hsv[2] += offset;\r\n    if (hsv[2] > 1) {\r\n        hsv[2] = 1;\r\n    }\r\n    else if (hsv[2] < 0) {\r\n        hsv[2] = 0;\r\n    }\r\n    return HSVtoRGB(hsv[0],hsv[1],hsv[2]);\r\n}\r\n\r\nfunction addHueToRGB(color,offset) {\r\n    var hsv = RGBtoHSV(color[0]*255,color[1]*255,color[2]*255);\r\n    hsv[0] += offset/360;\r\n    if (hsv[0] > 1) {\r\n        hsv[0] -= 1;\r\n    }\r\n    else if (hsv[0] < 0) {\r\n        hsv[0] += 1;\r\n    }\r\n    return HSVtoRGB(hsv[0],hsv[1],hsv[2]);\r\n}\r\n\r\nvar rgbToHex = (function(){\r\n    var colorMap = [];\r\n    var i;\r\n    var hex;\r\n    for(i=0;i<256;i+=1){\r\n        hex = i.toString(16);\r\n        colorMap[i] = hex.length == 1 ? '0' + hex : hex;\r\n    }\r\n\r\n    return function(r, g, b) {\r\n        if(r<0){\r\n            r = 0;\r\n        }\r\n        if(g<0){\r\n            g = 0;\r\n        }\r\n        if(b<0){\r\n            b = 0;\r\n        }\r\n        return '#' + colorMap[r] + colorMap[g] + colorMap[b];\r\n    };\r\n}());\r\nfunction BaseEvent(){}\r\nBaseEvent.prototype = {\r\n\ttriggerEvent: function (eventName, args) {\r\n\t    if (this._cbs[eventName]) {\r\n\t        var len = this._cbs[eventName].length;\r\n\t        for (var i = 0; i < len; i++){\r\n\t            this._cbs[eventName][i](args);\r\n\t        }\r\n\t    }\r\n\t},\r\n\taddEventListener: function (eventName, callback) {\r\n\t    if (!this._cbs[eventName]){\r\n\t        this._cbs[eventName] = [];\r\n\t    }\r\n\t    this._cbs[eventName].push(callback);\r\n\r\n\t\treturn function() {\r\n\t\t\tthis.removeEventListener(eventName, callback);\r\n\t\t}.bind(this);\r\n\t},\r\n\tremoveEventListener: function (eventName,callback){\r\n\t    if (!callback){\r\n\t        this._cbs[eventName] = null;\r\n\t    }else if(this._cbs[eventName]){\r\n\t        var i = 0, len = this._cbs[eventName].length;\r\n\t        while(i<len){\r\n\t            if(this._cbs[eventName][i] === callback){\r\n\t                this._cbs[eventName].splice(i,1);\r\n\t                i -=1;\r\n\t                len -= 1;\r\n\t            }\r\n\t            i += 1;\r\n\t        }\r\n\t        if(!this._cbs[eventName].length){\r\n\t            this._cbs[eventName] = null;\r\n\t        }\r\n\t    }\r\n\t}\r\n};\r\nvar createTypedArray = (function(){\r\n\tfunction createRegularArray(type, len){\r\n\t\tvar i = 0, arr = [], value;\r\n\t\tswitch(type) {\r\n\t\t\tcase 'int16':\r\n\t\t\tcase 'uint8c':\r\n\t\t\t\tvalue = 1;\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tvalue = 1.1;\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t\tfor(i = 0; i < len; i += 1) {\r\n\t\t\tarr.push(value);\r\n\t\t}\r\n\t\treturn arr;\r\n\t}\r\n\tfunction createTypedArray(type, len){\r\n\t\tif(type === 'float32') {\r\n\t\t\treturn new Float32Array(len);\r\n\t\t} else if(type === 'int16') {\r\n\t\t\treturn new Int16Array(len);\r\n\t\t} else if(type === 'uint8c') {\r\n\t\t\treturn new Uint8ClampedArray(len);\r\n\t\t}\r\n\t}\r\n\tif(typeof Uint8ClampedArray === 'function' && typeof Float32Array === 'function') {\r\n\t\treturn createTypedArray;\r\n\t} else {\r\n\t\treturn createRegularArray;\r\n\t}\r\n}());\r\n\r\nfunction createSizedArray(len) {\r\n\treturn Array.apply(null,{length:len});\r\n}\r\nfunction createNS(type) {\r\n\t//return {appendChild:function(){},setAttribute:function(){},style:{}}\r\n\treturn document.createElementNS(svgNS, type);\r\n}\r\nfunction createTag(type) {\r\n\t//return {appendChild:function(){},setAttribute:function(){},style:{}}\r\n\treturn document.createElement(type);\r\n}\r\nfunction DynamicPropertyContainer(){};\r\nDynamicPropertyContainer.prototype = {\r\n\taddDynamicProperty: function(prop) {\r\n\t\tif(this.dynamicProperties.indexOf(prop) === -1) {\r\n\t        this.dynamicProperties.push(prop);\r\n\t        this.container.addDynamicProperty(this);\r\n\t    \tthis._isAnimated = true;\r\n\t    }\r\n\t},\r\n\titerateDynamicProperties: function(){\r\n\t    this._mdf = false;\r\n\t    var i, len = this.dynamicProperties.length;\r\n\t    for(i=0;i<len;i+=1){\r\n\t        this.dynamicProperties[i].getValue();\r\n\t        if(this.dynamicProperties[i]._mdf) {\r\n\t            this._mdf = true;\r\n\t        }\r\n\t    }\r\n\t},\r\n\tinitDynamicPropertyContainer: function(container){\r\n\t    this.container = container;\r\n\t    this.dynamicProperties = [];\r\n\t    this._mdf = false;\r\n\t    this._isAnimated = false;\r\n\t}\r\n}\r\nvar getBlendMode = (function() {\r\n\r\n\tvar blendModeEnums = {\r\n        0:'source-over',\r\n        1:'multiply',\r\n        2:'screen',\r\n        3:'overlay',\r\n        4:'darken',\r\n        5:'lighten',\r\n        6:'color-dodge',\r\n        7:'color-burn',\r\n        8:'hard-light',\r\n        9:'soft-light',\r\n        10:'difference',\r\n        11:'exclusion',\r\n        12:'hue',\r\n        13:'saturation',\r\n        14:'color',\r\n        15:'luminosity'\r\n    }\r\n\r\n\treturn function(mode) {\r\n\t\treturn blendModeEnums[mode] || '';\r\n\t}\r\n}())\r\n/*!\r\n Transformation Matrix v2.0\r\n (c) Epistemex 2014-2015\r\n www.epistemex.com\r\n By Ken Fyrstenberg\r\n Contributions by leeoniya.\r\n License: MIT, header required.\r\n */\r\n\r\n/**\r\n * 2D transformation matrix object initialized with identity matrix.\r\n *\r\n * The matrix can synchronize a canvas context by supplying the context\r\n * as an argument, or later apply current absolute transform to an\r\n * existing context.\r\n *\r\n * All values are handled as floating point values.\r\n *\r\n * @param {CanvasRenderingContext2D} [context] - Optional context to sync with Matrix\r\n * @prop {number} a - scale x\r\n * @prop {number} b - shear y\r\n * @prop {number} c - shear x\r\n * @prop {number} d - scale y\r\n * @prop {number} e - translate x\r\n * @prop {number} f - translate y\r\n * @prop {CanvasRenderingContext2D|null} [context=null] - set or get current canvas context\r\n * @constructor\r\n */\r\n\r\nvar Matrix = (function(){\r\n\r\n    var _cos = Math.cos;\r\n    var _sin = Math.sin;\r\n    var _tan = Math.tan;\r\n    var _rnd = Math.round;\r\n\r\n    function reset(){\r\n        this.props[0] = 1;\r\n        this.props[1] = 0;\r\n        this.props[2] = 0;\r\n        this.props[3] = 0;\r\n        this.props[4] = 0;\r\n        this.props[5] = 1;\r\n        this.props[6] = 0;\r\n        this.props[7] = 0;\r\n        this.props[8] = 0;\r\n        this.props[9] = 0;\r\n        this.props[10] = 1;\r\n        this.props[11] = 0;\r\n        this.props[12] = 0;\r\n        this.props[13] = 0;\r\n        this.props[14] = 0;\r\n        this.props[15] = 1;\r\n        return this;\r\n    }\r\n\r\n    function rotate(angle) {\r\n        if(angle === 0){\r\n            return this;\r\n        }\r\n        var mCos = _cos(angle);\r\n        var mSin = _sin(angle);\r\n        return this._t(mCos, -mSin,  0, 0, mSin,  mCos, 0, 0, 0,  0,  1, 0, 0, 0, 0, 1);\r\n    }\r\n\r\n    function rotateX(angle){\r\n        if(angle === 0){\r\n            return this;\r\n        }\r\n        var mCos = _cos(angle);\r\n        var mSin = _sin(angle);\r\n        return this._t(1, 0, 0, 0, 0, mCos, -mSin, 0, 0, mSin,  mCos, 0, 0, 0, 0, 1);\r\n    }\r\n\r\n    function rotateY(angle){\r\n        if(angle === 0){\r\n            return this;\r\n        }\r\n        var mCos = _cos(angle);\r\n        var mSin = _sin(angle);\r\n        return this._t(mCos,  0,  mSin, 0, 0, 1, 0, 0, -mSin,  0,  mCos, 0, 0, 0, 0, 1);\r\n    }\r\n\r\n    function rotateZ(angle){\r\n        if(angle === 0){\r\n            return this;\r\n        }\r\n        var mCos = _cos(angle);\r\n        var mSin = _sin(angle);\r\n        return this._t(mCos, -mSin,  0, 0, mSin,  mCos, 0, 0, 0,  0,  1, 0, 0, 0, 0, 1);\r\n    }\r\n\r\n    function shear(sx,sy){\r\n        return this._t(1, sy, sx, 1, 0, 0);\r\n    }\r\n\r\n    function skew(ax, ay){\r\n        return this.shear(_tan(ax), _tan(ay));\r\n    }\r\n\r\n    function skewFromAxis(ax, angle){\r\n        var mCos = _cos(angle);\r\n        var mSin = _sin(angle);\r\n        return this._t(mCos, mSin,  0, 0, -mSin,  mCos, 0, 0, 0,  0,  1, 0, 0, 0, 0, 1)\r\n            ._t(1, 0,  0, 0, _tan(ax),  1, 0, 0, 0,  0,  1, 0, 0, 0, 0, 1)\r\n            ._t(mCos, -mSin,  0, 0, mSin,  mCos, 0, 0, 0,  0,  1, 0, 0, 0, 0, 1);\r\n        //return this._t(mCos, mSin, -mSin, mCos, 0, 0)._t(1, 0, _tan(ax), 1, 0, 0)._t(mCos, -mSin, mSin, mCos, 0, 0);\r\n    }\r\n\r\n    function scale(sx, sy, sz) {\r\n        if(!sz && sz !== 0) {\r\n            sz = 1;\r\n        }\r\n        if(sx === 1 && sy === 1 && sz === 1){\r\n            return this;\r\n        }\r\n        return this._t(sx, 0, 0, 0, 0, sy, 0, 0, 0, 0, sz, 0, 0, 0, 0, 1);\r\n    }\r\n\r\n    function setTransform(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {\r\n        this.props[0] = a;\r\n        this.props[1] = b;\r\n        this.props[2] = c;\r\n        this.props[3] = d;\r\n        this.props[4] = e;\r\n        this.props[5] = f;\r\n        this.props[6] = g;\r\n        this.props[7] = h;\r\n        this.props[8] = i;\r\n        this.props[9] = j;\r\n        this.props[10] = k;\r\n        this.props[11] = l;\r\n        this.props[12] = m;\r\n        this.props[13] = n;\r\n        this.props[14] = o;\r\n        this.props[15] = p;\r\n        return this;\r\n    }\r\n\r\n    function translate(tx, ty, tz) {\r\n        tz = tz || 0;\r\n        if(tx !== 0 || ty !== 0 || tz !== 0){\r\n            return this._t(1,0,0,0,0,1,0,0,0,0,1,0,tx,ty,tz,1);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function transform(a2, b2, c2, d2, e2, f2, g2, h2, i2, j2, k2, l2, m2, n2, o2, p2) {\r\n\r\n        var _p = this.props;\r\n\r\n        if(a2 === 1 && b2 === 0 && c2 === 0 && d2 === 0 && e2 === 0 && f2 === 1 && g2 === 0 && h2 === 0 && i2 === 0 && j2 === 0 && k2 === 1 && l2 === 0){\r\n            //NOTE: commenting this condition because TurboFan deoptimizes code when present\r\n            //if(m2 !== 0 || n2 !== 0 || o2 !== 0){\r\n                _p[12] = _p[12] * a2 + _p[15] * m2;\r\n                _p[13] = _p[13] * f2 + _p[15] * n2;\r\n                _p[14] = _p[14] * k2 + _p[15] * o2;\r\n                _p[15] = _p[15] * p2;\r\n            //}\r\n            this._identityCalculated = false;\r\n            return this;\r\n        }\r\n\r\n        var a1 = _p[0];\r\n        var b1 = _p[1];\r\n        var c1 = _p[2];\r\n        var d1 = _p[3];\r\n        var e1 = _p[4];\r\n        var f1 = _p[5];\r\n        var g1 = _p[6];\r\n        var h1 = _p[7];\r\n        var i1 = _p[8];\r\n        var j1 = _p[9];\r\n        var k1 = _p[10];\r\n        var l1 = _p[11];\r\n        var m1 = _p[12];\r\n        var n1 = _p[13];\r\n        var o1 = _p[14];\r\n        var p1 = _p[15];\r\n\r\n        /* matrix order (canvas compatible):\r\n         * ace\r\n         * bdf\r\n         * 001\r\n         */\r\n        _p[0] = a1 * a2 + b1 * e2 + c1 * i2 + d1 * m2;\r\n        _p[1] = a1 * b2 + b1 * f2 + c1 * j2 + d1 * n2 ;\r\n        _p[2] = a1 * c2 + b1 * g2 + c1 * k2 + d1 * o2 ;\r\n        _p[3] = a1 * d2 + b1 * h2 + c1 * l2 + d1 * p2 ;\r\n\r\n        _p[4] = e1 * a2 + f1 * e2 + g1 * i2 + h1 * m2 ;\r\n        _p[5] = e1 * b2 + f1 * f2 + g1 * j2 + h1 * n2 ;\r\n        _p[6] = e1 * c2 + f1 * g2 + g1 * k2 + h1 * o2 ;\r\n        _p[7] = e1 * d2 + f1 * h2 + g1 * l2 + h1 * p2 ;\r\n\r\n        _p[8] = i1 * a2 + j1 * e2 + k1 * i2 + l1 * m2 ;\r\n        _p[9] = i1 * b2 + j1 * f2 + k1 * j2 + l1 * n2 ;\r\n        _p[10] = i1 * c2 + j1 * g2 + k1 * k2 + l1 * o2 ;\r\n        _p[11] = i1 * d2 + j1 * h2 + k1 * l2 + l1 * p2 ;\r\n\r\n        _p[12] = m1 * a2 + n1 * e2 + o1 * i2 + p1 * m2 ;\r\n        _p[13] = m1 * b2 + n1 * f2 + o1 * j2 + p1 * n2 ;\r\n        _p[14] = m1 * c2 + n1 * g2 + o1 * k2 + p1 * o2 ;\r\n        _p[15] = m1 * d2 + n1 * h2 + o1 * l2 + p1 * p2 ;\r\n\r\n        this._identityCalculated = false;\r\n        return this;\r\n    }\r\n\r\n    function isIdentity() {\r\n        if(!this._identityCalculated){\r\n            this._identity = !(this.props[0] !== 1 || this.props[1] !== 0 || this.props[2] !== 0 || this.props[3] !== 0 || this.props[4] !== 0 || this.props[5] !== 1 || this.props[6] !== 0 || this.props[7] !== 0 || this.props[8] !== 0 || this.props[9] !== 0 || this.props[10] !== 1 || this.props[11] !== 0 || this.props[12] !== 0 || this.props[13] !== 0 || this.props[14] !== 0 || this.props[15] !== 1);\r\n            this._identityCalculated = true;\r\n        }\r\n        return this._identity;\r\n    }\r\n\r\n    function equals(matr){\r\n        var i = 0;\r\n        while (i < 16) {\r\n            if(matr.props[i] !== this.props[i]) {\r\n                return false;\r\n            }\r\n            i+=1;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    function clone(matr){\r\n        var i;\r\n        for(i=0;i<16;i+=1){\r\n            matr.props[i] = this.props[i];\r\n        }\r\n    }\r\n\r\n    function cloneFromProps(props){\r\n        var i;\r\n        for(i=0;i<16;i+=1){\r\n            this.props[i] = props[i];\r\n        }\r\n    }\r\n\r\n    function applyToPoint(x, y, z) {\r\n\r\n        return {\r\n            x: x * this.props[0] + y * this.props[4] + z * this.props[8] + this.props[12],\r\n            y: x * this.props[1] + y * this.props[5] + z * this.props[9] + this.props[13],\r\n            z: x * this.props[2] + y * this.props[6] + z * this.props[10] + this.props[14]\r\n        };\r\n        /*return {\r\n         x: x * me.a + y * me.c + me.e,\r\n         y: x * me.b + y * me.d + me.f\r\n         };*/\r\n    }\r\n    function applyToX(x, y, z) {\r\n        return x * this.props[0] + y * this.props[4] + z * this.props[8] + this.props[12];\r\n    }\r\n    function applyToY(x, y, z) {\r\n        return x * this.props[1] + y * this.props[5] + z * this.props[9] + this.props[13];\r\n    }\r\n    function applyToZ(x, y, z) {\r\n        return x * this.props[2] + y * this.props[6] + z * this.props[10] + this.props[14];\r\n    }\r\n\r\n    function inversePoint(pt) {\r\n        var determinant = this.props[0] * this.props[5] - this.props[1] * this.props[4];\r\n        var a = this.props[5]/determinant;\r\n        var b = - this.props[1]/determinant;\r\n        var c = - this.props[4]/determinant;\r\n        var d = this.props[0]/determinant;\r\n        var e = (this.props[4] * this.props[13] - this.props[5] * this.props[12])/determinant;\r\n        var f = - (this.props[0] * this.props[13] - this.props[1] * this.props[12])/determinant;\r\n        return [pt[0] * a + pt[1] * c + e, pt[0] * b + pt[1] * d + f, 0];\r\n    }\r\n\r\n    function inversePoints(pts){\r\n        var i, len = pts.length, retPts = [];\r\n        for(i=0;i<len;i+=1){\r\n            retPts[i] = inversePoint(pts[i]);\r\n        }\r\n        return retPts;\r\n    }\r\n\r\n    function applyToTriplePoints(pt1, pt2, pt3) {\r\n        var arr = createTypedArray('float32', 6);\r\n        if(this.isIdentity()) {\r\n            arr[0] = pt1[0];\r\n            arr[1] = pt1[1];\r\n            arr[2] = pt2[0];\r\n            arr[3] = pt2[1];\r\n            arr[4] = pt3[0];\r\n            arr[5] = pt3[1];\r\n        } else {\r\n            var p0 = this.props[0], p1 = this.props[1], p4 = this.props[4], p5 = this.props[5], p12 = this.props[12], p13 = this.props[13];\r\n            arr[0] = pt1[0] * p0 + pt1[1] * p4 + p12;\r\n            arr[1] = pt1[0] * p1 + pt1[1] * p5 + p13;\r\n            arr[2] = pt2[0] * p0 + pt2[1] * p4 + p12;\r\n            arr[3] = pt2[0] * p1 + pt2[1] * p5 + p13;\r\n            arr[4] = pt3[0] * p0 + pt3[1] * p4 + p12;\r\n            arr[5] = pt3[0] * p1 + pt3[1] * p5 + p13;\r\n        }\r\n        return arr;\r\n    }\r\n\r\n    function applyToPointArray(x,y,z){\r\n        var arr;\r\n        if(this.isIdentity()) {\r\n            arr = [x,y,z];\r\n        } else {\r\n            arr = [x * this.props[0] + y * this.props[4] + z * this.props[8] + this.props[12],x * this.props[1] + y * this.props[5] + z * this.props[9] + this.props[13],x * this.props[2] + y * this.props[6] + z * this.props[10] + this.props[14]];\r\n        }\r\n        return arr;\r\n    }\r\n\r\n    function applyToPointStringified(x, y) {\r\n        if(this.isIdentity()) {\r\n            return x + ',' + y;\r\n        }\r\n        var _p = this.props;\r\n        return Math.round((x * _p[0] + y * _p[4] + _p[12]) * 100) / 100+','+ Math.round((x * _p[1] + y * _p[5] + _p[13]) * 100) / 100;\r\n    }\r\n\r\n    function toCSS() {\r\n        //Doesn't make much sense to add this optimization. If it is an identity matrix, it's very likely this will get called only once since it won't be keyframed.\r\n        /*if(this.isIdentity()) {\r\n            return '';\r\n        }*/\r\n        var i = 0;\r\n        var props = this.props;\r\n        var cssValue = 'matrix3d(';\r\n        var v = 10000;\r\n        while(i<16){\r\n            cssValue += _rnd(props[i]*v)/v;\r\n            cssValue += i === 15 ? ')':',';\r\n            i += 1;\r\n        }\r\n        return cssValue;\r\n    }\r\n\r\n    function roundMatrixProperty(val) {\r\n        var v = 10000;\r\n        if((val < 0.000001 && val > 0) || (val > -0.000001 && val < 0)) {\r\n            return _rnd(val * v) / v;\r\n        }\r\n        return val;\r\n    }\r\n\r\n    function to2dCSS() {\r\n        //Doesn't make much sense to add this optimization. If it is an identity matrix, it's very likely this will get called only once since it won't be keyframed.\r\n        /*if(this.isIdentity()) {\r\n            return '';\r\n        }*/\r\n        var props = this.props;\r\n        var _a = roundMatrixProperty(props[0]);\r\n        var _b = roundMatrixProperty(props[1]);\r\n        var _c = roundMatrixProperty(props[4]);\r\n        var _d = roundMatrixProperty(props[5]);\r\n        var _e = roundMatrixProperty(props[12]);\r\n        var _f = roundMatrixProperty(props[13]);\r\n        return \"matrix(\" + _a + ',' + _b + ',' + _c + ',' + _d + ',' + _e + ',' + _f + \")\";\r\n    }\r\n\r\n    return function(){\r\n        this.reset = reset;\r\n        this.rotate = rotate;\r\n        this.rotateX = rotateX;\r\n        this.rotateY = rotateY;\r\n        this.rotateZ = rotateZ;\r\n        this.skew = skew;\r\n        this.skewFromAxis = skewFromAxis;\r\n        this.shear = shear;\r\n        this.scale = scale;\r\n        this.setTransform = setTransform;\r\n        this.translate = translate;\r\n        this.transform = transform;\r\n        this.applyToPoint = applyToPoint;\r\n        this.applyToX = applyToX;\r\n        this.applyToY = applyToY;\r\n        this.applyToZ = applyToZ;\r\n        this.applyToPointArray = applyToPointArray;\r\n        this.applyToTriplePoints = applyToTriplePoints;\r\n        this.applyToPointStringified = applyToPointStringified;\r\n        this.toCSS = toCSS;\r\n        this.to2dCSS = to2dCSS;\r\n        this.clone = clone;\r\n        this.cloneFromProps = cloneFromProps;\r\n        this.equals = equals;\r\n        this.inversePoints = inversePoints;\r\n        this.inversePoint = inversePoint;\r\n        this._t = this.transform;\r\n        this.isIdentity = isIdentity;\r\n        this._identity = true;\r\n        this._identityCalculated = false;\r\n\r\n        this.props = createTypedArray('float32', 16);\r\n        this.reset();\r\n    };\r\n}());\r\n\r\n/*\r\n Copyright 2014 David Bau.\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining\r\n a copy of this software and associated documentation files (the\r\n \"Software\"), to deal in the Software without restriction, including\r\n without limitation the rights to use, copy, modify, merge, publish,\r\n distribute, sublicense, and/or sell copies of the Software, and to\r\n permit persons to whom the Software is furnished to do so, subject to\r\n the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be\r\n included in all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\r\n EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\r\n MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\r\n IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\r\n CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\r\n TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\r\n SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n\r\n */\r\n\r\n(function (pool, math) {\r\n//\r\n// The following constants are related to IEEE 754 limits.\r\n//\r\n    var global = this,\r\n        width = 256,        // each RC4 output is 0 <= x < 256\r\n        chunks = 6,         // at least six RC4 outputs for each double\r\n        digits = 52,        // there are 52 significant digits in a double\r\n        rngname = 'random', // rngname: name for Math.random and Math.seedrandom\r\n        startdenom = math.pow(width, chunks),\r\n        significance = math.pow(2, digits),\r\n        overflow = significance * 2,\r\n        mask = width - 1,\r\n        nodecrypto;         // node.js crypto module, initialized at the bottom.\r\n\r\n//\r\n// seedrandom()\r\n// This is the seedrandom function described above.\r\n//\r\n    function seedrandom(seed, options, callback) {\r\n        var key = [];\r\n        options = (options === true) ? { entropy: true } : (options || {});\r\n\r\n        // Flatten the seed string or build one from local entropy if needed.\r\n        var shortseed = mixkey(flatten(\r\n            options.entropy ? [seed, tostring(pool)] :\r\n                (seed === null) ? autoseed() : seed, 3), key);\r\n\r\n        // Use the seed to initialize an ARC4 generator.\r\n        var arc4 = new ARC4(key);\r\n\r\n        // This function returns a random double in [0, 1) that contains\r\n        // randomness in every bit of the mantissa of the IEEE 754 value.\r\n        var prng = function() {\r\n            var n = arc4.g(chunks),             // Start with a numerator n < 2 ^ 48\r\n                d = startdenom,                 //   and denominator d = 2 ^ 48.\r\n                x = 0;                          //   and no 'extra last byte'.\r\n            while (n < significance) {          // Fill up all significant digits by\r\n                n = (n + x) * width;              //   shifting numerator and\r\n                d *= width;                       //   denominator and generating a\r\n                x = arc4.g(1);                    //   new least-significant-byte.\r\n            }\r\n            while (n >= overflow) {             // To avoid rounding up, before adding\r\n                n /= 2;                           //   last byte, shift everything\r\n                d /= 2;                           //   right using integer math until\r\n                x >>>= 1;                         //   we have exactly the desired bits.\r\n            }\r\n            return (n + x) / d;                 // Form the number within [0, 1).\r\n        };\r\n\r\n        prng.int32 = function() { return arc4.g(4) | 0; };\r\n        prng.quick = function() { return arc4.g(4) / 0x100000000; };\r\n        prng.double = prng;\r\n\r\n        // Mix the randomness into accumulated entropy.\r\n        mixkey(tostring(arc4.S), pool);\r\n\r\n        // Calling convention: what to return as a function of prng, seed, is_math.\r\n        return (options.pass || callback ||\r\n        function(prng, seed, is_math_call, state) {\r\n            if (state) {\r\n                // Load the arc4 state from the given state if it has an S array.\r\n                if (state.S) { copy(state, arc4); }\r\n                // Only provide the .state method if requested via options.state.\r\n                prng.state = function() { return copy(arc4, {}); };\r\n            }\r\n\r\n            // If called as a method of Math (Math.seedrandom()), mutate\r\n            // Math.random because that is how seedrandom.js has worked since v1.0.\r\n            if (is_math_call) { math[rngname] = prng; return seed; }\r\n\r\n            // Otherwise, it is a newer calling convention, so return the\r\n            // prng directly.\r\n            else return prng;\r\n        })(\r\n            prng,\r\n            shortseed,\r\n            'global' in options ? options.global : (this == math),\r\n            options.state);\r\n    }\r\n    math['seed' + rngname] = seedrandom;\r\n\r\n//\r\n// ARC4\r\n//\r\n// An ARC4 implementation.  The constructor takes a key in the form of\r\n// an array of at most (width) integers that should be 0 <= x < (width).\r\n//\r\n// The g(count) method returns a pseudorandom integer that concatenates\r\n// the next (count) outputs from ARC4.  Its return value is a number x\r\n// that is in the range 0 <= x < (width ^ count).\r\n//\r\n    function ARC4(key) {\r\n        var t, keylen = key.length,\r\n            me = this, i = 0, j = me.i = me.j = 0, s = me.S = [];\r\n\r\n        // The empty key [] is treated as [0].\r\n        if (!keylen) { key = [keylen++]; }\r\n\r\n        // Set up S using the standard key scheduling algorithm.\r\n        while (i < width) {\r\n            s[i] = i++;\r\n        }\r\n        for (i = 0; i < width; i++) {\r\n            s[i] = s[j = mask & (j + key[i % keylen] + (t = s[i]))];\r\n            s[j] = t;\r\n        }\r\n\r\n        // The \"g\" method returns the next (count) outputs as one number.\r\n        me.g = function(count) {\r\n            // Using instance members instead of closure state nearly doubles speed.\r\n            var t, r = 0,\r\n                i = me.i, j = me.j, s = me.S;\r\n            while (count--) {\r\n                t = s[i = mask & (i + 1)];\r\n                r = r * width + s[mask & ((s[i] = s[j = mask & (j + t)]) + (s[j] = t))];\r\n            }\r\n            me.i = i; me.j = j;\r\n            return r;\r\n            // For robust unpredictability, the function call below automatically\r\n            // discards an initial batch of values.  This is called RC4-drop[256].\r\n            // See http://google.com/search?q=rsa+fluhrer+response&btnI\r\n        };\r\n    }\r\n\r\n//\r\n// copy()\r\n// Copies internal state of ARC4 to or from a plain object.\r\n//\r\n    function copy(f, t) {\r\n        t.i = f.i;\r\n        t.j = f.j;\r\n        t.S = f.S.slice();\r\n        return t;\r\n    }\r\n\r\n//\r\n// flatten()\r\n// Converts an object tree to nested arrays of strings.\r\n//\r\n    function flatten(obj, depth) {\r\n        var result = [], typ = (typeof obj), prop;\r\n        if (depth && typ == 'object') {\r\n            for (prop in obj) {\r\n                try { result.push(flatten(obj[prop], depth - 1)); } catch (e) {}\r\n            }\r\n        }\r\n        return (result.length ? result : typ == 'string' ? obj : obj + '\\0');\r\n    }\r\n\r\n//\r\n// mixkey()\r\n// Mixes a string seed into a key that is an array of integers, and\r\n// returns a shortened string seed that is equivalent to the result key.\r\n//\r\n    function mixkey(seed, key) {\r\n        var stringseed = seed + '', smear, j = 0;\r\n        while (j < stringseed.length) {\r\n            key[mask & j] =\r\n                mask & ((smear ^= key[mask & j] * 19) + stringseed.charCodeAt(j++));\r\n        }\r\n        return tostring(key);\r\n    }\r\n\r\n//\r\n// autoseed()\r\n// Returns an object for autoseeding, using window.crypto and Node crypto\r\n// module if available.\r\n//\r\n    function autoseed() {\r\n        try {\r\n            if (nodecrypto) { return tostring(nodecrypto.randomBytes(width)); }\r\n            var out = new Uint8Array(width);\r\n            (global.crypto || global.msCrypto).getRandomValues(out);\r\n            return tostring(out);\r\n        } catch (e) {\r\n            var browser = global.navigator,\r\n                plugins = browser && browser.plugins;\r\n            return [+new Date(), global, plugins, global.screen, tostring(pool)];\r\n        }\r\n    }\r\n\r\n//\r\n// tostring()\r\n// Converts an array of charcodes to a string\r\n//\r\n    function tostring(a) {\r\n        return String.fromCharCode.apply(0, a);\r\n    }\r\n\r\n//\r\n// When seedrandom.js is loaded, we immediately mix a few bits\r\n// from the built-in RNG into the entropy pool.  Because we do\r\n// not want to interfere with deterministic PRNG state later,\r\n// seedrandom will not call math.random on its own again after\r\n// initialization.\r\n//\r\n    mixkey(math.random(), pool);\r\n\r\n//\r\n// Nodejs and AMD support: export the implementation as a module using\r\n// either convention.\r\n//\r\n\r\n// End anonymous scope, and pass initial values.\r\n})(\r\n    [],     // pool: entropy pool starts empty\r\n    BMMath    // math: package containing random, pow, and seedrandom\r\n);\r\nvar BezierFactory = (function(){\r\n    /**\r\n     * BezierEasing - use bezier curve for transition easing function\r\n     * by Gaëtan Renaudeau 2014 - 2015 – MIT License\r\n     *\r\n     * Credits: is based on Firefox's nsSMILKeySpline.cpp\r\n     * Usage:\r\n     * var spline = BezierEasing([ 0.25, 0.1, 0.25, 1.0 ])\r\n     * spline.get(x) => returns the easing value | x must be in [0, 1] range\r\n     *\r\n     */\r\n\r\n        var ob = {};\r\n    ob.getBezierEasing = getBezierEasing;\r\n    var beziers = {};\r\n\r\n    function getBezierEasing(a,b,c,d,nm){\r\n        var str = nm || ('bez_' + a+'_'+b+'_'+c+'_'+d).replace(/\\./g, 'p');\r\n        if(beziers[str]){\r\n            return beziers[str];\r\n        }\r\n        var bezEasing = new BezierEasing([a,b,c,d]);\r\n        beziers[str] = bezEasing;\r\n        return bezEasing;\r\n    }\r\n\r\n// These values are established by empiricism with tests (tradeoff: performance VS precision)\r\n    var NEWTON_ITERATIONS = 4;\r\n    var NEWTON_MIN_SLOPE = 0.001;\r\n    var SUBDIVISION_PRECISION = 0.0000001;\r\n    var SUBDIVISION_MAX_ITERATIONS = 10;\r\n\r\n    var kSplineTableSize = 11;\r\n    var kSampleStepSize = 1.0 / (kSplineTableSize - 1.0);\r\n\r\n    var float32ArraySupported = typeof Float32Array === \"function\";\r\n\r\n    function A (aA1, aA2) { return 1.0 - 3.0 * aA2 + 3.0 * aA1; }\r\n    function B (aA1, aA2) { return 3.0 * aA2 - 6.0 * aA1; }\r\n    function C (aA1)      { return 3.0 * aA1; }\r\n\r\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\r\n    function calcBezier (aT, aA1, aA2) {\r\n        return ((A(aA1, aA2)*aT + B(aA1, aA2))*aT + C(aA1))*aT;\r\n    }\r\n\r\n// Returns dx/dt given t, x1, and x2, or dy/dt given t, y1, and y2.\r\n    function getSlope (aT, aA1, aA2) {\r\n        return 3.0 * A(aA1, aA2)*aT*aT + 2.0 * B(aA1, aA2) * aT + C(aA1);\r\n    }\r\n\r\n    function binarySubdivide (aX, aA, aB, mX1, mX2) {\r\n        var currentX, currentT, i = 0;\r\n        do {\r\n            currentT = aA + (aB - aA) / 2.0;\r\n            currentX = calcBezier(currentT, mX1, mX2) - aX;\r\n            if (currentX > 0.0) {\r\n                aB = currentT;\r\n            } else {\r\n                aA = currentT;\r\n            }\r\n        } while (Math.abs(currentX) > SUBDIVISION_PRECISION && ++i < SUBDIVISION_MAX_ITERATIONS);\r\n        return currentT;\r\n    }\r\n\r\n    function newtonRaphsonIterate (aX, aGuessT, mX1, mX2) {\r\n        for (var i = 0; i < NEWTON_ITERATIONS; ++i) {\r\n            var currentSlope = getSlope(aGuessT, mX1, mX2);\r\n            if (currentSlope === 0.0) return aGuessT;\r\n            var currentX = calcBezier(aGuessT, mX1, mX2) - aX;\r\n            aGuessT -= currentX / currentSlope;\r\n        }\r\n        return aGuessT;\r\n    }\r\n\r\n    /**\r\n     * points is an array of [ mX1, mY1, mX2, mY2 ]\r\n     */\r\n    function BezierEasing (points) {\r\n        this._p = points;\r\n        this._mSampleValues = float32ArraySupported ? new Float32Array(kSplineTableSize) : new Array(kSplineTableSize);\r\n        this._precomputed = false;\r\n\r\n        this.get = this.get.bind(this);\r\n    }\r\n\r\n    BezierEasing.prototype = {\r\n\r\n        get: function (x) {\r\n            var mX1 = this._p[0],\r\n                mY1 = this._p[1],\r\n                mX2 = this._p[2],\r\n                mY2 = this._p[3];\r\n            if (!this._precomputed) this._precompute();\r\n            if (mX1 === mY1 && mX2 === mY2) return x; // linear\r\n            // Because JavaScript number are imprecise, we should guarantee the extremes are right.\r\n            if (x === 0) return 0;\r\n            if (x === 1) return 1;\r\n            return calcBezier(this._getTForX(x), mY1, mY2);\r\n        },\r\n\r\n        // Private part\r\n\r\n        _precompute: function () {\r\n            var mX1 = this._p[0],\r\n                mY1 = this._p[1],\r\n                mX2 = this._p[2],\r\n                mY2 = this._p[3];\r\n            this._precomputed = true;\r\n            if (mX1 !== mY1 || mX2 !== mY2)\r\n                this._calcSampleValues();\r\n        },\r\n\r\n        _calcSampleValues: function () {\r\n            var mX1 = this._p[0],\r\n                mX2 = this._p[2];\r\n            for (var i = 0; i < kSplineTableSize; ++i) {\r\n                this._mSampleValues[i] = calcBezier(i * kSampleStepSize, mX1, mX2);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * getTForX chose the fastest heuristic to determine the percentage value precisely from a given X projection.\r\n         */\r\n        _getTForX: function (aX) {\r\n            var mX1 = this._p[0],\r\n                mX2 = this._p[2],\r\n                mSampleValues = this._mSampleValues;\r\n\r\n            var intervalStart = 0.0;\r\n            var currentSample = 1;\r\n            var lastSample = kSplineTableSize - 1;\r\n\r\n            for (; currentSample !== lastSample && mSampleValues[currentSample] <= aX; ++currentSample) {\r\n                intervalStart += kSampleStepSize;\r\n            }\r\n            --currentSample;\r\n\r\n            // Interpolate to provide an initial guess for t\r\n            var dist = (aX - mSampleValues[currentSample]) / (mSampleValues[currentSample+1] - mSampleValues[currentSample]);\r\n            var guessForT = intervalStart + dist * kSampleStepSize;\r\n\r\n            var initialSlope = getSlope(guessForT, mX1, mX2);\r\n            if (initialSlope >= NEWTON_MIN_SLOPE) {\r\n                return newtonRaphsonIterate(aX, guessForT, mX1, mX2);\r\n            } else if (initialSlope === 0.0) {\r\n                return guessForT;\r\n            } else {\r\n                return binarySubdivide(aX, intervalStart, intervalStart + kSampleStepSize, mX1, mX2);\r\n            }\r\n        }\r\n    };\r\n\r\n    return ob;\r\n\r\n}());\r\n(function () {\r\n    var lastTime = 0;\r\n    var vendors = ['ms', 'moz', 'webkit', 'o'];\r\n    for(var x = 0; x < vendors.length && !window.requestAnimationFrame; ++x) {\r\n        window.requestAnimationFrame = window[vendors[x] + 'RequestAnimationFrame'];\r\n        window.cancelAnimationFrame = window[vendors[x] + 'CancelAnimationFrame'] || window[vendors[x] + 'CancelRequestAnimationFrame'];\r\n    }\r\n    if(!window.requestAnimationFrame)\r\n        window.requestAnimationFrame = function (callback, element) {\r\n            var currTime = new Date().getTime();\r\n            var timeToCall = Math.max(0, 16 - (currTime - lastTime));\r\n            var id = setTimeout(function () {\r\n                    callback(currTime + timeToCall);\r\n                },\r\n                timeToCall);\r\n            lastTime = currTime + timeToCall;\r\n            return id;\r\n        };\r\n    if(!window.cancelAnimationFrame)\r\n        window.cancelAnimationFrame = function (id) {\r\n            clearTimeout(id);\r\n        };\r\n}());\r\n\r\nfunction extendPrototype(sources,destination){\r\n    var i, len = sources.length, sourcePrototype;\r\n    for (i = 0;i < len;i += 1) {\r\n        sourcePrototype = sources[i].prototype;\r\n        for (var attr in sourcePrototype) {\r\n            if (sourcePrototype.hasOwnProperty(attr)) destination.prototype[attr] = sourcePrototype[attr];\r\n        }\r\n    }\r\n}\r\n\r\nfunction getDescriptor(object, prop) {\r\n    return Object.getOwnPropertyDescriptor(object, prop);\r\n}\r\n\r\nfunction createProxyFunction(prototype) {\r\n\tfunction ProxyFunction(){}\r\n\tProxyFunction.prototype = prototype;\r\n\treturn ProxyFunction;\r\n}\r\nfunction bezFunction(){\r\n\r\n    var easingFunctions = [];\r\n    var math = Math;\r\n\r\n    function pointOnLine2D(x1,y1, x2,y2, x3,y3){\r\n        var det1 = (x1*y2) + (y1*x3) + (x2*y3) - (x3*y2) - (y3*x1) - (x2*y1);\r\n        return det1 > -0.001 && det1 < 0.001;\r\n    }\r\n\r\n    function pointOnLine3D(x1,y1,z1, x2,y2,z2, x3,y3,z3){\r\n        if(z1 === 0 && z2 === 0 && z3 === 0) {\r\n            return pointOnLine2D(x1,y1, x2,y2, x3,y3);\r\n        }\r\n        var dist1 = Math.sqrt(Math.pow(x2 - x1, 2) + Math.pow(y2 - y1, 2) + Math.pow(z2 - z1, 2));\r\n        var dist2 = Math.sqrt(Math.pow(x3 - x1, 2) + Math.pow(y3 - y1, 2) + Math.pow(z3 - z1, 2));\r\n        var dist3 = Math.sqrt(Math.pow(x3 - x2, 2) + Math.pow(y3 - y2, 2) + Math.pow(z3 - z2, 2));\r\n        var diffDist;\r\n        if(dist1 > dist2){\r\n            if(dist1 > dist3){\r\n                diffDist = dist1 - dist2 - dist3;\r\n            } else {\r\n                diffDist = dist3 - dist2 - dist1;\r\n            }\r\n        } else if(dist3 > dist2){\r\n            diffDist = dist3 - dist2 - dist1;\r\n        } else {\r\n            diffDist = dist2 - dist1 - dist3;\r\n        }\r\n        return diffDist > -0.0001 && diffDist < 0.0001;\r\n    }\r\n\r\n    var getBezierLength = (function(){\r\n\r\n        return function(pt1,pt2,pt3,pt4){\r\n            var curveSegments = defaultCurveSegments;\r\n            var k;\r\n            var i, len;\r\n            var ptCoord,perc,addedLength = 0;\r\n            var ptDistance;\r\n            var point = [],lastPoint = [];\r\n            var lengthData = bezier_length_pool.newElement();\r\n            len = pt3.length;\r\n            for(k=0;k<curveSegments;k+=1){\r\n                perc = k/(curveSegments-1);\r\n                ptDistance = 0;\r\n                for(i=0;i<len;i+=1){\r\n                    ptCoord = bm_pow(1-perc,3)*pt1[i]+3*bm_pow(1-perc,2)*perc*pt3[i]+3*(1-perc)*bm_pow(perc,2)*pt4[i]+bm_pow(perc,3)*pt2[i];\r\n                    point[i] = ptCoord;\r\n                    if(lastPoint[i] !== null){\r\n                        ptDistance += bm_pow(point[i] - lastPoint[i],2);\r\n                    }\r\n                    lastPoint[i] = point[i];\r\n                }\r\n                if(ptDistance){\r\n                    ptDistance = bm_sqrt(ptDistance);\r\n                    addedLength += ptDistance;\r\n                }\r\n                lengthData.percents[k] = perc;\r\n                lengthData.lengths[k] = addedLength;\r\n            }\r\n            lengthData.addedLength = addedLength;\r\n            return lengthData;\r\n        };\r\n    }());\r\n\r\n    function getSegmentsLength(shapeData) {\r\n        var segmentsLength = segments_length_pool.newElement();\r\n        var closed = shapeData.c;\r\n        var pathV = shapeData.v;\r\n        var pathO = shapeData.o;\r\n        var pathI = shapeData.i;\r\n        var i, len = shapeData._length;\r\n        var lengths = segmentsLength.lengths;\r\n        var totalLength = 0;\r\n        for(i=0;i<len-1;i+=1){\r\n            lengths[i] = getBezierLength(pathV[i],pathV[i+1],pathO[i],pathI[i+1]);\r\n            totalLength += lengths[i].addedLength;\r\n        }\r\n        if(closed && len){\r\n            lengths[i] = getBezierLength(pathV[i],pathV[0],pathO[i],pathI[0]);\r\n            totalLength += lengths[i].addedLength;\r\n        }\r\n        segmentsLength.totalLength = totalLength;\r\n        return segmentsLength;\r\n    }\r\n\r\n    function BezierData(length){\r\n        this.segmentLength = 0;\r\n        this.points = new Array(length);\r\n    }\r\n\r\n    function PointData(partial,point){\r\n        this.partialLength = partial;\r\n        this.point = point;\r\n    }\r\n\r\n    var buildBezierData = (function(){\r\n\r\n        var storedData = {};\r\n\r\n        return function (pt1, pt2, pt3, pt4){\r\n            var bezierName = (pt1[0]+'_'+pt1[1]+'_'+pt2[0]+'_'+pt2[1]+'_'+pt3[0]+'_'+pt3[1]+'_'+pt4[0]+'_'+pt4[1]).replace(/\\./g, 'p');\r\n            if(!storedData[bezierName]){\r\n                var curveSegments = defaultCurveSegments;\r\n                var k, i, len;\r\n                var ptCoord,perc,addedLength = 0;\r\n                var ptDistance;\r\n                var point,lastPoint = null;\r\n                if (pt1.length === 2 && (pt1[0] != pt2[0] || pt1[1] != pt2[1]) && pointOnLine2D(pt1[0],pt1[1],pt2[0],pt2[1],pt1[0]+pt3[0],pt1[1]+pt3[1]) && pointOnLine2D(pt1[0],pt1[1],pt2[0],pt2[1],pt2[0]+pt4[0],pt2[1]+pt4[1])){\r\n                    curveSegments = 2;\r\n                }\r\n                var bezierData = new BezierData(curveSegments);\r\n                len = pt3.length;\r\n                for (k = 0; k < curveSegments; k += 1) {\r\n                    point = createSizedArray(len);\r\n                    perc = k / (curveSegments - 1);\r\n                    ptDistance = 0;\r\n                    for (i = 0; i < len; i += 1){\r\n                        ptCoord = bm_pow(1-perc,3)*pt1[i]+3*bm_pow(1-perc,2)*perc*(pt1[i] + pt3[i])+3*(1-perc)*bm_pow(perc,2)*(pt2[i] + pt4[i])+bm_pow(perc,3)*pt2[i];\r\n                        point[i] = ptCoord;\r\n                        if(lastPoint !== null){\r\n                            ptDistance += bm_pow(point[i] - lastPoint[i],2);\r\n                        }\r\n                    }\r\n                    ptDistance = bm_sqrt(ptDistance);\r\n                    addedLength += ptDistance;\r\n                    bezierData.points[k] = new PointData(ptDistance, point);\r\n                    lastPoint = point;\r\n                }\r\n                bezierData.segmentLength = addedLength;\r\n                storedData[bezierName] = bezierData;\r\n            }\r\n            return storedData[bezierName];\r\n        };\r\n    }());\r\n\r\n    function getDistancePerc(perc,bezierData){\r\n        var percents = bezierData.percents;\r\n        var lengths = bezierData.lengths;\r\n        var len = percents.length;\r\n        var initPos = bm_floor((len-1)*perc);\r\n        var lengthPos = perc*bezierData.addedLength;\r\n        var lPerc = 0;\r\n        if(initPos === len - 1 || initPos === 0 || lengthPos === lengths[initPos]){\r\n            return percents[initPos];\r\n        }else{\r\n            var dir = lengths[initPos] > lengthPos ? -1 : 1;\r\n            var flag = true;\r\n            while(flag){\r\n                if(lengths[initPos] <= lengthPos && lengths[initPos+1] > lengthPos){\r\n                    lPerc = (lengthPos - lengths[initPos]) / (lengths[initPos+1] - lengths[initPos]);\r\n                    flag = false;\r\n                }else{\r\n                    initPos += dir;\r\n                }\r\n                if(initPos < 0 || initPos >= len - 1){\r\n                    //FIX for TypedArrays that don't store floating point values with enough accuracy\r\n                    if(initPos === len - 1) {\r\n                        return percents[initPos];\r\n                    }\r\n                    flag = false;\r\n                }\r\n            }\r\n            return percents[initPos] + (percents[initPos+1] - percents[initPos])*lPerc;\r\n        }\r\n    }\r\n\r\n    function getPointInSegment(pt1, pt2, pt3, pt4, percent, bezierData) {\r\n        var t1 = getDistancePerc(percent,bezierData);\r\n        var u0 = 1;\r\n        var u1 = 1 - t1;\r\n        var ptX = Math.round((u1*u1*u1* pt1[0] + (t1*u1*u1 + u1*t1*u1 + u1*u1*t1)* pt3[0] + (t1*t1*u1 + u1*t1*t1 + t1*u1*t1)*pt4[0] + t1*t1*t1* pt2[0])* 1000) / 1000;\r\n        var ptY = Math.round((u1*u1*u1* pt1[1] + (t1*u1*u1 + u1*t1*u1 + u1*u1*t1)* pt3[1] + (t1*t1*u1 + u1*t1*t1 + t1*u1*t1)*pt4[1] + t1*t1*t1* pt2[1])* 1000) / 1000;\r\n        return [ptX, ptY];\r\n    }\r\n\r\n    function getSegmentArray() {\r\n\r\n    }\r\n\r\n    var bezier_segment_points = createTypedArray('float32', 8);\r\n\r\n    function getNewSegment(pt1,pt2,pt3,pt4,startPerc,endPerc, bezierData){\r\n\r\n        startPerc = startPerc < 0 ? 0 : startPerc > 1 ? 1 : startPerc;\r\n        var t0 = getDistancePerc(startPerc,bezierData);\r\n        endPerc = endPerc > 1 ? 1 : endPerc;\r\n        var t1 = getDistancePerc(endPerc,bezierData);\r\n        var i, len = pt1.length;\r\n        var u0 = 1 - t0;\r\n        var u1 = 1 - t1;\r\n        var u0u0u0 = u0*u0*u0;\r\n        var t0u0u0_3 = t0*u0*u0*3;\r\n        var t0t0u0_3 = t0*t0*u0*3;\r\n        var t0t0t0 = t0*t0*t0;\r\n        //\r\n        var u0u0u1 = u0*u0*u1;\r\n        var t0u0u1_3 = t0*u0*u1 + u0*t0*u1 + u0*u0*t1;\r\n        var t0t0u1_3 = t0*t0*u1 + u0*t0*t1 + t0*u0*t1;\r\n        var t0t0t1 = t0*t0*t1;\r\n        //\r\n        var u0u1u1 = u0*u1*u1;\r\n        var t0u1u1_3 = t0*u1*u1 + u0*t1*u1 + u0*u1*t1;\r\n        var t0t1u1_3 = t0*t1*u1 + u0*t1*t1 + t0*u1*t1;\r\n        var t0t1t1 = t0*t1*t1;\r\n        //\r\n        var u1u1u1 = u1*u1*u1;\r\n        var t1u1u1_3 = t1*u1*u1 + u1*t1*u1 + u1*u1*t1;\r\n        var t1t1u1_3 = t1*t1*u1 + u1*t1*t1 + t1*u1*t1;\r\n        var t1t1t1 = t1*t1*t1;\r\n        for(i=0;i<len;i+=1){\r\n            bezier_segment_points[i * 4] = Math.round((u0u0u0 * pt1[i] + t0u0u0_3 * pt3[i] + t0t0u0_3 * pt4[i] + t0t0t0 * pt2[i]) * 1000) / 1000;\r\n            bezier_segment_points[i * 4 + 1] = Math.round((u0u0u1 * pt1[i] + t0u0u1_3 * pt3[i] + t0t0u1_3 * pt4[i] + t0t0t1 * pt2[i]) * 1000) / 1000;\r\n            bezier_segment_points[i * 4 + 2] = Math.round((u0u1u1 * pt1[i] + t0u1u1_3 * pt3[i] + t0t1u1_3 * pt4[i] + t0t1t1 * pt2[i]) * 1000) / 1000;\r\n            bezier_segment_points[i * 4 + 3] = Math.round((u1u1u1 * pt1[i] + t1u1u1_3 * pt3[i] + t1t1u1_3 * pt4[i] + t1t1t1 * pt2[i]) * 1000) / 1000;\r\n        }\r\n\r\n        return bezier_segment_points;\r\n    }\r\n\r\n    return {\r\n        getSegmentsLength : getSegmentsLength,\r\n        getNewSegment : getNewSegment,\r\n        getPointInSegment : getPointInSegment,\r\n        buildBezierData : buildBezierData,\r\n        pointOnLine2D : pointOnLine2D,\r\n        pointOnLine3D : pointOnLine3D\r\n    };\r\n}\r\n\r\nvar bez = bezFunction();\r\nfunction dataFunctionManager(){\r\n\r\n    //var tCanvasHelper = createTag('canvas').getContext('2d');\r\n\r\n    function completeLayers(layers, comps, fontManager){\r\n        var layerData;\r\n        var animArray, lastFrame;\r\n        var i, len = layers.length;\r\n        var j, jLen, k, kLen;\r\n        for(i=0;i<len;i+=1){\r\n            layerData = layers[i];\r\n            if(!('ks' in layerData) || layerData.completed){\r\n                continue;\r\n            }\r\n            layerData.completed = true;\r\n            if(layerData.tt){\r\n                layers[i-1].td = layerData.tt;\r\n            }\r\n            animArray = [];\r\n            lastFrame = -1;\r\n            if(layerData.hasMask){\r\n                var maskProps = layerData.masksProperties;\r\n                jLen = maskProps.length;\r\n                for(j=0;j<jLen;j+=1){\r\n                    if(maskProps[j].pt.k.i){\r\n                        convertPathsToAbsoluteValues(maskProps[j].pt.k);\r\n                    }else{\r\n                        kLen = maskProps[j].pt.k.length;\r\n                        for(k=0;k<kLen;k+=1){\r\n                            if(maskProps[j].pt.k[k].s){\r\n                                convertPathsToAbsoluteValues(maskProps[j].pt.k[k].s[0]);\r\n                            }\r\n                            if(maskProps[j].pt.k[k].e){\r\n                                convertPathsToAbsoluteValues(maskProps[j].pt.k[k].e[0]);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            if(layerData.ty===0){\r\n                layerData.layers = findCompLayers(layerData.refId, comps);\r\n                completeLayers(layerData.layers,comps, fontManager);\r\n            }else if(layerData.ty === 4){\r\n                completeShapes(layerData.shapes);\r\n            }else if(layerData.ty == 5){\r\n                completeText(layerData, fontManager);\r\n            }\r\n        }\r\n    }\r\n\r\n    function findCompLayers(id,comps){\r\n        var i = 0, len = comps.length;\r\n        while(i<len){\r\n            if(comps[i].id === id){\r\n                if(!comps[i].layers.__used) {\r\n                    comps[i].layers.__used = true;\r\n                    return comps[i].layers;\r\n                }\r\n                return JSON.parse(JSON.stringify(comps[i].layers));\r\n            }\r\n            i += 1;\r\n        }\r\n    }\r\n\r\n    function completeShapes(arr){\r\n        var i, len = arr.length;\r\n        var j, jLen;\r\n        var hasPaths = false;\r\n        for(i=len-1;i>=0;i-=1){\r\n            if(arr[i].ty == 'sh'){\r\n                if(arr[i].ks.k.i){\r\n                    convertPathsToAbsoluteValues(arr[i].ks.k);\r\n                }else{\r\n                    jLen = arr[i].ks.k.length;\r\n                    for(j=0;j<jLen;j+=1){\r\n                        if(arr[i].ks.k[j].s){\r\n                            convertPathsToAbsoluteValues(arr[i].ks.k[j].s[0]);\r\n                        }\r\n                        if(arr[i].ks.k[j].e){\r\n                            convertPathsToAbsoluteValues(arr[i].ks.k[j].e[0]);\r\n                        }\r\n                    }\r\n                }\r\n                hasPaths = true;\r\n            }else if(arr[i].ty == 'gr'){\r\n                completeShapes(arr[i].it);\r\n            }\r\n        }\r\n        /*if(hasPaths){\r\n            //mx: distance\r\n            //ss: sensitivity\r\n            //dc: decay\r\n            arr.splice(arr.length-1,0,{\r\n                \"ty\": \"ms\",\r\n                \"mx\":20,\r\n                \"ss\":10,\r\n                 \"dc\":0.001,\r\n                \"maxDist\":200\r\n            });\r\n        }*/\r\n    }\r\n\r\n    function convertPathsToAbsoluteValues(path){\r\n        var i, len = path.i.length;\r\n        for(i=0;i<len;i+=1){\r\n            path.i[i][0] += path.v[i][0];\r\n            path.i[i][1] += path.v[i][1];\r\n            path.o[i][0] += path.v[i][0];\r\n            path.o[i][1] += path.v[i][1];\r\n        }\r\n    }\r\n\r\n    function checkVersion(minimum,animVersionString){\r\n        var animVersion = animVersionString ? animVersionString.split('.') : [100,100,100];\r\n        if(minimum[0]>animVersion[0]){\r\n            return true;\r\n        } else if(animVersion[0] > minimum[0]){\r\n            return false;\r\n        }\r\n        if(minimum[1]>animVersion[1]){\r\n            return true;\r\n        } else if(animVersion[1] > minimum[1]){\r\n            return false;\r\n        }\r\n        if(minimum[2]>animVersion[2]){\r\n            return true;\r\n        } else if(animVersion[2] > minimum[2]){\r\n            return false;\r\n        }\r\n    }\r\n\r\n    var checkText = (function(){\r\n        var minimumVersion = [4,4,14];\r\n\r\n        function updateTextLayer(textLayer){\r\n            var documentData = textLayer.t.d;\r\n            textLayer.t.d = {\r\n                k: [\r\n                    {\r\n                        s:documentData,\r\n                        t:0\r\n                    }\r\n                ]\r\n            };\r\n        }\r\n\r\n        function iterateLayers(layers){\r\n            var i, len = layers.length;\r\n            for(i=0;i<len;i+=1){\r\n                if(layers[i].ty === 5){\r\n                    updateTextLayer(layers[i]);\r\n                }\r\n            }\r\n        }\r\n\r\n        return function (animationData){\r\n            if(checkVersion(minimumVersion,animationData.v)){\r\n                iterateLayers(animationData.layers);\r\n                if(animationData.assets){\r\n                    var i, len = animationData.assets.length;\r\n                    for(i=0;i<len;i+=1){\r\n                        if(animationData.assets[i].layers){\r\n                            iterateLayers(animationData.assets[i].layers);\r\n\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        };\r\n    }());\r\n\r\n    var checkChars = (function() {\r\n        var minimumVersion = [4,7,99];\r\n        return function (animationData){\r\n            if(animationData.chars && !checkVersion(minimumVersion,animationData.v)){\r\n                var i, len = animationData.chars.length, j, jLen, k, kLen;\r\n                var pathData, paths;\r\n                for(i = 0; i < len; i += 1) {\r\n                    if(animationData.chars[i].data && animationData.chars[i].data.shapes) {\r\n                        paths = animationData.chars[i].data.shapes[0].it;\r\n                        jLen = paths.length;\r\n\r\n                        for(j = 0; j < jLen; j += 1) {\r\n                            pathData = paths[j].ks.k;\r\n                            if(!pathData.__converted) {\r\n                                convertPathsToAbsoluteValues(paths[j].ks.k);\r\n                                pathData.__converted = true;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        };\r\n    }());\r\n\r\n    var checkColors = (function(){\r\n        var minimumVersion = [4,1,9];\r\n\r\n        function iterateShapes(shapes){\r\n            var i, len = shapes.length;\r\n            var j, jLen;\r\n            for(i=0;i<len;i+=1){\r\n                if(shapes[i].ty === 'gr'){\r\n                    iterateShapes(shapes[i].it);\r\n                }else if(shapes[i].ty === 'fl' || shapes[i].ty === 'st'){\r\n                    if(shapes[i].c.k && shapes[i].c.k[0].i){\r\n                        jLen = shapes[i].c.k.length;\r\n                        for(j=0;j<jLen;j+=1){\r\n                            if(shapes[i].c.k[j].s){\r\n                                shapes[i].c.k[j].s[0] /= 255;\r\n                                shapes[i].c.k[j].s[1] /= 255;\r\n                                shapes[i].c.k[j].s[2] /= 255;\r\n                                shapes[i].c.k[j].s[3] /= 255;\r\n                            }\r\n                            if(shapes[i].c.k[j].e){\r\n                                shapes[i].c.k[j].e[0] /= 255;\r\n                                shapes[i].c.k[j].e[1] /= 255;\r\n                                shapes[i].c.k[j].e[2] /= 255;\r\n                                shapes[i].c.k[j].e[3] /= 255;\r\n                            }\r\n                        }\r\n                    } else {\r\n                        shapes[i].c.k[0] /= 255;\r\n                        shapes[i].c.k[1] /= 255;\r\n                        shapes[i].c.k[2] /= 255;\r\n                        shapes[i].c.k[3] /= 255;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        function iterateLayers(layers){\r\n            var i, len = layers.length;\r\n            for(i=0;i<len;i+=1){\r\n                if(layers[i].ty === 4){\r\n                    iterateShapes(layers[i].shapes);\r\n                }\r\n            }\r\n        }\r\n\r\n        return function (animationData){\r\n            if(checkVersion(minimumVersion,animationData.v)){\r\n                iterateLayers(animationData.layers);\r\n                if(animationData.assets){\r\n                    var i, len = animationData.assets.length;\r\n                    for(i=0;i<len;i+=1){\r\n                        if(animationData.assets[i].layers){\r\n                            iterateLayers(animationData.assets[i].layers);\r\n\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        };\r\n    }());\r\n\r\n    var checkShapes = (function(){\r\n        var minimumVersion = [4,4,18];\r\n\r\n\r\n\r\n        function completeShapes(arr){\r\n            var i, len = arr.length;\r\n            var j, jLen;\r\n            var hasPaths = false;\r\n            for(i=len-1;i>=0;i-=1){\r\n                if(arr[i].ty == 'sh'){\r\n                    if(arr[i].ks.k.i){\r\n                        arr[i].ks.k.c = arr[i].closed;\r\n                    }else{\r\n                        jLen = arr[i].ks.k.length;\r\n                        for(j=0;j<jLen;j+=1){\r\n                            if(arr[i].ks.k[j].s){\r\n                                arr[i].ks.k[j].s[0].c = arr[i].closed;\r\n                            }\r\n                            if(arr[i].ks.k[j].e){\r\n                                arr[i].ks.k[j].e[0].c = arr[i].closed;\r\n                            }\r\n                        }\r\n                    }\r\n                    hasPaths = true;\r\n                }else if(arr[i].ty == 'gr'){\r\n                    completeShapes(arr[i].it);\r\n                }\r\n            }\r\n        }\r\n\r\n        function iterateLayers(layers){\r\n            var layerData;\r\n            var i, len = layers.length;\r\n            var j, jLen, k, kLen;\r\n            for(i=0;i<len;i+=1){\r\n                layerData = layers[i];\r\n                if(layerData.hasMask){\r\n                    var maskProps = layerData.masksProperties;\r\n                    jLen = maskProps.length;\r\n                    for(j=0;j<jLen;j+=1){\r\n                        if(maskProps[j].pt.k.i){\r\n                            maskProps[j].pt.k.c = maskProps[j].cl;\r\n                        }else{\r\n                            kLen = maskProps[j].pt.k.length;\r\n                            for(k=0;k<kLen;k+=1){\r\n                                if(maskProps[j].pt.k[k].s){\r\n                                    maskProps[j].pt.k[k].s[0].c = maskProps[j].cl;\r\n                                }\r\n                                if(maskProps[j].pt.k[k].e){\r\n                                    maskProps[j].pt.k[k].e[0].c = maskProps[j].cl;\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                if(layerData.ty === 4){\r\n                    completeShapes(layerData.shapes);\r\n                }\r\n            }\r\n        }\r\n\r\n        return function (animationData){\r\n            if(checkVersion(minimumVersion,animationData.v)){\r\n                iterateLayers(animationData.layers);\r\n                if(animationData.assets){\r\n                    var i, len = animationData.assets.length;\r\n                    for(i=0;i<len;i+=1){\r\n                        if(animationData.assets[i].layers){\r\n                            iterateLayers(animationData.assets[i].layers);\r\n\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        };\r\n    }());\r\n\r\n    function completeData(animationData, fontManager){\r\n        if(animationData.__complete){\r\n            return;\r\n        }\r\n        checkColors(animationData);\r\n        checkText(animationData);\r\n        checkChars(animationData);\r\n        checkShapes(animationData);\r\n        completeLayers(animationData.layers, animationData.assets, fontManager);\r\n        animationData.__complete = true;\r\n        //blitAnimation(animationData, animationData.assets, fontManager);\r\n    }\r\n\r\n    function completeText(data, fontManager){\r\n        if(data.t.a.length === 0 && !('m' in data.t.p)){\r\n            data.singleShape = true;\r\n        }\r\n    }\r\n\r\n    var moduleOb = {};\r\n    moduleOb.completeData = completeData;\r\n\r\n    return moduleOb;\r\n}\r\n\r\nvar dataManager = dataFunctionManager();\r\nvar FontManager = (function(){\r\n\r\n    var maxWaitingTime = 5000;\r\n    var emptyChar = {\r\n        w: 0,\r\n        size:0,\r\n        shapes:[]\r\n    };\r\n    var combinedCharacters = [];\r\n    //Hindi characters\r\n    combinedCharacters = combinedCharacters.concat([2304, 2305, 2306, 2307, 2362, 2363, 2364, 2364, 2366\r\n    , 2367, 2368, 2369, 2370, 2371, 2372, 2373, 2374, 2375, 2376, 2377, 2378, 2379\r\n    , 2380, 2381, 2382, 2383, 2387, 2388, 2389, 2390, 2391, 2402, 2403]);\r\n\r\n    function setUpNode(font, family){\r\n        var parentNode = createTag('span');\r\n        parentNode.style.fontFamily    = family;\r\n        var node = createTag('span');\r\n        // Characters that vary significantly among different fonts\r\n        node.innerHTML = 'giItT1WQy@!-/#';\r\n        // Visible - so we can measure it - but not on the screen\r\n        parentNode.style.position      = 'absolute';\r\n        parentNode.style.left          = '-10000px';\r\n        parentNode.style.top           = '-10000px';\r\n        // Large font size makes even subtle changes obvious\r\n        parentNode.style.fontSize      = '300px';\r\n        // Reset any font properties\r\n        parentNode.style.fontVariant   = 'normal';\r\n        parentNode.style.fontStyle     = 'normal';\r\n        parentNode.style.fontWeight    = 'normal';\r\n        parentNode.style.letterSpacing = '0';\r\n        parentNode.appendChild(node);\r\n        document.body.appendChild(parentNode);\r\n\r\n        // Remember width with no applied web font\r\n        var width = node.offsetWidth;\r\n        node.style.fontFamily = font + ', '+family;\r\n        return {node:node, w:width, parent:parentNode};\r\n    }\r\n\r\n    function checkLoadedFonts() {\r\n        var i, len = this.fonts.length;\r\n        var node, w;\r\n        var loadedCount = len;\r\n        for(i=0;i<len; i+= 1){\r\n            if(this.fonts[i].loaded){\r\n                loadedCount -= 1;\r\n                continue;\r\n            }\r\n            if(this.fonts[i].fOrigin === 'n' || this.fonts[i].origin === 0){\r\n                this.fonts[i].loaded = true;\r\n            } else{\r\n                node = this.fonts[i].monoCase.node;\r\n                w = this.fonts[i].monoCase.w;\r\n                if(node.offsetWidth !== w){\r\n                    loadedCount -= 1;\r\n                    this.fonts[i].loaded = true;\r\n                }else{\r\n                    node = this.fonts[i].sansCase.node;\r\n                    w = this.fonts[i].sansCase.w;\r\n                    if(node.offsetWidth !== w){\r\n                        loadedCount -= 1;\r\n                        this.fonts[i].loaded = true;\r\n                    }\r\n                }\r\n                if(this.fonts[i].loaded){\r\n                    this.fonts[i].sansCase.parent.parentNode.removeChild(this.fonts[i].sansCase.parent);\r\n                    this.fonts[i].monoCase.parent.parentNode.removeChild(this.fonts[i].monoCase.parent);\r\n                }\r\n            }\r\n        }\r\n\r\n        if(loadedCount !== 0 && Date.now() - this.initTime < maxWaitingTime){\r\n            setTimeout(this.checkLoadedFonts.bind(this),20);\r\n        }else{\r\n            setTimeout(function(){this.isLoaded = true;}.bind(this),0);\r\n\r\n        }\r\n    }\r\n\r\n    function createHelper(def, fontData){\r\n        var tHelper = createNS('text');\r\n        tHelper.style.fontSize = '100px';\r\n        //tHelper.style.fontFamily = fontData.fFamily;\r\n        tHelper.setAttribute('font-family', fontData.fFamily);\r\n        tHelper.setAttribute('font-style', fontData.fStyle);\r\n        tHelper.setAttribute('font-weight', fontData.fWeight);\r\n        tHelper.textContent = '1';\r\n        if(fontData.fClass){\r\n            tHelper.style.fontFamily = 'inherit';\r\n            tHelper.setAttribute('class', fontData.fClass);\r\n        } else {\r\n            tHelper.style.fontFamily = fontData.fFamily;\r\n        }\r\n        def.appendChild(tHelper);\r\n        var tCanvasHelper = createTag('canvas').getContext('2d');\r\n        tCanvasHelper.font = fontData.fWeight + ' ' + fontData.fStyle + ' 100px '+ fontData.fFamily;\r\n        //tCanvasHelper.font = ' 100px '+ fontData.fFamily;\r\n        return tHelper;\r\n    }\r\n\r\n    function addFonts(fontData, defs){\r\n        if(!fontData){\r\n            this.isLoaded = true;\r\n            return;\r\n        }\r\n        if(this.chars){\r\n            this.isLoaded = true;\r\n            this.fonts = fontData.list;\r\n            return;\r\n        }\r\n\r\n\r\n        var fontArr = fontData.list;\r\n        var i, len = fontArr.length;\r\n        var _pendingFonts = len;\r\n        for(i=0; i<len; i+= 1){\r\n            var shouldLoadFont = true;\r\n            var loadedSelector;\r\n            var j;\r\n            fontArr[i].loaded = false;\r\n            fontArr[i].monoCase = setUpNode(fontArr[i].fFamily,'monospace');\r\n            fontArr[i].sansCase = setUpNode(fontArr[i].fFamily,'sans-serif');\r\n            if(!fontArr[i].fPath) {\r\n                fontArr[i].loaded = true;\r\n                _pendingFonts -= 1;\r\n            }else if(fontArr[i].fOrigin === 'p' || fontArr[i].origin === 3){\r\n                loadedSelector = document.querySelectorAll('style[f-forigin=\"p\"][f-family=\"'+ fontArr[i].fFamily +'\"], style[f-origin=\"3\"][f-family=\"'+ fontArr[i].fFamily +'\"]');\r\n\r\n                if (loadedSelector.length > 0) {\r\n                    shouldLoadFont = false;\r\n                }\r\n\r\n                if (shouldLoadFont) {\r\n                    var s = createTag('style');\r\n                    s.setAttribute('f-forigin', fontArr[i].fOrigin);\r\n                    s.setAttribute('f-origin', fontArr[i].origin);\r\n                    s.setAttribute('f-family', fontArr[i].fFamily);\r\n                    s.type = \"text/css\";\r\n                    s.innerHTML = \"@font-face {\" + \"font-family: \"+fontArr[i].fFamily+\"; font-style: normal; src: url('\"+fontArr[i].fPath+\"');}\";\r\n                    defs.appendChild(s);\r\n                }\r\n            } else if(fontArr[i].fOrigin === 'g' || fontArr[i].origin === 1){\r\n                loadedSelector = document.querySelectorAll('link[f-forigin=\"g\"], link[f-origin=\"1\"]');\r\n\r\n                for (j = 0; j < loadedSelector.length; j++) {\r\n                    if (loadedSelector[j].href.indexOf(fontArr[i].fPath) !== -1) {\r\n                        // Font is already loaded\r\n                        shouldLoadFont = false;\r\n                    }\r\n                }\r\n\r\n                if (shouldLoadFont) {\r\n                    var l = createTag('link');\r\n                    l.setAttribute('f-forigin', fontArr[i].fOrigin);\r\n                    l.setAttribute('f-origin', fontArr[i].origin);\r\n                    l.type = \"text/css\";\r\n                    l.rel = \"stylesheet\";\r\n                    l.href = fontArr[i].fPath;\r\n                    document.body.appendChild(l);\r\n                }\r\n            } else if(fontArr[i].fOrigin === 't' || fontArr[i].origin === 2){\r\n                loadedSelector = document.querySelectorAll('script[f-forigin=\"t\"], script[f-origin=\"2\"]');\r\n\r\n                for (j = 0; j < loadedSelector.length; j++) {\r\n                    if (fontArr[i].fPath === loadedSelector[j].src) {\r\n                        // Font is already loaded\r\n                        shouldLoadFont = false;\r\n                    }\r\n                }\r\n\r\n                if (shouldLoadFont) {\r\n                    var sc = createTag('link');\r\n                    sc.setAttribute('f-forigin', fontArr[i].fOrigin);\r\n                    sc.setAttribute('f-origin', fontArr[i].origin);\r\n                    sc.setAttribute('rel','stylesheet');\r\n                    sc.setAttribute('href',fontArr[i].fPath);\r\n                    defs.appendChild(sc);\r\n                }\r\n            }\r\n            fontArr[i].helper = createHelper(defs,fontArr[i]);\r\n            fontArr[i].cache = {};\r\n            this.fonts.push(fontArr[i]);\r\n        }\r\n        if (_pendingFonts === 0) {\r\n            this.isLoaded = true;\r\n        } else {\r\n            //On some cases even if the font is loaded, it won't load correctly when measuring text on canvas.\r\n            //Adding this timeout seems to fix it\r\n           setTimeout(this.checkLoadedFonts.bind(this), 100);\r\n        }\r\n    }\r\n\r\n    function addChars(chars){\r\n        if(!chars){\r\n            return;\r\n        }\r\n        if(!this.chars){\r\n            this.chars = [];\r\n        }\r\n        var i, len = chars.length;\r\n        var j, jLen = this.chars.length, found;\r\n        for(i=0;i<len;i+=1){\r\n            j = 0;\r\n            found = false;\r\n            while(j<jLen){\r\n                if(this.chars[j].style === chars[i].style && this.chars[j].fFamily === chars[i].fFamily && this.chars[j].ch === chars[i].ch){\r\n                    found = true;\r\n                }\r\n                j += 1;\r\n            }\r\n            if(!found){\r\n                this.chars.push(chars[i]);\r\n                jLen += 1;\r\n            }\r\n        }\r\n    }\r\n\r\n    function getCharData(char, style, font){\r\n        var i = 0, len = this.chars.length;\r\n        while( i < len) {\r\n            if(this.chars[i].ch === char && this.chars[i].style === style && this.chars[i].fFamily === font){\r\n\r\n                return this.chars[i];\r\n            }\r\n            i+= 1;\r\n        }\r\n        if((typeof char === 'string' && char.charCodeAt(0) !== 13 || !char) && console && console.warn) {\r\n            console.warn('Missing character from exported characters list: ', char, style, font);\r\n        }\r\n        return emptyChar;\r\n    }\r\n\r\n    function measureText(char, fontName, size) {\r\n        var fontData = this.getFontByName(fontName);\r\n        var index = char.charCodeAt(0);\r\n        if(!fontData.cache[index + 1]) {\r\n            var tHelper = fontData.helper;\r\n            //Canvas version\r\n            //fontData.cache[index] = tHelper.measureText(char).width / 100;\r\n            //SVG version\r\n            //console.log(tHelper.getBBox().width)\r\n            if (char === ' ') {\r\n                tHelper.textContent = '|' + char + '|';\r\n                var doubleSize = tHelper.getComputedTextLength();\r\n                tHelper.textContent = '||';\r\n                var singleSize = tHelper.getComputedTextLength();\r\n                fontData.cache[index + 1] = (doubleSize - singleSize)/100;\r\n            } else {\r\n                tHelper.textContent = char;\r\n                fontData.cache[index + 1] = (tHelper.getComputedTextLength())/100;\r\n            }\r\n        }\r\n        return fontData.cache[index + 1] * size;\r\n    }\r\n\r\n    function getFontByName(name){\r\n        var i = 0, len = this.fonts.length;\r\n        while(i<len){\r\n            if(this.fonts[i].fName === name) {\r\n                return this.fonts[i];\r\n            }\r\n            i += 1;\r\n        }\r\n        return this.fonts[0];\r\n    }\r\n\r\n    function getCombinedCharacterCodes() {\r\n        return combinedCharacters;\r\n    }\r\n\r\n    function loaded() {\r\n        return this.isLoaded;\r\n    }\r\n\r\n    var Font = function(){\r\n        this.fonts = [];\r\n        this.chars = null;\r\n        this.typekitLoaded = 0;\r\n        this.isLoaded = false;\r\n        this.initTime = Date.now();\r\n    };\r\n    //TODO: for now I'm adding these methods to the Class and not the prototype. Think of a better way to implement it. \r\n    Font.getCombinedCharacterCodes = getCombinedCharacterCodes;\r\n\r\n    Font.prototype.addChars = addChars;\r\n    Font.prototype.addFonts = addFonts;\r\n    Font.prototype.getCharData = getCharData;\r\n    Font.prototype.getFontByName = getFontByName;\r\n    Font.prototype.measureText = measureText;\r\n    Font.prototype.checkLoadedFonts = checkLoadedFonts;\r\n    Font.prototype.loaded = loaded;\r\n\r\n    return Font;\r\n\r\n}());\r\nvar PropertyFactory = (function(){\r\n\r\n    var initFrame = initialDefaultFrame;\r\n    var math_abs = Math.abs;\r\n\r\n    function interpolateValue(frameNum, caching) {\r\n        var offsetTime = this.offsetTime;\r\n        var newValue;\r\n        if (this.propType === 'multidimensional') {\r\n            newValue = createTypedArray('float32', this.pv.length);\r\n        }\r\n        var iterationIndex = caching.lastIndex;\r\n        var i = iterationIndex;\r\n        var len = this.keyframes.length - 1, flag = true;\r\n        var keyData, nextKeyData;\r\n\r\n        while (flag) {\r\n            keyData = this.keyframes[i];\r\n            nextKeyData = this.keyframes[i + 1];\r\n            if (i === len - 1 && frameNum >= nextKeyData.t - offsetTime){\r\n                if(keyData.h){\r\n                    keyData = nextKeyData;\r\n                }\r\n                iterationIndex = 0;\r\n                break;\r\n            }\r\n            if ((nextKeyData.t - offsetTime) > frameNum){\r\n                iterationIndex = i;\r\n                break;\r\n            }\r\n            if (i < len - 1){\r\n                i += 1;\r\n            } else {\r\n                iterationIndex = 0;\r\n                flag = false;\r\n            }\r\n        }\r\n\r\n        var k, kLen, perc, jLen, j, fnc;\r\n        var nextKeyTime = nextKeyData.t - offsetTime;\r\n        var keyTime = keyData.t - offsetTime;\r\n        var endValue;\r\n        if (keyData.to) {\r\n            if (!keyData.bezierData) {\r\n                keyData.bezierData = bez.buildBezierData(keyData.s, nextKeyData.s || keyData.e, keyData.to, keyData.ti);\r\n            }\r\n            var bezierData = keyData.bezierData;\r\n            if (frameNum >= nextKeyTime || frameNum < keyTime) {\r\n                var ind = frameNum >= nextKeyTime ? bezierData.points.length - 1 : 0;\r\n                kLen = bezierData.points[ind].point.length;\r\n                for (k = 0; k < kLen; k += 1) {\r\n                    newValue[k] = bezierData.points[ind].point[k];\r\n                }\r\n                // caching._lastKeyframeIndex = -1;\r\n            } else {\r\n                if (keyData.__fnct) {\r\n                    fnc = keyData.__fnct;\r\n                } else {\r\n                    fnc = BezierFactory.getBezierEasing(keyData.o.x, keyData.o.y, keyData.i.x, keyData.i.y, keyData.n).get;\r\n                    keyData.__fnct = fnc;\r\n                }\r\n                perc = fnc((frameNum - keyTime) / (nextKeyTime - keyTime));\r\n                var distanceInLine = bezierData.segmentLength*perc;\r\n\r\n                var segmentPerc;\r\n                var addedLength =  (caching.lastFrame < frameNum && caching._lastKeyframeIndex === i) ? caching._lastAddedLength : 0;\r\n                j =  (caching.lastFrame < frameNum && caching._lastKeyframeIndex === i) ? caching._lastPoint : 0;\r\n                flag = true;\r\n                jLen = bezierData.points.length;\r\n                while (flag) {\r\n                    addedLength += bezierData.points[j].partialLength;\r\n                    if (distanceInLine === 0 || perc === 0 || j === bezierData.points.length - 1) {\r\n                        kLen = bezierData.points[j].point.length;\r\n                        for (k = 0; k < kLen; k += 1) {\r\n                            newValue[k] = bezierData.points[j].point[k];\r\n                        }\r\n                        break;\r\n                    } else if (distanceInLine >= addedLength && distanceInLine < addedLength + bezierData.points[j + 1].partialLength) {\r\n                        segmentPerc = (distanceInLine - addedLength) / bezierData.points[j + 1].partialLength;\r\n                        kLen = bezierData.points[j].point.length;\r\n                        for (k = 0; k < kLen; k += 1) {\r\n                            newValue[k] = bezierData.points[j].point[k] + (bezierData.points[j + 1].point[k] - bezierData.points[j].point[k]) * segmentPerc;\r\n                        }\r\n                        break;\r\n                    }\r\n                    if (j < jLen - 1){\r\n                        j += 1;\r\n                    } else {\r\n                        flag = false;\r\n                    }\r\n                }\r\n                caching._lastPoint = j;\r\n                caching._lastAddedLength = addedLength - bezierData.points[j].partialLength;\r\n                caching._lastKeyframeIndex = i;\r\n            }\r\n        } else {\r\n            var outX, outY, inX, inY, keyValue;\r\n            len = keyData.s.length;\r\n            endValue = nextKeyData.s || keyData.e;\r\n            if (this.sh && keyData.h !== 1) {\r\n                if (frameNum >= nextKeyTime) {\r\n                    newValue[0] = endValue[0];\r\n                    newValue[1] = endValue[1];\r\n                    newValue[2] = endValue[2];\r\n                } else if (frameNum <= keyTime) {\r\n                    newValue[0] = keyData.s[0];\r\n                    newValue[1] = keyData.s[1];\r\n                    newValue[2] = keyData.s[2];\r\n                } else {\r\n                    var quatStart = createQuaternion(keyData.s);\r\n                    var quatEnd = createQuaternion(endValue);\r\n                    var time = (frameNum - keyTime) / (nextKeyTime - keyTime);\r\n                    quaternionToEuler(newValue, slerp(quatStart, quatEnd, time));\r\n                }\r\n                \r\n            } else {\r\n                for(i = 0; i < len; i += 1) {\r\n                    if (keyData.h !== 1) {\r\n                        if (frameNum >= nextKeyTime) {\r\n                            perc = 1;\r\n                        } else if(frameNum < keyTime) {\r\n                            perc = 0;\r\n                        } else {\r\n                            if(keyData.o.x.constructor === Array) {\r\n                                if (!keyData.__fnct) {\r\n                                    keyData.__fnct = [];\r\n                                }\r\n                                if (!keyData.__fnct[i]) {\r\n                                    outX = (typeof keyData.o.x[i] === 'undefined') ? keyData.o.x[0] : keyData.o.x[i];\r\n                                    outY = (typeof keyData.o.y[i] === 'undefined') ? keyData.o.y[0] : keyData.o.y[i];\r\n                                    inX = (typeof keyData.i.x[i] === 'undefined') ? keyData.i.x[0] : keyData.i.x[i];\r\n                                    inY = (typeof keyData.i.y[i] === 'undefined') ? keyData.i.y[0] : keyData.i.y[i];\r\n                                    fnc = BezierFactory.getBezierEasing(outX, outY, inX, inY).get;\r\n                                    keyData.__fnct[i] = fnc;\r\n                                } else {\r\n                                    fnc = keyData.__fnct[i];\r\n                                }\r\n                            } else {\r\n                                if (!keyData.__fnct) {\r\n                                    outX = keyData.o.x;\r\n                                    outY = keyData.o.y;\r\n                                    inX = keyData.i.x;\r\n                                    inY = keyData.i.y;\r\n                                    fnc = BezierFactory.getBezierEasing(outX, outY, inX, inY).get;\r\n                                    keyData.__fnct = fnc;\r\n                                } else {\r\n                                    fnc = keyData.__fnct;\r\n                                }\r\n                            }\r\n                            perc = fnc((frameNum - keyTime) / (nextKeyTime - keyTime ));\r\n                        }\r\n                    }\r\n\r\n                    endValue = nextKeyData.s || keyData.e;\r\n                    keyValue = keyData.h === 1 ? keyData.s[i] : keyData.s[i] + (endValue[i] - keyData.s[i]) * perc;\r\n\r\n                    if (len === 1) {\r\n                        newValue = keyValue;\r\n                    } else {\r\n                        newValue[i] = keyValue;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        caching.lastIndex = iterationIndex;\r\n        return newValue;\r\n    }\r\n\r\n    //based on @Toji's https://github.com/toji/gl-matrix/\r\n    function slerp(a, b, t) {\r\n        var out = [];\r\n        var ax = a[0], ay = a[1], az = a[2], aw = a[3],\r\n        bx = b[0], by = b[1], bz = b[2], bw = b[3]\r\n\r\n        var omega, cosom, sinom, scale0, scale1;\r\n\r\n        cosom = ax * bx + ay * by + az * bz + aw * bw;\r\n        if (cosom < 0.0) {\r\n            cosom = -cosom;\r\n            bx = -bx;\r\n            by = -by;\r\n            bz = -bz;\r\n            bw = -bw;\r\n        }\r\n        if ((1.0 - cosom) > 0.000001) {\r\n            omega = Math.acos(cosom);\r\n            sinom = Math.sin(omega);\r\n            scale0 = Math.sin((1.0 - t) * omega) / sinom;\r\n            scale1 = Math.sin(t * omega) / sinom;\r\n        } else {\r\n            scale0 = 1.0 - t;\r\n            scale1 = t;\r\n        }\r\n        out[0] = scale0 * ax + scale1 * bx;\r\n        out[1] = scale0 * ay + scale1 * by;\r\n        out[2] = scale0 * az + scale1 * bz;\r\n        out[3] = scale0 * aw + scale1 * bw;\r\n\r\n        return out;\r\n    }\r\n\r\n    function quaternionToEuler(out, quat) {\r\n        var qx = quat[0];\r\n        var qy = quat[1];\r\n        var qz = quat[2];\r\n        var qw = quat[3];\r\n        var heading = Math.atan2(2*qy*qw-2*qx*qz , 1 - 2*qy*qy - 2*qz*qz)\r\n        var attitude = Math.asin(2*qx*qy + 2*qz*qw) \r\n        var bank = Math.atan2(2*qx*qw-2*qy*qz , 1 - 2*qx*qx - 2*qz*qz);\r\n        out[0] = heading/degToRads;\r\n        out[1] = attitude/degToRads;\r\n        out[2] = bank/degToRads;\r\n    }\r\n\r\n    function createQuaternion(values) {\r\n        var heading = values[0] * degToRads;\r\n        var attitude = values[1] * degToRads;\r\n        var bank = values[2] * degToRads;\r\n        var c1 = Math.cos(heading / 2);\r\n        var c2 = Math.cos(attitude / 2);\r\n        var c3 = Math.cos(bank / 2);\r\n        var s1 = Math.sin(heading / 2);\r\n        var s2 = Math.sin(attitude / 2);\r\n        var s3 = Math.sin(bank / 2);\r\n        var w = c1 * c2 * c3 - s1 * s2 * s3;\r\n        var x = s1 * s2 * c3 + c1 * c2 * s3;\r\n        var y = s1 * c2 * c3 + c1 * s2 * s3;\r\n        var z = c1 * s2 * c3 - s1 * c2 * s3;\r\n\r\n        return [x,y,z,w];\r\n    }\r\n\r\n    function getValueAtCurrentTime(){\r\n        var frameNum = this.comp.renderedFrame - this.offsetTime;\r\n        var initTime = this.keyframes[0].t - this.offsetTime;\r\n        var endTime = this.keyframes[this.keyframes.length- 1].t-this.offsetTime;\r\n        if(!(frameNum === this._caching.lastFrame || (this._caching.lastFrame !== initFrame && ((this._caching.lastFrame >= endTime && frameNum >= endTime) || (this._caching.lastFrame < initTime && frameNum < initTime))))){\r\n            if(this._caching.lastFrame >= frameNum) {\r\n                this._caching._lastKeyframeIndex = -1;\r\n                this._caching.lastIndex = 0;\r\n            }\r\n\r\n            var renderResult = this.interpolateValue(frameNum, this._caching);\r\n            this.pv = renderResult;\r\n        }\r\n        this._caching.lastFrame = frameNum;\r\n        return this.pv;\r\n    }\r\n\r\n    function setVValue(val) {\r\n        var multipliedValue;\r\n        if(this.propType === 'unidimensional') {\r\n            multipliedValue = val * this.mult;\r\n            if(math_abs(this.v - multipliedValue) > 0.00001) {\r\n                this.v = multipliedValue;\r\n                this._mdf = true;\r\n            }\r\n        } else {\r\n            var i = 0, len = this.v.length;\r\n            while (i < len) {\r\n                multipliedValue = val[i] * this.mult;\r\n                if (math_abs(this.v[i] - multipliedValue) > 0.00001) {\r\n                    this.v[i] = multipliedValue;\r\n                    this._mdf = true;\r\n                }\r\n                i += 1;\r\n            }\r\n        }\r\n    }\r\n\r\n    function processEffectsSequence() {\r\n        if(this.elem.globalData.frameId === this.frameId || !this.effectsSequence.length) {\r\n            return;\r\n        }        \r\n        if(this.lock) {\r\n            this.setVValue(this.pv);\r\n            return;\r\n        }\r\n        this.lock = true;\r\n        this._mdf = this._isFirstFrame;\r\n        var multipliedValue;\r\n        var i, len = this.effectsSequence.length;\r\n        var finalValue = this.kf ? this.pv : this.data.k;\r\n        for(i = 0; i < len; i += 1) {\r\n            finalValue = this.effectsSequence[i](finalValue);\r\n        }\r\n        this.setVValue(finalValue);\r\n        this._isFirstFrame = false;\r\n        this.lock = false;\r\n        this.frameId = this.elem.globalData.frameId;\r\n    }\r\n\r\n    function addEffect(effectFunction) {\r\n        this.effectsSequence.push(effectFunction);\r\n        this.container.addDynamicProperty(this);\r\n    }\r\n\r\n    function ValueProperty(elem, data, mult, container){\r\n        this.propType = 'unidimensional';\r\n        this.mult = mult || 1;\r\n        this.data = data;\r\n        this.v = mult ? data.k * mult : data.k;\r\n        this.pv = data.k;\r\n        this._mdf = false;\r\n        this.elem = elem;\r\n        this.container = container;\r\n        this.comp = elem.comp;\r\n        this.k = false;\r\n        this.kf = false;\r\n        this.vel = 0;\r\n        this.effectsSequence = [];\r\n        this._isFirstFrame = true;\r\n        this.getValue = processEffectsSequence;\r\n        this.setVValue = setVValue;\r\n        this.addEffect = addEffect;\r\n    }\r\n\r\n    function MultiDimensionalProperty(elem, data, mult, container) {\r\n        this.propType = 'multidimensional';\r\n        this.mult = mult || 1;\r\n        this.data = data;\r\n        this._mdf = false;\r\n        this.elem = elem;\r\n        this.container = container;\r\n        this.comp = elem.comp;\r\n        this.k = false;\r\n        this.kf = false;\r\n        this.frameId = -1;\r\n        var i, len = data.k.length;\r\n        this.v = createTypedArray('float32', len);\r\n        this.pv = createTypedArray('float32', len);\r\n        var arr = createTypedArray('float32', len);\r\n        this.vel = createTypedArray('float32', len);\r\n        for (i = 0; i < len; i += 1) {\r\n            this.v[i] = data.k[i] * this.mult;\r\n            this.pv[i] = data.k[i];\r\n        }\r\n        this._isFirstFrame = true;\r\n        this.effectsSequence = [];\r\n        this.getValue = processEffectsSequence;\r\n        this.setVValue = setVValue;\r\n        this.addEffect = addEffect;\r\n    }\r\n\r\n    function KeyframedValueProperty(elem, data, mult, container) {\r\n        this.propType = 'unidimensional';\r\n        this.keyframes = data.k;\r\n        this.offsetTime = elem.data.st;\r\n        this.frameId = -1;\r\n        this._caching = {lastFrame: initFrame, lastIndex: 0, value: 0, _lastKeyframeIndex: -1};\r\n        this.k = true;\r\n        this.kf = true;\r\n        this.data = data;\r\n        this.mult = mult || 1;\r\n        this.elem = elem;\r\n        this.container = container;\r\n        this.comp = elem.comp;\r\n        this.v = initFrame;\r\n        this.pv = initFrame;\r\n        this._isFirstFrame = true;\r\n        this.getValue = processEffectsSequence;\r\n        this.setVValue = setVValue;\r\n        this.interpolateValue = interpolateValue;\r\n        this.effectsSequence = [getValueAtCurrentTime.bind(this)];\r\n        this.addEffect = addEffect;\r\n    }\r\n\r\n    function KeyframedMultidimensionalProperty(elem, data, mult, container){\r\n        this.propType = 'multidimensional';\r\n        var i, len = data.k.length;\r\n        var s, e,to,ti;\r\n        for (i = 0; i < len - 1; i += 1) {\r\n            if (data.k[i].to && data.k[i].s && data.k[i].e) {\r\n                s = data.k[i].s;\r\n                e = data.k[i].e;\r\n                to = data.k[i].to;\r\n                ti = data.k[i].ti;\r\n                if((s.length === 2 && !(s[0] === e[0] && s[1] === e[1]) && bez.pointOnLine2D(s[0],s[1],e[0],e[1],s[0] + to[0],s[1] + to[1]) && bez.pointOnLine2D(s[0],s[1],e[0],e[1],e[0] + ti[0],e[1] + ti[1])) || (s.length === 3 && !(s[0] === e[0] && s[1] === e[1] && s[2] === e[2]) && bez.pointOnLine3D(s[0],s[1],s[2],e[0],e[1],e[2],s[0] + to[0],s[1] + to[1],s[2] + to[2]) && bez.pointOnLine3D(s[0],s[1],s[2],e[0],e[1],e[2],e[0] + ti[0],e[1] + ti[1],e[2] + ti[2]))){\r\n                    data.k[i].to = null;\r\n                    data.k[i].ti = null;\r\n                }\r\n                if(s[0] === e[0] && s[1] === e[1] && to[0] === 0 && to[1] === 0 && ti[0] === 0 && ti[1] === 0) {\r\n                    if(s.length === 2 || (s[2] === e[2] && to[2] === 0 && ti[2] === 0)) {\r\n                        data.k[i].to = null;\r\n                        data.k[i].ti = null;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        this.effectsSequence = [getValueAtCurrentTime.bind(this)];\r\n        this.keyframes = data.k;\r\n        this.offsetTime = elem.data.st;\r\n        this.k = true;\r\n        this.kf = true;\r\n        this._isFirstFrame = true;\r\n        this.mult = mult || 1;\r\n        this.elem = elem;\r\n        this.container = container;\r\n        this.comp = elem.comp;\r\n        this.getValue = processEffectsSequence;\r\n        this.setVValue = setVValue;\r\n        this.interpolateValue = interpolateValue;\r\n        this.frameId = -1;\r\n        var arrLen = data.k[0].s.length;\r\n        this.v = createTypedArray('float32', arrLen);\r\n        this.pv = createTypedArray('float32', arrLen);\r\n        for (i = 0; i < arrLen; i += 1) {\r\n            this.v[i] = initFrame;\r\n            this.pv[i] = initFrame;\r\n        }\r\n        this._caching={lastFrame:initFrame,lastIndex:0,value:createTypedArray('float32', arrLen)};\r\n        this.addEffect = addEffect;\r\n    }\r\n\r\n    function getProp(elem,data,type, mult, container) {\r\n        var p;\r\n        if(!data.k.length){\r\n            p = new ValueProperty(elem,data, mult, container);\r\n        }else if(typeof(data.k[0]) === 'number'){\r\n            p = new MultiDimensionalProperty(elem,data, mult, container);\r\n        }else{\r\n            switch(type){\r\n                case 0:\r\n                    p = new KeyframedValueProperty(elem,data,mult, container);\r\n                    break;\r\n                case 1:\r\n                    p = new KeyframedMultidimensionalProperty(elem,data,mult, container);\r\n                    break;\r\n            }\r\n        }\r\n        if(p.effectsSequence.length){\r\n            container.addDynamicProperty(p);\r\n        }\r\n        return p;\r\n    }\r\n\r\n    var ob = {\r\n        getProp: getProp\r\n    };\r\n    return ob;\r\n}());\r\nvar TransformPropertyFactory = (function() {\r\n\r\n    function applyToMatrix(mat) {\r\n        var _mdf = this._mdf;\r\n        this.iterateDynamicProperties();\r\n        this._mdf = this._mdf || _mdf;\r\n        if (this.a) {\r\n            mat.translate(-this.a.v[0], -this.a.v[1], this.a.v[2]);\r\n        }\r\n        if (this.s) {\r\n            mat.scale(this.s.v[0], this.s.v[1], this.s.v[2]);\r\n        }\r\n        if (this.sk) {\r\n            mat.skewFromAxis(-this.sk.v, this.sa.v);\r\n        }\r\n        if (this.r) {\r\n            mat.rotate(-this.r.v);\r\n        } else {\r\n            mat.rotateZ(-this.rz.v).rotateY(this.ry.v).rotateX(this.rx.v).rotateZ(-this.or.v[2]).rotateY(this.or.v[1]).rotateX(this.or.v[0]);\r\n        }\r\n        if (this.data.p.s) {\r\n            if (this.data.p.z) {\r\n                mat.translate(this.px.v, this.py.v, -this.pz.v);\r\n            } else {\r\n                mat.translate(this.px.v, this.py.v, 0);\r\n            }\r\n        } else {\r\n            mat.translate(this.p.v[0], this.p.v[1], -this.p.v[2]);\r\n        }\r\n    }\r\n    function processKeys(forceRender){\r\n        if (this.elem.globalData.frameId === this.frameId) {\r\n            return;\r\n        }\r\n        if(this._isDirty) {\r\n            this.precalculateMatrix();\r\n            this._isDirty = false;\r\n        }\r\n\r\n        this.iterateDynamicProperties();\r\n\r\n        if (this._mdf || forceRender) {\r\n            this.v.cloneFromProps(this.pre.props);\r\n            if (this.appliedTransformations < 1) {\r\n                this.v.translate(-this.a.v[0], -this.a.v[1], this.a.v[2]);\r\n            }\r\n            if(this.appliedTransformations < 2) {\r\n                this.v.scale(this.s.v[0], this.s.v[1], this.s.v[2]);\r\n            }\r\n            if (this.sk && this.appliedTransformations < 3) {\r\n                this.v.skewFromAxis(-this.sk.v, this.sa.v);\r\n            }\r\n            if (this.r && this.appliedTransformations < 4) {\r\n                this.v.rotate(-this.r.v);\r\n            } else if (!this.r && this.appliedTransformations < 4){\r\n                this.v.rotateZ(-this.rz.v).rotateY(this.ry.v).rotateX(this.rx.v).rotateZ(-this.or.v[2]).rotateY(this.or.v[1]).rotateX(this.or.v[0]);\r\n            }\r\n            if (this.autoOriented) {\r\n                var v1,v2, frameRate = this.elem.globalData.frameRate;\r\n                if(this.p && this.p.keyframes && this.p.getValueAtTime) {\r\n                    if (this.p._caching.lastFrame+this.p.offsetTime <= this.p.keyframes[0].t) {\r\n                        v1 = this.p.getValueAtTime((this.p.keyframes[0].t + 0.01) / frameRate,0);\r\n                        v2 = this.p.getValueAtTime(this.p.keyframes[0].t / frameRate, 0);\r\n                    } else if(this.p._caching.lastFrame+this.p.offsetTime >= this.p.keyframes[this.p.keyframes.length - 1].t) {\r\n                        v1 = this.p.getValueAtTime((this.p.keyframes[this.p.keyframes.length - 1].t / frameRate), 0);\r\n                        v2 = this.p.getValueAtTime((this.p.keyframes[this.p.keyframes.length - 1].t - 0.01) / frameRate, 0);\r\n                    } else {\r\n                        v1 = this.p.pv;\r\n                        v2 = this.p.getValueAtTime((this.p._caching.lastFrame+this.p.offsetTime - 0.01) / frameRate, this.p.offsetTime);\r\n                    }\r\n                } else if(this.px && this.px.keyframes && this.py.keyframes && this.px.getValueAtTime && this.py.getValueAtTime) {\r\n                    v1 = [];\r\n                    v2 = [];\r\n                    var px = this.px, py = this.py, frameRate;\r\n                    if (px._caching.lastFrame+px.offsetTime <= px.keyframes[0].t) {\r\n                        v1[0] = px.getValueAtTime((px.keyframes[0].t + 0.01) / frameRate,0);\r\n                        v1[1] = py.getValueAtTime((py.keyframes[0].t + 0.01) / frameRate,0);\r\n                        v2[0] = px.getValueAtTime((px.keyframes[0].t) / frameRate,0);\r\n                        v2[1] = py.getValueAtTime((py.keyframes[0].t) / frameRate,0);\r\n                    } else if(px._caching.lastFrame+px.offsetTime >= px.keyframes[px.keyframes.length - 1].t) {\r\n                        v1[0] = px.getValueAtTime((px.keyframes[px.keyframes.length - 1].t / frameRate),0);\r\n                        v1[1] = py.getValueAtTime((py.keyframes[py.keyframes.length - 1].t / frameRate),0);\r\n                        v2[0] = px.getValueAtTime((px.keyframes[px.keyframes.length - 1].t - 0.01) / frameRate,0);\r\n                        v2[1] = py.getValueAtTime((py.keyframes[py.keyframes.length - 1].t - 0.01) / frameRate,0);\r\n                    } else {\r\n                        v1 = [px.pv, py.pv];\r\n                        v2[0] = px.getValueAtTime((px._caching.lastFrame+px.offsetTime - 0.01) / frameRate,px.offsetTime);\r\n                        v2[1] = py.getValueAtTime((py._caching.lastFrame+py.offsetTime - 0.01) / frameRate,py.offsetTime);\r\n                    }\r\n                }\r\n                this.v.rotate(-Math.atan2(v1[1] - v2[1], v1[0] - v2[0]));\r\n            }\r\n            if(this.data.p && this.data.p.s){\r\n                if(this.data.p.z) {\r\n                    this.v.translate(this.px.v, this.py.v, -this.pz.v);\r\n                } else {\r\n                    this.v.translate(this.px.v, this.py.v, 0);\r\n                }\r\n            }else{\r\n                this.v.translate(this.p.v[0],this.p.v[1],-this.p.v[2]);\r\n            }\r\n        }\r\n        this.frameId = this.elem.globalData.frameId;\r\n    }\r\n\r\n    function precalculateMatrix() {\r\n        if(!this.a.k) {\r\n            this.pre.translate(-this.a.v[0], -this.a.v[1], this.a.v[2]);\r\n            this.appliedTransformations = 1;\r\n        } else {\r\n            return;\r\n        }\r\n        if(!this.s.effectsSequence.length) {\r\n            this.pre.scale(this.s.v[0], this.s.v[1], this.s.v[2]);\r\n            this.appliedTransformations = 2;\r\n        } else {\r\n            return;\r\n        }\r\n        if(this.sk) {\r\n            if(!this.sk.effectsSequence.length && !this.sa.effectsSequence.length) {\r\n                this.pre.skewFromAxis(-this.sk.v, this.sa.v);\r\n            this.appliedTransformations = 3;\r\n            } else {\r\n                return;\r\n            }\r\n        }\r\n        if (this.r) {\r\n            if(!this.r.effectsSequence.length) {\r\n                this.pre.rotate(-this.r.v);\r\n                this.appliedTransformations = 4;\r\n            } else {\r\n                return;\r\n            }\r\n        } else if(!this.rz.effectsSequence.length && !this.ry.effectsSequence.length && !this.rx.effectsSequence.length && !this.or.effectsSequence.length) {\r\n            this.pre.rotateZ(-this.rz.v).rotateY(this.ry.v).rotateX(this.rx.v).rotateZ(-this.or.v[2]).rotateY(this.or.v[1]).rotateX(this.or.v[0]);\r\n            this.appliedTransformations = 4;\r\n        }\r\n    }\r\n\r\n    function autoOrient(){\r\n        //\r\n        //var prevP = this.getValueAtTime();\r\n    }\r\n\r\n    function addDynamicProperty(prop) {\r\n        this._addDynamicProperty(prop);\r\n        this.elem.addDynamicProperty(prop);\r\n        this._isDirty = true;\r\n    }\r\n\r\n    function TransformProperty(elem,data,container){\r\n        this.elem = elem;\r\n        this.frameId = -1;\r\n        this.propType = 'transform';\r\n        this.data = data;\r\n        this.v = new Matrix();\r\n        //Precalculated matrix with non animated properties\r\n        this.pre = new Matrix();\r\n        this.appliedTransformations = 0;\r\n        this.initDynamicPropertyContainer(container || elem);\r\n        if(data.p && data.p.s){\r\n            this.px = PropertyFactory.getProp(elem,data.p.x,0,0,this);\r\n            this.py = PropertyFactory.getProp(elem,data.p.y,0,0,this);\r\n            if(data.p.z){\r\n                this.pz = PropertyFactory.getProp(elem,data.p.z,0,0,this);\r\n            }\r\n        }else{\r\n            this.p = PropertyFactory.getProp(elem,data.p || {k:[0,0,0]},1,0,this);\r\n        }\r\n        if(data.rx) {\r\n            this.rx = PropertyFactory.getProp(elem, data.rx, 0, degToRads, this);\r\n            this.ry = PropertyFactory.getProp(elem, data.ry, 0, degToRads, this);\r\n            this.rz = PropertyFactory.getProp(elem, data.rz, 0, degToRads, this);\r\n            if(data.or.k[0].ti) {\r\n                var i, len = data.or.k.length;\r\n                for(i=0;i<len;i+=1) {\r\n                    data.or.k[i].to = data.or.k[i].ti = null;\r\n                }\r\n            }\r\n            this.or = PropertyFactory.getProp(elem, data.or, 1, degToRads, this);\r\n            //sh Indicates it needs to be capped between -180 and 180\r\n            this.or.sh = true;\r\n        } else {\r\n            this.r = PropertyFactory.getProp(elem, data.r || {k: 0}, 0, degToRads, this);\r\n        }\r\n        if(data.sk){\r\n            this.sk = PropertyFactory.getProp(elem, data.sk, 0, degToRads, this);\r\n            this.sa = PropertyFactory.getProp(elem, data.sa, 0, degToRads, this);\r\n        }\r\n        this.a = PropertyFactory.getProp(elem,data.a || {k:[0,0,0]},1,0,this);\r\n        this.s = PropertyFactory.getProp(elem,data.s || {k:[100,100,100]},1,0.01,this);\r\n        // Opacity is not part of the transform properties, that's why it won't use this.dynamicProperties. That way transforms won't get updated if opacity changes.\r\n        if(data.o){\r\n            this.o = PropertyFactory.getProp(elem,data.o,0,0.01,elem);\r\n        } else {\r\n            this.o = {_mdf:false,v:1};\r\n        }\r\n        this._isDirty = true;\r\n        if(!this.dynamicProperties.length){\r\n            this.getValue(true);\r\n        }\r\n    }\r\n\r\n    TransformProperty.prototype = {\r\n        applyToMatrix: applyToMatrix,\r\n        getValue: processKeys,\r\n        precalculateMatrix: precalculateMatrix,\r\n        autoOrient: autoOrient\r\n    }\r\n\r\n    extendPrototype([DynamicPropertyContainer], TransformProperty);\r\n    TransformProperty.prototype.addDynamicProperty = addDynamicProperty;\r\n    TransformProperty.prototype._addDynamicProperty = DynamicPropertyContainer.prototype.addDynamicProperty;\r\n\r\n    function getTransformProperty(elem,data,container){\r\n        return new TransformProperty(elem,data,container);\r\n    }\r\n\r\n    return {\r\n        getTransformProperty: getTransformProperty\r\n    };\r\n\r\n}());\r\nfunction ShapePath(){\r\n\tthis.c = false;\r\n\tthis._length = 0;\r\n\tthis._maxLength = 8;\r\n\tthis.v = createSizedArray(this._maxLength);\r\n\tthis.o = createSizedArray(this._maxLength);\r\n\tthis.i = createSizedArray(this._maxLength);\r\n}\r\n\r\nShapePath.prototype.setPathData = function(closed, len) {\r\n\tthis.c = closed;\r\n\tthis.setLength(len);\r\n\tvar i = 0;\r\n\twhile(i < len){\r\n\t\tthis.v[i] = point_pool.newElement();\r\n\t\tthis.o[i] = point_pool.newElement();\r\n\t\tthis.i[i] = point_pool.newElement();\r\n\t\ti += 1;\r\n\t}\r\n};\r\n\r\nShapePath.prototype.setLength = function(len) {\r\n\twhile(this._maxLength < len) {\r\n\t\tthis.doubleArrayLength();\r\n\t}\r\n\tthis._length = len;\r\n};\r\n\r\nShapePath.prototype.doubleArrayLength = function() {\r\n\tthis.v = this.v.concat(createSizedArray(this._maxLength));\r\n\tthis.i = this.i.concat(createSizedArray(this._maxLength));\r\n\tthis.o = this.o.concat(createSizedArray(this._maxLength));\r\n\tthis._maxLength *= 2;\r\n};\r\n\r\nShapePath.prototype.setXYAt = function(x, y, type, pos, replace) {\r\n\tvar arr;\r\n\tthis._length = Math.max(this._length, pos + 1);\r\n\tif(this._length >= this._maxLength) {\r\n\t\tthis.doubleArrayLength();\r\n\t}\r\n\tswitch(type){\r\n\t\tcase 'v':\r\n\t\t\tarr = this.v;\r\n\t\t\tbreak;\r\n\t\tcase 'i':\r\n\t\t\tarr = this.i;\r\n\t\t\tbreak;\r\n\t\tcase 'o':\r\n\t\t\tarr = this.o;\r\n\t\t\tbreak;\r\n\t}\r\n\tif(!arr[pos] || (arr[pos] && !replace)){\r\n\t\tarr[pos] = point_pool.newElement();\r\n\t}\r\n\tarr[pos][0] = x;\r\n\tarr[pos][1] = y;\r\n};\r\n\r\nShapePath.prototype.setTripleAt = function(vX,vY,oX,oY,iX,iY,pos, replace) {\r\n\tthis.setXYAt(vX,vY,'v',pos, replace);\r\n\tthis.setXYAt(oX,oY,'o',pos, replace);\r\n\tthis.setXYAt(iX,iY,'i',pos, replace);\r\n};\r\n\r\nShapePath.prototype.reverse = function() {\r\n\tvar newPath = new ShapePath();\r\n\tnewPath.setPathData(this.c, this._length);\r\n\tvar vertices = this.v, outPoints = this.o, inPoints = this.i;\r\n\tvar init = 0;\r\n\tif (this.c) {\r\n\t\tnewPath.setTripleAt(vertices[0][0], vertices[0][1], inPoints[0][0], inPoints[0][1], outPoints[0][0], outPoints[0][1], 0, false);\r\n        init = 1;\r\n    }\r\n    var cnt = this._length - 1;\r\n    var len = this._length;\r\n\r\n    var i;\r\n    for (i = init; i < len; i += 1) {\r\n    \tnewPath.setTripleAt(vertices[cnt][0], vertices[cnt][1], inPoints[cnt][0], inPoints[cnt][1], outPoints[cnt][0], outPoints[cnt][1], i, false);\r\n        cnt -= 1;\r\n    }\r\n    return newPath;\r\n};\r\nvar ShapePropertyFactory = (function(){\r\n\r\n    var initFrame = -999999;\r\n\r\n    function interpolateShape(frameNum, previousValue, caching) {\r\n        var iterationIndex = caching.lastIndex;\r\n        var keyPropS,keyPropE,isHold, j, k, jLen, kLen, perc, vertexValue;\r\n        var kf = this.keyframes;\r\n        if(frameNum < kf[0].t-this.offsetTime){\r\n            keyPropS = kf[0].s[0];\r\n            isHold = true;\r\n            iterationIndex = 0;\r\n        }else if(frameNum >= kf[kf.length - 1].t-this.offsetTime){\r\n            keyPropS = kf[kf.length - 1].s ? kf[kf.length - 1].s[0] : kf[kf.length - 2].e[0];\r\n            /*if(kf[kf.length - 1].s){\r\n                keyPropS = kf[kf.length - 1].s[0];\r\n            }else{\r\n                keyPropS = kf[kf.length - 2].e[0];\r\n            }*/\r\n            isHold = true;\r\n        }else{\r\n            var i = iterationIndex;\r\n            var len = kf.length- 1,flag = true,keyData,nextKeyData;\r\n            while(flag){\r\n                keyData = kf[i];\r\n                nextKeyData = kf[i+1];\r\n                if((nextKeyData.t - this.offsetTime) > frameNum){\r\n                    break;\r\n                }\r\n                if(i < len - 1){\r\n                    i += 1;\r\n                }else{\r\n                    flag = false;\r\n                }\r\n            }\r\n            isHold = keyData.h === 1;\r\n            iterationIndex = i;\r\n            if(!isHold){\r\n                if(frameNum >= nextKeyData.t-this.offsetTime){\r\n                    perc = 1;\r\n                }else if(frameNum < keyData.t-this.offsetTime){\r\n                    perc = 0;\r\n                }else{\r\n                    var fnc;\r\n                    if(keyData.__fnct){\r\n                        fnc = keyData.__fnct;\r\n                    }else{\r\n                        fnc = BezierFactory.getBezierEasing(keyData.o.x,keyData.o.y,keyData.i.x,keyData.i.y).get;\r\n                        keyData.__fnct = fnc;\r\n                    }\r\n                    perc = fnc((frameNum-(keyData.t-this.offsetTime))/((nextKeyData.t-this.offsetTime)-(keyData.t-this.offsetTime)));\r\n                }\r\n                keyPropE = nextKeyData.s ? nextKeyData.s[0] : keyData.e[0];\r\n            }\r\n            keyPropS = keyData.s[0];\r\n        }\r\n        jLen = previousValue._length;\r\n        kLen = keyPropS.i[0].length;\r\n        caching.lastIndex = iterationIndex;\r\n\r\n        for(j=0;j<jLen;j+=1){\r\n            for(k=0;k<kLen;k+=1){\r\n                vertexValue = isHold ? keyPropS.i[j][k] :  keyPropS.i[j][k]+(keyPropE.i[j][k]-keyPropS.i[j][k])*perc;\r\n                previousValue.i[j][k] = vertexValue;\r\n                vertexValue = isHold ? keyPropS.o[j][k] :  keyPropS.o[j][k]+(keyPropE.o[j][k]-keyPropS.o[j][k])*perc;\r\n                previousValue.o[j][k] = vertexValue;\r\n                vertexValue = isHold ? keyPropS.v[j][k] :  keyPropS.v[j][k]+(keyPropE.v[j][k]-keyPropS.v[j][k])*perc;\r\n                previousValue.v[j][k] = vertexValue;\r\n            }\r\n        }\r\n    }\r\n\r\n    function interpolateShapeCurrentTime(){\r\n        var frameNum = this.comp.renderedFrame - this.offsetTime;\r\n        var initTime = this.keyframes[0].t - this.offsetTime;\r\n        var endTime = this.keyframes[this.keyframes.length - 1].t - this.offsetTime;\r\n        var lastFrame = this._caching.lastFrame;\r\n        if(!(lastFrame !== initFrame && ((lastFrame < initTime && frameNum < initTime) || (lastFrame > endTime && frameNum > endTime)))){\r\n            ////\r\n            this._caching.lastIndex = lastFrame < frameNum ? this._caching.lastIndex : 0;\r\n            this.interpolateShape(frameNum, this.pv, this._caching);\r\n            ////\r\n        }\r\n        this._caching.lastFrame = frameNum;\r\n        return this.pv;\r\n    }\r\n\r\n    function resetShape(){\r\n        this.paths = this.localShapeCollection;\r\n    }\r\n\r\n    function shapesEqual(shape1, shape2) {\r\n        if(shape1._length !== shape2._length || shape1.c !== shape2.c){\r\n            return false;\r\n        }\r\n        var i, len = shape1._length;\r\n        for(i = 0; i < len; i += 1) {\r\n            if(shape1.v[i][0] !== shape2.v[i][0] \r\n            || shape1.v[i][1] !== shape2.v[i][1] \r\n            || shape1.o[i][0] !== shape2.o[i][0] \r\n            || shape1.o[i][1] !== shape2.o[i][1] \r\n            || shape1.i[i][0] !== shape2.i[i][0] \r\n            || shape1.i[i][1] !== shape2.i[i][1]) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    function setVValue(newPath) {\r\n        if(!shapesEqual(this.v, newPath)) {\r\n            this.v = shape_pool.clone(newPath);\r\n            this.localShapeCollection.releaseShapes();\r\n            this.localShapeCollection.addShape(this.v);\r\n            this._mdf = true;\r\n            this.paths = this.localShapeCollection;\r\n        }\r\n    }\r\n\r\n    function processEffectsSequence() {\r\n        if(this.elem.globalData.frameId === this.frameId || !this.effectsSequence.length) {\r\n            return;\r\n        }\r\n        if(this.lock) {\r\n            this.setVValue(this.pv);\r\n            return;\r\n        }\r\n        this.lock = true;\r\n        this._mdf = false;\r\n        var finalValue = this.kf ? this.pv : this.data.ks ? this.data.ks.k : this.data.pt.k;\r\n        var i, len = this.effectsSequence.length;\r\n        for(i = 0; i < len; i += 1) {\r\n            finalValue = this.effectsSequence[i](finalValue);\r\n        }\r\n        this.setVValue(finalValue);\r\n        this.lock = false;\r\n        this.frameId = this.elem.globalData.frameId;\r\n    };\r\n\r\n    function ShapeProperty(elem, data, type){\r\n        this.propType = 'shape';\r\n        this.comp = elem.comp;\r\n        this.container = elem;\r\n        this.elem = elem;\r\n        this.data = data;\r\n        this.k = false;\r\n        this.kf = false;\r\n        this._mdf = false;\r\n        var pathData = type === 3 ? data.pt.k : data.ks.k;\r\n        this.v = shape_pool.clone(pathData);\r\n        this.pv = shape_pool.clone(this.v);\r\n        this.localShapeCollection = shapeCollection_pool.newShapeCollection();\r\n        this.paths = this.localShapeCollection;\r\n        this.paths.addShape(this.v);\r\n        this.reset = resetShape;\r\n        this.effectsSequence = [];\r\n    }\r\n\r\n    function addEffect(effectFunction) {\r\n        this.effectsSequence.push(effectFunction);\r\n        this.container.addDynamicProperty(this);\r\n    }\r\n\r\n    ShapeProperty.prototype.interpolateShape = interpolateShape;\r\n    ShapeProperty.prototype.getValue = processEffectsSequence;\r\n    ShapeProperty.prototype.setVValue = setVValue;\r\n    ShapeProperty.prototype.addEffect = addEffect;\r\n\r\n    function KeyframedShapeProperty(elem,data,type){\r\n        this.propType = 'shape';\r\n        this.comp = elem.comp;\r\n        this.elem = elem;\r\n        this.container = elem;\r\n        this.offsetTime = elem.data.st;\r\n        this.keyframes = type === 3 ? data.pt.k : data.ks.k;\r\n        this.k = true;\r\n        this.kf = true;\r\n        var i, len = this.keyframes[0].s[0].i.length;\r\n        var jLen = this.keyframes[0].s[0].i[0].length;\r\n        this.v = shape_pool.newElement();\r\n        this.v.setPathData(this.keyframes[0].s[0].c, len);\r\n        this.pv = shape_pool.clone(this.v);\r\n        this.localShapeCollection = shapeCollection_pool.newShapeCollection();\r\n        this.paths = this.localShapeCollection;\r\n        this.paths.addShape(this.v);\r\n        this.lastFrame = initFrame;\r\n        this.reset = resetShape;\r\n        this._caching = {lastFrame: initFrame, lastIndex: 0};\r\n        this.effectsSequence = [interpolateShapeCurrentTime.bind(this)];\r\n    }\r\n    KeyframedShapeProperty.prototype.getValue = processEffectsSequence;\r\n    KeyframedShapeProperty.prototype.interpolateShape = interpolateShape;\r\n    KeyframedShapeProperty.prototype.setVValue = setVValue;\r\n    KeyframedShapeProperty.prototype.addEffect = addEffect;\r\n\r\n    var EllShapeProperty = (function(){\r\n\r\n        var cPoint = roundCorner;\r\n\r\n        function EllShapeProperty(elem,data) {\r\n            /*this.v = {\r\n                v: createSizedArray(4),\r\n                i: createSizedArray(4),\r\n                o: createSizedArray(4),\r\n                c: true\r\n            };*/\r\n            this.v = shape_pool.newElement();\r\n            this.v.setPathData(true, 4);\r\n            this.localShapeCollection = shapeCollection_pool.newShapeCollection();\r\n            this.paths = this.localShapeCollection;\r\n            this.localShapeCollection.addShape(this.v);\r\n            this.d = data.d;\r\n            this.elem = elem;\r\n            this.comp = elem.comp;\r\n            this.frameId = -1;\r\n            this.initDynamicPropertyContainer(elem);\r\n            this.p = PropertyFactory.getProp(elem,data.p,1,0,this);\r\n            this.s = PropertyFactory.getProp(elem,data.s,1,0,this);\r\n            if(this.dynamicProperties.length){\r\n                this.k = true;\r\n            }else{\r\n                this.k = false;\r\n                this.convertEllToPath();\r\n            }\r\n        };\r\n\r\n        EllShapeProperty.prototype = {\r\n            reset: resetShape,\r\n            getValue: function (){\r\n                if(this.elem.globalData.frameId === this.frameId){\r\n                    return;\r\n                }\r\n                this.frameId = this.elem.globalData.frameId;\r\n                this.iterateDynamicProperties();\r\n\r\n                if(this._mdf){\r\n                    this.convertEllToPath();\r\n                }\r\n            },\r\n            convertEllToPath: function() {\r\n                var p0 = this.p.v[0], p1 = this.p.v[1], s0 = this.s.v[0]/2, s1 = this.s.v[1]/2;\r\n                var _cw = this.d !== 3;\r\n                var _v = this.v;\r\n                _v.v[0][0] = p0;\r\n                _v.v[0][1] = p1 - s1;\r\n                _v.v[1][0] = _cw ? p0 + s0 : p0 - s0;\r\n                _v.v[1][1] = p1;\r\n                _v.v[2][0] = p0;\r\n                _v.v[2][1] = p1 + s1;\r\n                _v.v[3][0] = _cw ? p0 - s0 : p0 + s0;\r\n                _v.v[3][1] = p1;\r\n                _v.i[0][0] = _cw ? p0 - s0 * cPoint : p0 + s0 * cPoint;\r\n                _v.i[0][1] = p1 - s1;\r\n                _v.i[1][0] = _cw ? p0 + s0 : p0 - s0;\r\n                _v.i[1][1] = p1 - s1 * cPoint;\r\n                _v.i[2][0] = _cw ? p0 + s0 * cPoint : p0 - s0 * cPoint;\r\n                _v.i[2][1] = p1 + s1;\r\n                _v.i[3][0] = _cw ? p0 - s0 : p0 + s0;\r\n                _v.i[3][1] = p1 + s1 * cPoint;\r\n                _v.o[0][0] = _cw ? p0 + s0 * cPoint : p0 - s0 * cPoint;\r\n                _v.o[0][1] = p1 - s1;\r\n                _v.o[1][0] = _cw ? p0 + s0 : p0 - s0;\r\n                _v.o[1][1] = p1 + s1 * cPoint;\r\n                _v.o[2][0] = _cw ? p0 - s0 * cPoint : p0 + s0 * cPoint;\r\n                _v.o[2][1] = p1 + s1;\r\n                _v.o[3][0] = _cw ? p0 - s0 : p0 + s0;\r\n                _v.o[3][1] = p1 - s1 * cPoint;\r\n            }\r\n        }\r\n\r\n        extendPrototype([DynamicPropertyContainer], EllShapeProperty);\r\n\r\n        return EllShapeProperty;\r\n    }());\r\n\r\n    var StarShapeProperty = (function() {\r\n\r\n        function StarShapeProperty(elem,data) {\r\n            this.v = shape_pool.newElement();\r\n            this.v.setPathData(true, 0);\r\n            this.elem = elem;\r\n            this.comp = elem.comp;\r\n            this.data = data;\r\n            this.frameId = -1;\r\n            this.d = data.d;\r\n            this.initDynamicPropertyContainer(elem);\r\n            if(data.sy === 1){\r\n                this.ir = PropertyFactory.getProp(elem,data.ir,0,0,this);\r\n                this.is = PropertyFactory.getProp(elem,data.is,0,0.01,this);\r\n                this.convertToPath = this.convertStarToPath;\r\n            } else {\r\n                this.convertToPath = this.convertPolygonToPath;\r\n            }\r\n            this.pt = PropertyFactory.getProp(elem,data.pt,0,0,this);\r\n            this.p = PropertyFactory.getProp(elem,data.p,1,0,this);\r\n            this.r = PropertyFactory.getProp(elem,data.r,0,degToRads,this);\r\n            this.or = PropertyFactory.getProp(elem,data.or,0,0,this);\r\n            this.os = PropertyFactory.getProp(elem,data.os,0,0.01,this);\r\n            this.localShapeCollection = shapeCollection_pool.newShapeCollection();\r\n            this.localShapeCollection.addShape(this.v);\r\n            this.paths = this.localShapeCollection;\r\n            if(this.dynamicProperties.length){\r\n                this.k = true;\r\n            }else{\r\n                this.k = false;\r\n                this.convertToPath();\r\n            }\r\n        };\r\n\r\n        StarShapeProperty.prototype = {\r\n            reset: resetShape,\r\n            getValue: function() {\r\n                if(this.elem.globalData.frameId === this.frameId){\r\n                    return;\r\n                }\r\n                this.frameId = this.elem.globalData.frameId;\r\n                this.iterateDynamicProperties();\r\n                if(this._mdf){\r\n                    this.convertToPath();\r\n                }\r\n            },\r\n            convertStarToPath: function() {\r\n                var numPts = Math.floor(this.pt.v)*2;\r\n                var angle = Math.PI*2/numPts;\r\n                /*this.v.v.length = numPts;\r\n                this.v.i.length = numPts;\r\n                this.v.o.length = numPts;*/\r\n                var longFlag = true;\r\n                var longRad = this.or.v;\r\n                var shortRad = this.ir.v;\r\n                var longRound = this.os.v;\r\n                var shortRound = this.is.v;\r\n                var longPerimSegment = 2*Math.PI*longRad/(numPts*2);\r\n                var shortPerimSegment = 2*Math.PI*shortRad/(numPts*2);\r\n                var i, rad,roundness,perimSegment, currentAng = -Math.PI/ 2;\r\n                currentAng += this.r.v;\r\n                var dir = this.data.d === 3 ? -1 : 1;\r\n                this.v._length = 0;\r\n                for(i=0;i<numPts;i+=1){\r\n                    rad = longFlag ? longRad : shortRad;\r\n                    roundness = longFlag ? longRound : shortRound;\r\n                    perimSegment = longFlag ? longPerimSegment : shortPerimSegment;\r\n                    var x = rad * Math.cos(currentAng);\r\n                    var y = rad * Math.sin(currentAng);\r\n                    var ox = x === 0 && y === 0 ? 0 : y/Math.sqrt(x*x + y*y);\r\n                    var oy = x === 0 && y === 0 ? 0 : -x/Math.sqrt(x*x + y*y);\r\n                    x +=  + this.p.v[0];\r\n                    y +=  + this.p.v[1];\r\n                    this.v.setTripleAt(x,y,x-ox*perimSegment*roundness*dir,y-oy*perimSegment*roundness*dir,x+ox*perimSegment*roundness*dir,y+oy*perimSegment*roundness*dir, i, true);\r\n\r\n                    /*this.v.v[i] = [x,y];\r\n                    this.v.i[i] = [x+ox*perimSegment*roundness*dir,y+oy*perimSegment*roundness*dir];\r\n                    this.v.o[i] = [x-ox*perimSegment*roundness*dir,y-oy*perimSegment*roundness*dir];\r\n                    this.v._length = numPts;*/\r\n                    longFlag = !longFlag;\r\n                    currentAng += angle*dir;\r\n                }\r\n            },\r\n            convertPolygonToPath: function() {\r\n                var numPts = Math.floor(this.pt.v);\r\n                var angle = Math.PI*2/numPts;\r\n                var rad = this.or.v;\r\n                var roundness = this.os.v;\r\n                var perimSegment = 2*Math.PI*rad/(numPts*4);\r\n                var i, currentAng = -Math.PI/ 2;\r\n                var dir = this.data.d === 3 ? -1 : 1;\r\n                currentAng += this.r.v;\r\n                this.v._length = 0;\r\n                for(i=0;i<numPts;i+=1){\r\n                    var x = rad * Math.cos(currentAng);\r\n                    var y = rad * Math.sin(currentAng);\r\n                    var ox = x === 0 && y === 0 ? 0 : y/Math.sqrt(x*x + y*y);\r\n                    var oy = x === 0 && y === 0 ? 0 : -x/Math.sqrt(x*x + y*y);\r\n                    x +=  + this.p.v[0];\r\n                    y +=  + this.p.v[1];\r\n                    this.v.setTripleAt(x,y,x-ox*perimSegment*roundness*dir,y-oy*perimSegment*roundness*dir,x+ox*perimSegment*roundness*dir,y+oy*perimSegment*roundness*dir, i, true);\r\n                    currentAng += angle*dir;\r\n                }\r\n                this.paths.length = 0;\r\n                this.paths[0] = this.v;\r\n            }\r\n\r\n        }\r\n        extendPrototype([DynamicPropertyContainer], StarShapeProperty);\r\n\r\n        return StarShapeProperty;\r\n    }());\r\n\r\n    var RectShapeProperty = (function() {\r\n\r\n         function RectShapeProperty(elem,data) {\r\n            this.v = shape_pool.newElement();\r\n            this.v.c = true;\r\n            this.localShapeCollection = shapeCollection_pool.newShapeCollection();\r\n            this.localShapeCollection.addShape(this.v);\r\n            this.paths = this.localShapeCollection;\r\n            this.elem = elem;\r\n            this.comp = elem.comp;\r\n            this.frameId = -1;\r\n            this.d = data.d;\r\n            this.initDynamicPropertyContainer(elem);\r\n            this.p = PropertyFactory.getProp(elem,data.p,1,0,this);\r\n            this.s = PropertyFactory.getProp(elem,data.s,1,0,this);\r\n            this.r = PropertyFactory.getProp(elem,data.r,0,0,this);\r\n            if(this.dynamicProperties.length){\r\n                this.k = true;\r\n            }else{\r\n                this.k = false;\r\n                this.convertRectToPath();\r\n            }\r\n        };\r\n\r\n        RectShapeProperty.prototype = {\r\n            convertRectToPath: function (){\r\n                var p0 = this.p.v[0], p1 = this.p.v[1], v0 = this.s.v[0]/2, v1 = this.s.v[1]/2;\r\n                var round = bm_min(v0,v1,this.r.v);\r\n                var cPoint = round*(1-roundCorner);\r\n                this.v._length = 0;\r\n\r\n                if(this.d === 2 || this.d === 1) {\r\n                    this.v.setTripleAt(p0+v0, p1-v1+round,p0+v0, p1-v1+round,p0+v0,p1-v1+cPoint,0, true);\r\n                    this.v.setTripleAt(p0+v0, p1+v1-round,p0+v0, p1+v1-cPoint,p0+v0, p1+v1-round,1, true);\r\n                    if(round!== 0){\r\n                        this.v.setTripleAt(p0+v0-round, p1+v1,p0+v0-round,p1+v1,p0+v0-cPoint,p1+v1,2, true);\r\n                        this.v.setTripleAt(p0-v0+round,p1+v1,p0-v0+cPoint,p1+v1,p0-v0+round,p1+v1,3, true);\r\n                        this.v.setTripleAt(p0-v0,p1+v1-round,p0-v0,p1+v1-round,p0-v0,p1+v1-cPoint,4, true);\r\n                        this.v.setTripleAt(p0-v0,p1-v1+round,p0-v0,p1-v1+cPoint,p0-v0,p1-v1+round,5, true);\r\n                        this.v.setTripleAt(p0-v0+round,p1-v1,p0-v0+round,p1-v1,p0-v0+cPoint,p1-v1,6, true);\r\n                        this.v.setTripleAt(p0+v0-round,p1-v1,p0+v0-cPoint,p1-v1,p0+v0-round,p1-v1,7, true);\r\n                    } else {\r\n                        this.v.setTripleAt(p0-v0,p1+v1,p0-v0+cPoint,p1+v1,p0-v0,p1+v1,2);\r\n                        this.v.setTripleAt(p0-v0,p1-v1,p0-v0,p1-v1+cPoint,p0-v0,p1-v1,3);\r\n                    }\r\n                }else{\r\n                    this.v.setTripleAt(p0+v0,p1-v1+round,p0+v0,p1-v1+cPoint,p0+v0,p1-v1+round,0, true);\r\n                    if(round!== 0){\r\n                        this.v.setTripleAt(p0+v0-round,p1-v1,p0+v0-round,p1-v1,p0+v0-cPoint,p1-v1,1, true);\r\n                        this.v.setTripleAt(p0-v0+round,p1-v1,p0-v0+cPoint,p1-v1,p0-v0+round,p1-v1,2, true);\r\n                        this.v.setTripleAt(p0-v0,p1-v1+round,p0-v0,p1-v1+round,p0-v0,p1-v1+cPoint,3, true);\r\n                        this.v.setTripleAt(p0-v0,p1+v1-round,p0-v0,p1+v1-cPoint,p0-v0,p1+v1-round,4, true);\r\n                        this.v.setTripleAt(p0-v0+round,p1+v1,p0-v0+round,p1+v1,p0-v0+cPoint,p1+v1,5, true);\r\n                        this.v.setTripleAt(p0+v0-round,p1+v1,p0+v0-cPoint,p1+v1,p0+v0-round,p1+v1,6, true);\r\n                        this.v.setTripleAt(p0+v0,p1+v1-round,p0+v0,p1+v1-round,p0+v0,p1+v1-cPoint,7, true);\r\n                    } else {\r\n                        this.v.setTripleAt(p0-v0,p1-v1,p0-v0+cPoint,p1-v1,p0-v0,p1-v1,1, true);\r\n                        this.v.setTripleAt(p0-v0,p1+v1,p0-v0,p1+v1-cPoint,p0-v0,p1+v1,2, true);\r\n                        this.v.setTripleAt(p0+v0,p1+v1,p0+v0-cPoint,p1+v1,p0+v0,p1+v1,3, true);\r\n\r\n                    }\r\n                }\r\n            },\r\n            getValue: function(frameNum){\r\n                if(this.elem.globalData.frameId === this.frameId){\r\n                    return;\r\n                }\r\n                this.frameId = this.elem.globalData.frameId;\r\n                this.iterateDynamicProperties();\r\n                if(this._mdf){\r\n                    this.convertRectToPath();\r\n                }\r\n\r\n            },\r\n            reset: resetShape\r\n        }\r\n        extendPrototype([DynamicPropertyContainer], RectShapeProperty);\r\n\r\n        return RectShapeProperty;\r\n    }());\r\n\r\n    function getShapeProp(elem,data,type){\r\n        var prop;\r\n        if(type === 3 || type === 4){\r\n            var dataProp = type === 3 ? data.pt : data.ks;\r\n            var keys = dataProp.k;\r\n            if(keys.length){\r\n                prop = new KeyframedShapeProperty(elem, data, type);\r\n            }else{\r\n                prop = new ShapeProperty(elem, data, type);\r\n            }\r\n        }else if(type === 5){\r\n            prop = new RectShapeProperty(elem, data);\r\n        }else if(type === 6){\r\n            prop = new EllShapeProperty(elem, data);\r\n        }else if(type === 7){\r\n            prop = new StarShapeProperty(elem, data);\r\n        }\r\n        if(prop.k){\r\n            elem.addDynamicProperty(prop);\r\n        }\r\n        return prop;\r\n    }\r\n\r\n    function getConstructorFunction() {\r\n        return ShapeProperty;\r\n    }\r\n\r\n    function getKeyframedConstructorFunction() {\r\n        return KeyframedShapeProperty;\r\n    }\r\n\r\n    var ob = {};\r\n    ob.getShapeProp = getShapeProp;\r\n    ob.getConstructorFunction = getConstructorFunction;\r\n    ob.getKeyframedConstructorFunction = getKeyframedConstructorFunction;\r\n    return ob;\r\n}());\r\nvar ShapeModifiers = (function(){\r\n    var ob = {};\r\n    var modifiers = {};\r\n    ob.registerModifier = registerModifier;\r\n    ob.getModifier = getModifier;\r\n\r\n    function registerModifier(nm,factory){\r\n        if(!modifiers[nm]){\r\n            modifiers[nm] = factory;\r\n        }\r\n    }\r\n\r\n    function getModifier(nm,elem, data){\r\n        return new modifiers[nm](elem, data);\r\n    }\r\n\r\n    return ob;\r\n}());\r\n\r\nfunction ShapeModifier(){}\r\nShapeModifier.prototype.initModifierProperties = function(){};\r\nShapeModifier.prototype.addShapeToModifier = function(){};\r\nShapeModifier.prototype.addShape = function(data){\r\n    if(!this.closed){\r\n        var shapeData = {shape:data.sh, data: data, localShapeCollection:shapeCollection_pool.newShapeCollection()};\r\n        this.shapes.push(shapeData);\r\n        this.addShapeToModifier(shapeData);\r\n        if(this._isAnimated) {\r\n            data.setAsAnimated();\r\n        }\r\n    }\r\n};\r\nShapeModifier.prototype.init = function(elem,data){\r\n    this.shapes = [];\r\n    this.elem = elem;\r\n    this.initDynamicPropertyContainer(elem);\r\n    this.initModifierProperties(elem,data);\r\n    this.frameId = initialDefaultFrame;\r\n    this.closed = false;\r\n    this.k = false;\r\n    if(this.dynamicProperties.length){\r\n        this.k = true;\r\n    }else{\r\n        this.getValue(true);\r\n    }\r\n};\r\nShapeModifier.prototype.processKeys = function(){\r\n    if(this.elem.globalData.frameId === this.frameId){\r\n        return;\r\n    }\r\n    this.frameId = this.elem.globalData.frameId;\r\n    this.iterateDynamicProperties();\r\n};\r\n\r\nextendPrototype([DynamicPropertyContainer], ShapeModifier);\r\nfunction TrimModifier(){\r\n}\r\nextendPrototype([ShapeModifier], TrimModifier);\r\nTrimModifier.prototype.initModifierProperties = function(elem, data) {\r\n    this.s = PropertyFactory.getProp(elem, data.s, 0, 0.01, this);\r\n    this.e = PropertyFactory.getProp(elem, data.e, 0, 0.01, this);\r\n    this.o = PropertyFactory.getProp(elem, data.o, 0, 0, this);\r\n    this.sValue = 0;\r\n    this.eValue = 0;\r\n    this.getValue = this.processKeys;\r\n    this.m = data.m;\r\n    this._isAnimated = !!this.s.effectsSequence.length || !!this.e.effectsSequence.length || !!this.o.effectsSequence.length;\r\n};\r\n\r\nTrimModifier.prototype.addShapeToModifier = function(shapeData){\r\n    shapeData.pathsData = [];\r\n};\r\n\r\nTrimModifier.prototype.calculateShapeEdges = function(s, e, shapeLength, addedLength, totalModifierLength) {\r\n    var segments = [];\r\n    if (e <= 1) {\r\n        segments.push({\r\n            s: s,\r\n            e: e\r\n        });\r\n    } else if (s >= 1) {\r\n        segments.push({\r\n            s: s - 1,\r\n            e: e - 1\r\n        });\r\n    } else {\r\n        segments.push({\r\n            s: s,\r\n            e: 1\r\n        });\r\n        segments.push({\r\n            s: 0,\r\n            e: e - 1\r\n        });\r\n    }\r\n    var shapeSegments = [];\r\n    var i, len = segments.length, segmentOb;\r\n    for (i = 0; i < len; i += 1) {\r\n        segmentOb = segments[i];\r\n        if (segmentOb.e * totalModifierLength < addedLength || segmentOb.s * totalModifierLength > addedLength + shapeLength) {\r\n            \r\n        } else {\r\n            var shapeS, shapeE;\r\n            if (segmentOb.s * totalModifierLength <= addedLength) {\r\n                shapeS = 0;\r\n            } else {\r\n                shapeS = (segmentOb.s * totalModifierLength - addedLength) / shapeLength;\r\n            }\r\n            if(segmentOb.e * totalModifierLength >= addedLength + shapeLength) {\r\n                shapeE = 1;\r\n            } else {\r\n                shapeE = ((segmentOb.e * totalModifierLength - addedLength) / shapeLength);\r\n            }\r\n            shapeSegments.push([shapeS, shapeE]);\r\n        }\r\n    }\r\n    if (!shapeSegments.length) {\r\n        shapeSegments.push([0, 0]);\r\n    }\r\n    return shapeSegments;\r\n};\r\n\r\nTrimModifier.prototype.releasePathsData = function(pathsData) {\r\n    var i, len = pathsData.length;\r\n    for (i = 0; i < len; i += 1) {\r\n        segments_length_pool.release(pathsData[i]);\r\n    }\r\n    pathsData.length = 0;\r\n    return pathsData;\r\n};\r\n\r\nTrimModifier.prototype.processShapes = function(_isFirstFrame) {\r\n    var s, e;\r\n    if (this._mdf || _isFirstFrame) {\r\n        var o = (this.o.v % 360) / 360;\r\n        if (o < 0) {\r\n            o += 1;\r\n        }\r\n        s = (this.s.v > 1 ? 1 : this.s.v < 0 ? 0 : this.s.v) + o;\r\n        e = (this.e.v > 1 ? 1 : this.e.v < 0 ? 0 : this.e.v) + o;\r\n        if (s === e) {\r\n\r\n        }\r\n        if (s > e) {\r\n            var _s = s;\r\n            s = e;\r\n            e = _s;\r\n        }\r\n        s = Math.round(s * 10000) * 0.0001;\r\n        e = Math.round(e * 10000) * 0.0001;\r\n        this.sValue = s;\r\n        this.eValue = e;\r\n    } else {\r\n        s = this.sValue;\r\n        e = this.eValue;\r\n    }\r\n    var shapePaths;\r\n    var i, len = this.shapes.length, j, jLen;\r\n    var pathsData, pathData, totalShapeLength, totalModifierLength = 0;\r\n\r\n    if (e === s) {\r\n        for (i = 0; i < len; i += 1) {\r\n            this.shapes[i].localShapeCollection.releaseShapes();\r\n            this.shapes[i].shape._mdf = true;\r\n            this.shapes[i].shape.paths = this.shapes[i].localShapeCollection;\r\n        }\r\n    } else if (!((e === 1 && s === 0) || (e===0 && s === 1))){\r\n        var segments = [], shapeData, localShapeCollection;\r\n        for (i = 0; i < len; i += 1) {\r\n            shapeData = this.shapes[i];\r\n            // if shape hasn't changed and trim properties haven't changed, cached previous path can be used\r\n            if (!shapeData.shape._mdf && !this._mdf && !_isFirstFrame && this.m !== 2) {\r\n                shapeData.shape.paths = shapeData.localShapeCollection;\r\n            } else {\r\n                shapePaths = shapeData.shape.paths;\r\n                jLen = shapePaths._length;\r\n                totalShapeLength = 0;\r\n                if (!shapeData.shape._mdf && shapeData.pathsData.length) {\r\n                    totalShapeLength = shapeData.totalShapeLength;\r\n                } else {\r\n                    pathsData = this.releasePathsData(shapeData.pathsData);\r\n                    for (j = 0; j < jLen; j += 1) {\r\n                        pathData = bez.getSegmentsLength(shapePaths.shapes[j]);\r\n                        pathsData.push(pathData);\r\n                        totalShapeLength += pathData.totalLength;\r\n                    }\r\n                    shapeData.totalShapeLength = totalShapeLength;\r\n                    shapeData.pathsData = pathsData;\r\n                }\r\n\r\n                totalModifierLength += totalShapeLength;\r\n                shapeData.shape._mdf = true;\r\n            }\r\n        }\r\n        var shapeS = s, shapeE = e, addedLength = 0, edges;\r\n        for (i = len - 1; i >= 0; i -= 1) {\r\n            shapeData = this.shapes[i];\r\n            if (shapeData.shape._mdf) {\r\n                localShapeCollection = shapeData.localShapeCollection;\r\n                localShapeCollection.releaseShapes();\r\n                //if m === 2 means paths are trimmed individually so edges need to be found for this specific shape relative to whoel group\r\n                if (this.m === 2 && len > 1) {\r\n                    edges = this.calculateShapeEdges(s, e, shapeData.totalShapeLength, addedLength, totalModifierLength);\r\n                    addedLength += shapeData.totalShapeLength;\r\n                } else {\r\n                    edges = [[shapeS, shapeE]];\r\n                }\r\n                jLen = edges.length;\r\n                for (j = 0; j < jLen; j += 1) {\r\n                    shapeS = edges[j][0];\r\n                    shapeE = edges[j][1];\r\n                    segments.length = 0;\r\n                    if (shapeE <= 1) {\r\n                        segments.push({\r\n                            s:shapeData.totalShapeLength * shapeS,\r\n                            e:shapeData.totalShapeLength * shapeE\r\n                        });\r\n                    } else if (shapeS >= 1) {\r\n                        segments.push({\r\n                            s:shapeData.totalShapeLength * (shapeS - 1),\r\n                            e:shapeData.totalShapeLength * (shapeE - 1)\r\n                        });\r\n                    } else {\r\n                        segments.push({\r\n                            s:shapeData.totalShapeLength * shapeS,\r\n                            e:shapeData.totalShapeLength\r\n                        });\r\n                        segments.push({\r\n                            s:0,\r\n                            e:shapeData.totalShapeLength * (shapeE - 1)\r\n                        });\r\n                    }\r\n                    var newShapesData = this.addShapes(shapeData,segments[0]);\r\n                    if (segments[0].s !== segments[0].e) {\r\n                        if (segments.length > 1) {\r\n                            var lastShapeInCollection = shapeData.shape.paths.shapes[shapeData.shape.paths._length - 1];\r\n                            if (lastShapeInCollection.c) {\r\n                                var lastShape = newShapesData.pop();\r\n                                this.addPaths(newShapesData, localShapeCollection);\r\n                                newShapesData = this.addShapes(shapeData, segments[1], lastShape);\r\n                            } else {\r\n                                this.addPaths(newShapesData, localShapeCollection);\r\n                                newShapesData = this.addShapes(shapeData, segments[1]);\r\n                            }\r\n                        } \r\n                        this.addPaths(newShapesData, localShapeCollection);\r\n                    }\r\n                    \r\n                }\r\n                shapeData.shape.paths = localShapeCollection;\r\n            }\r\n        }\r\n    } else if (this._mdf) {\r\n        for (i = 0; i < len; i += 1) {\r\n            //Releasign Trim Cached paths data when no trim applied in case shapes are modified inbetween.\r\n            //Don't remove this even if it's losing cached info.\r\n            this.shapes[i].pathsData.length = 0;\r\n            this.shapes[i].shape._mdf = true;\r\n        }\r\n    }\r\n};\r\n\r\nTrimModifier.prototype.addPaths = function(newPaths, localShapeCollection) {\r\n    var i, len = newPaths.length;\r\n    for (i = 0; i < len; i += 1) {\r\n        localShapeCollection.addShape(newPaths[i]);\r\n    }\r\n};\r\n\r\nTrimModifier.prototype.addSegment = function(pt1, pt2, pt3, pt4, shapePath, pos, newShape) {\r\n    shapePath.setXYAt(pt2[0], pt2[1], 'o', pos);\r\n    shapePath.setXYAt(pt3[0], pt3[1], 'i', pos + 1);\r\n    if(newShape){\r\n        shapePath.setXYAt(pt1[0], pt1[1], 'v', pos);\r\n    }\r\n    shapePath.setXYAt(pt4[0], pt4[1], 'v', pos + 1);\r\n};\r\n\r\nTrimModifier.prototype.addSegmentFromArray = function(points, shapePath, pos, newShape) {\r\n    shapePath.setXYAt(points[1], points[5], 'o', pos);\r\n    shapePath.setXYAt(points[2], points[6], 'i', pos + 1);\r\n    if(newShape){\r\n        shapePath.setXYAt(points[0], points[4], 'v', pos);\r\n    }\r\n    shapePath.setXYAt(points[3], points[7], 'v', pos + 1);\r\n};\r\n\r\nTrimModifier.prototype.addShapes = function(shapeData, shapeSegment, shapePath) {\r\n    var pathsData = shapeData.pathsData;\r\n    var shapePaths = shapeData.shape.paths.shapes;\r\n    var i, len = shapeData.shape.paths._length, j, jLen;\r\n    var addedLength = 0;\r\n    var currentLengthData,segmentCount;\r\n    var lengths;\r\n    var segment;\r\n    var shapes = [];\r\n    var initPos;\r\n    var newShape = true;\r\n    if (!shapePath) {\r\n        shapePath = shape_pool.newElement();\r\n        segmentCount = 0;\r\n        initPos = 0;\r\n    } else {\r\n        segmentCount = shapePath._length;\r\n        initPos = shapePath._length;\r\n    }\r\n    shapes.push(shapePath);\r\n    for (i = 0; i < len; i += 1) {\r\n        lengths = pathsData[i].lengths;\r\n        shapePath.c = shapePaths[i].c;\r\n        jLen = shapePaths[i].c ? lengths.length : lengths.length + 1;\r\n        for (j = 1; j < jLen; j +=1) {\r\n            currentLengthData = lengths[j-1];\r\n            if (addedLength + currentLengthData.addedLength < shapeSegment.s) {\r\n                addedLength += currentLengthData.addedLength;\r\n                shapePath.c = false;\r\n            } else if(addedLength > shapeSegment.e) {\r\n                shapePath.c = false;\r\n                break;\r\n            } else {\r\n                if (shapeSegment.s <= addedLength && shapeSegment.e >= addedLength + currentLengthData.addedLength) {\r\n                    this.addSegment(shapePaths[i].v[j - 1], shapePaths[i].o[j - 1], shapePaths[i].i[j], shapePaths[i].v[j], shapePath, segmentCount, newShape);\r\n                    newShape = false;\r\n                } else {\r\n                    segment = bez.getNewSegment(shapePaths[i].v[j - 1], shapePaths[i].v[j], shapePaths[i].o[j - 1], shapePaths[i].i[j], (shapeSegment.s - addedLength)/currentLengthData.addedLength,(shapeSegment.e - addedLength)/currentLengthData.addedLength, lengths[j-1]);\r\n                    this.addSegmentFromArray(segment, shapePath, segmentCount, newShape);\r\n                    // this.addSegment(segment.pt1, segment.pt3, segment.pt4, segment.pt2, shapePath, segmentCount, newShape);\r\n                    newShape = false;\r\n                    shapePath.c = false;\r\n                }\r\n                addedLength += currentLengthData.addedLength;\r\n                segmentCount += 1;\r\n            }\r\n        }\r\n        if (shapePaths[i].c && lengths.length) {\r\n            currentLengthData = lengths[j - 1];\r\n            if (addedLength <= shapeSegment.e) {\r\n                var segmentLength = lengths[j - 1].addedLength;\r\n                if (shapeSegment.s <= addedLength && shapeSegment.e >= addedLength + segmentLength) {\r\n                    this.addSegment(shapePaths[i].v[j - 1], shapePaths[i].o[j - 1], shapePaths[i].i[0], shapePaths[i].v[0], shapePath, segmentCount, newShape);\r\n                    newShape = false;\r\n                } else {\r\n                    segment = bez.getNewSegment(shapePaths[i].v[j - 1], shapePaths[i].v[0], shapePaths[i].o[j - 1], shapePaths[i].i[0], (shapeSegment.s - addedLength) / segmentLength, (shapeSegment.e - addedLength) / segmentLength, lengths[j - 1]);\r\n                    this.addSegmentFromArray(segment, shapePath, segmentCount, newShape);\r\n                    // this.addSegment(segment.pt1, segment.pt3, segment.pt4, segment.pt2, shapePath, segmentCount, newShape);\r\n                    newShape = false;\r\n                    shapePath.c = false;\r\n                }\r\n            } else {\r\n                shapePath.c = false;\r\n            }\r\n            addedLength += currentLengthData.addedLength;\r\n            segmentCount += 1;\r\n        }\r\n        if (shapePath._length) {\r\n            shapePath.setXYAt(shapePath.v[initPos][0], shapePath.v[initPos][1], 'i', initPos);\r\n            shapePath.setXYAt(shapePath.v[shapePath._length - 1][0], shapePath.v[shapePath._length - 1][1],'o', shapePath._length - 1);\r\n        }\r\n        if (addedLength > shapeSegment.e) {\r\n            break;\r\n        }\r\n        if (i < len - 1) {\r\n            shapePath = shape_pool.newElement();\r\n            newShape = true;\r\n            shapes.push(shapePath);\r\n            segmentCount = 0;\r\n        }\r\n    }\r\n    return shapes;\r\n};\r\n\r\n\r\nShapeModifiers.registerModifier('tm', TrimModifier);\r\nfunction RoundCornersModifier(){}\r\nextendPrototype([ShapeModifier],RoundCornersModifier);\r\nRoundCornersModifier.prototype.initModifierProperties = function(elem,data){\r\n    this.getValue = this.processKeys;\r\n    this.rd = PropertyFactory.getProp(elem,data.r,0,null,this);\r\n    this._isAnimated = !!this.rd.effectsSequence.length;\r\n};\r\n\r\nRoundCornersModifier.prototype.processPath = function(path, round){\r\n    var cloned_path = shape_pool.newElement();\r\n    cloned_path.c = path.c;\r\n    var i, len = path._length;\r\n    var currentV,currentI,currentO,closerV, newV,newO,newI,distance,newPosPerc,index = 0;\r\n    var vX,vY,oX,oY,iX,iY;\r\n    for(i=0;i<len;i+=1){\r\n        currentV = path.v[i];\r\n        currentO = path.o[i];\r\n        currentI = path.i[i];\r\n        if(currentV[0]===currentO[0] && currentV[1]===currentO[1] && currentV[0]===currentI[0] && currentV[1]===currentI[1]){\r\n            if((i===0 || i === len - 1) && !path.c){\r\n                cloned_path.setTripleAt(currentV[0],currentV[1],currentO[0],currentO[1],currentI[0],currentI[1],index);\r\n                /*cloned_path.v[index] = currentV;\r\n                cloned_path.o[index] = currentO;\r\n                cloned_path.i[index] = currentI;*/\r\n                index += 1;\r\n            } else {\r\n                if(i===0){\r\n                    closerV = path.v[len-1];\r\n                } else {\r\n                    closerV = path.v[i-1];\r\n                }\r\n                distance = Math.sqrt(Math.pow(currentV[0]-closerV[0],2)+Math.pow(currentV[1]-closerV[1],2));\r\n                newPosPerc = distance ? Math.min(distance/2,round)/distance : 0;\r\n                vX = iX = currentV[0]+(closerV[0]-currentV[0])*newPosPerc;\r\n                vY = iY = currentV[1]-(currentV[1]-closerV[1])*newPosPerc;\r\n                oX = vX-(vX-currentV[0])*roundCorner;\r\n                oY = vY-(vY-currentV[1])*roundCorner;\r\n                cloned_path.setTripleAt(vX,vY,oX,oY,iX,iY,index);\r\n                index += 1;\r\n\r\n                if(i === len - 1){\r\n                    closerV = path.v[0];\r\n                } else {\r\n                    closerV = path.v[i+1];\r\n                }\r\n                distance = Math.sqrt(Math.pow(currentV[0]-closerV[0],2)+Math.pow(currentV[1]-closerV[1],2));\r\n                newPosPerc = distance ? Math.min(distance/2,round)/distance : 0;\r\n                vX = oX = currentV[0]+(closerV[0]-currentV[0])*newPosPerc;\r\n                vY = oY = currentV[1]+(closerV[1]-currentV[1])*newPosPerc;\r\n                iX = vX-(vX-currentV[0])*roundCorner;\r\n                iY = vY-(vY-currentV[1])*roundCorner;\r\n                cloned_path.setTripleAt(vX,vY,oX,oY,iX,iY,index);\r\n                index += 1;\r\n            }\r\n        } else {\r\n            cloned_path.setTripleAt(path.v[i][0],path.v[i][1],path.o[i][0],path.o[i][1],path.i[i][0],path.i[i][1],index);\r\n            index += 1;\r\n        }\r\n    }\r\n    return cloned_path;\r\n};\r\n\r\nRoundCornersModifier.prototype.processShapes = function(_isFirstFrame){\r\n    var shapePaths;\r\n    var i, len = this.shapes.length;\r\n    var j, jLen;\r\n    var rd = this.rd.v;\r\n\r\n    if(rd !== 0){\r\n        var shapeData, newPaths, localShapeCollection;\r\n        for(i=0;i<len;i+=1){\r\n            shapeData = this.shapes[i];\r\n            newPaths = shapeData.shape.paths;\r\n            localShapeCollection = shapeData.localShapeCollection;\r\n            if(!(!shapeData.shape._mdf && !this._mdf && !_isFirstFrame)){\r\n                localShapeCollection.releaseShapes();\r\n                shapeData.shape._mdf = true;\r\n                shapePaths = shapeData.shape.paths.shapes;\r\n                jLen = shapeData.shape.paths._length;\r\n                for(j=0;j<jLen;j+=1){\r\n                    localShapeCollection.addShape(this.processPath(shapePaths[j],rd));\r\n                }\r\n            }\r\n            shapeData.shape.paths = shapeData.localShapeCollection;\r\n        }\r\n\r\n    }\r\n    if(!this.dynamicProperties.length){\r\n        this._mdf = false;\r\n    }\r\n};\r\n\r\nShapeModifiers.registerModifier('rd',RoundCornersModifier);\r\nfunction RepeaterModifier(){}\r\nextendPrototype([ShapeModifier], RepeaterModifier);\r\n\r\nRepeaterModifier.prototype.initModifierProperties = function(elem,data){\r\n    this.getValue = this.processKeys;\r\n    this.c = PropertyFactory.getProp(elem,data.c,0,null,this);\r\n    this.o = PropertyFactory.getProp(elem,data.o,0,null,this);\r\n    this.tr = TransformPropertyFactory.getTransformProperty(elem,data.tr,this);\r\n    this.so = PropertyFactory.getProp(elem,data.tr.so,0,0.01,this);\r\n    this.eo = PropertyFactory.getProp(elem,data.tr.eo,0,0.01,this);\r\n    this.data = data;\r\n    if(!this.dynamicProperties.length){\r\n        this.getValue(true);\r\n    }\r\n    this._isAnimated = !!this.dynamicProperties.length;\r\n    this.pMatrix = new Matrix();\r\n    this.rMatrix = new Matrix();\r\n    this.sMatrix = new Matrix();\r\n    this.tMatrix = new Matrix();\r\n    this.matrix = new Matrix();\r\n};\r\n\r\nRepeaterModifier.prototype.applyTransforms = function(pMatrix, rMatrix, sMatrix, transform, perc, inv){\r\n    var dir = inv ? -1 : 1;\r\n    var scaleX = transform.s.v[0] + (1 - transform.s.v[0]) * (1 - perc);\r\n    var scaleY = transform.s.v[1] + (1 - transform.s.v[1]) * (1 - perc);\r\n    pMatrix.translate(transform.p.v[0] * dir * perc, transform.p.v[1] * dir * perc, transform.p.v[2]);\r\n    rMatrix.translate(-transform.a.v[0], -transform.a.v[1], transform.a.v[2]);\r\n    rMatrix.rotate(-transform.r.v * dir * perc);\r\n    rMatrix.translate(transform.a.v[0], transform.a.v[1], transform.a.v[2]);\r\n    sMatrix.translate(-transform.a.v[0], -transform.a.v[1], transform.a.v[2]);\r\n    sMatrix.scale(inv ? 1/scaleX : scaleX, inv ? 1/scaleY : scaleY);\r\n    sMatrix.translate(transform.a.v[0], transform.a.v[1], transform.a.v[2]);\r\n};\r\n\r\nRepeaterModifier.prototype.init = function(elem, arr, pos, elemsData) {\r\n    this.elem = elem;\r\n    this.arr = arr;\r\n    this.pos = pos;\r\n    this.elemsData = elemsData;\r\n    this._currentCopies = 0;\r\n    this._elements = [];\r\n    this._groups = [];\r\n    this.frameId = -1;\r\n    this.initDynamicPropertyContainer(elem);\r\n    this.initModifierProperties(elem,arr[pos]);\r\n    var cont = 0;\r\n    while(pos>0){\r\n        pos -= 1;\r\n        //this._elements.unshift(arr.splice(pos,1)[0]);\r\n        this._elements.unshift(arr[pos]);\r\n        cont += 1;\r\n    }\r\n    if(this.dynamicProperties.length){\r\n        this.k = true;\r\n    }else{\r\n        this.getValue(true);\r\n    }\r\n};\r\n\r\nRepeaterModifier.prototype.resetElements = function(elements){\r\n    var i, len = elements.length;\r\n    for(i = 0; i < len; i += 1) {\r\n        elements[i]._processed = false;\r\n        if(elements[i].ty === 'gr'){\r\n            this.resetElements(elements[i].it);\r\n        }\r\n    }\r\n};\r\n\r\nRepeaterModifier.prototype.cloneElements = function(elements){\r\n    var i, len = elements.length;\r\n    var newElements = JSON.parse(JSON.stringify(elements));\r\n    this.resetElements(newElements);\r\n    return newElements;\r\n};\r\n\r\nRepeaterModifier.prototype.changeGroupRender = function(elements, renderFlag) {\r\n    var i, len = elements.length;\r\n    for(i = 0; i < len; i += 1) {\r\n        elements[i]._render = renderFlag;\r\n        if(elements[i].ty === 'gr') {\r\n            this.changeGroupRender(elements[i].it, renderFlag);\r\n        }\r\n    }\r\n};\r\n\r\nRepeaterModifier.prototype.processShapes = function(_isFirstFrame) {\r\n    var items, itemsTransform, i, dir, cont;\r\n    if(this._mdf || _isFirstFrame){\r\n        var copies = Math.ceil(this.c.v);\r\n        if(this._groups.length < copies){\r\n            while(this._groups.length < copies){\r\n                var group = {\r\n                    it:this.cloneElements(this._elements),\r\n                    ty:'gr'\r\n                };\r\n                group.it.push({\"a\":{\"a\":0,\"ix\":1,\"k\":[0,0]},\"nm\":\"Transform\",\"o\":{\"a\":0,\"ix\":7,\"k\":100},\"p\":{\"a\":0,\"ix\":2,\"k\":[0,0]},\"r\":{\"a\":1,\"ix\":6,\"k\":[{s:0,e:0,t:0},{s:0,e:0,t:1}]},\"s\":{\"a\":0,\"ix\":3,\"k\":[100,100]},\"sa\":{\"a\":0,\"ix\":5,\"k\":0},\"sk\":{\"a\":0,\"ix\":4,\"k\":0},\"ty\":\"tr\"});\r\n                \r\n                this.arr.splice(0,0,group);\r\n                this._groups.splice(0,0,group);\r\n                this._currentCopies += 1;\r\n            }\r\n            this.elem.reloadShapes();\r\n        }\r\n        cont = 0;\r\n        var renderFlag;\r\n        for(i = 0; i  <= this._groups.length - 1; i += 1){\r\n            renderFlag = cont < copies;\r\n            this._groups[i]._render = renderFlag;\r\n            this.changeGroupRender(this._groups[i].it, renderFlag);\r\n            cont += 1;\r\n        }\r\n        \r\n        this._currentCopies = copies;\r\n        ////\r\n\r\n        var offset = this.o.v;\r\n        var offsetModulo = offset%1;\r\n        var roundOffset = offset > 0 ? Math.floor(offset) : Math.ceil(offset);\r\n        var k;\r\n        var tMat = this.tr.v.props;\r\n        var pProps = this.pMatrix.props;\r\n        var rProps = this.rMatrix.props;\r\n        var sProps = this.sMatrix.props;\r\n        this.pMatrix.reset();\r\n        this.rMatrix.reset();\r\n        this.sMatrix.reset();\r\n        this.tMatrix.reset();\r\n        this.matrix.reset();\r\n        var iteration = 0;\r\n\r\n        if(offset > 0) {\r\n            while(iteration<roundOffset){\r\n                this.applyTransforms(this.pMatrix, this.rMatrix, this.sMatrix, this.tr, 1, false);\r\n                iteration += 1;\r\n            }\r\n            if(offsetModulo){\r\n                this.applyTransforms(this.pMatrix, this.rMatrix, this.sMatrix, this.tr, offsetModulo, false);\r\n                iteration += offsetModulo;\r\n            }\r\n        } else if(offset < 0) {\r\n            while(iteration>roundOffset){\r\n                this.applyTransforms(this.pMatrix, this.rMatrix, this.sMatrix, this.tr, 1, true);\r\n                iteration -= 1;\r\n            }\r\n            if(offsetModulo){\r\n                this.applyTransforms(this.pMatrix, this.rMatrix, this.sMatrix, this.tr, - offsetModulo, true);\r\n                iteration -= offsetModulo;\r\n            }\r\n        }\r\n        i = this.data.m === 1 ? 0 : this._currentCopies - 1;\r\n        dir = this.data.m === 1 ? 1 : -1;\r\n        cont = this._currentCopies;\r\n        var j, jLen;\r\n        while(cont){\r\n            items = this.elemsData[i].it;\r\n            itemsTransform = items[items.length - 1].transform.mProps.v.props;\r\n            jLen = itemsTransform.length;\r\n            items[items.length - 1].transform.mProps._mdf = true;\r\n            items[items.length - 1].transform.op._mdf = true;\r\n            items[items.length - 1].transform.op.v = this.so.v + (this.eo.v - this.so.v) * (i / (this._currentCopies - 1));\r\n            if(iteration !== 0){\r\n                if((i !== 0 && dir === 1) || (i !== this._currentCopies - 1 && dir === -1)){\r\n                    this.applyTransforms(this.pMatrix, this.rMatrix, this.sMatrix, this.tr, 1, false);\r\n                }\r\n                this.matrix.transform(rProps[0],rProps[1],rProps[2],rProps[3],rProps[4],rProps[5],rProps[6],rProps[7],rProps[8],rProps[9],rProps[10],rProps[11],rProps[12],rProps[13],rProps[14],rProps[15]);\r\n                this.matrix.transform(sProps[0],sProps[1],sProps[2],sProps[3],sProps[4],sProps[5],sProps[6],sProps[7],sProps[8],sProps[9],sProps[10],sProps[11],sProps[12],sProps[13],sProps[14],sProps[15]);\r\n                this.matrix.transform(pProps[0],pProps[1],pProps[2],pProps[3],pProps[4],pProps[5],pProps[6],pProps[7],pProps[8],pProps[9],pProps[10],pProps[11],pProps[12],pProps[13],pProps[14],pProps[15]);\r\n                \r\n                for(j=0;j<jLen;j+=1) {\r\n                    itemsTransform[j] = this.matrix.props[j];\r\n                }\r\n                this.matrix.reset();\r\n            } else {\r\n                this.matrix.reset();\r\n                for(j=0;j<jLen;j+=1) {\r\n                    itemsTransform[j] = this.matrix.props[j];\r\n                }\r\n            }\r\n            iteration += 1;\r\n            cont -= 1;\r\n            i += dir;\r\n        }\r\n    } else {\r\n        cont = this._currentCopies;\r\n        i = 0;\r\n        dir = 1;\r\n        while(cont){\r\n            items = this.elemsData[i].it;\r\n            itemsTransform = items[items.length - 1].transform.mProps.v.props;\r\n            items[items.length - 1].transform.mProps._mdf = false;\r\n            items[items.length - 1].transform.op._mdf = false;\r\n            cont -= 1;\r\n            i += dir;\r\n        }\r\n    }\r\n};\r\n\r\nRepeaterModifier.prototype.addShape = function(){};\r\n\r\nShapeModifiers.registerModifier('rp',RepeaterModifier);\r\nfunction ShapeCollection(){\r\n\tthis._length = 0;\r\n\tthis._maxLength = 4;\r\n\tthis.shapes = createSizedArray(this._maxLength);\r\n}\r\n\r\nShapeCollection.prototype.addShape = function(shapeData){\r\n\tif(this._length === this._maxLength){\r\n\t\tthis.shapes = this.shapes.concat(createSizedArray(this._maxLength));\r\n\t\tthis._maxLength *= 2;\r\n\t}\r\n\tthis.shapes[this._length] = shapeData;\r\n\tthis._length += 1;\r\n};\r\n\r\nShapeCollection.prototype.releaseShapes = function(){\r\n\tvar i;\r\n\tfor(i = 0; i < this._length; i += 1) {\r\n\t\tshape_pool.release(this.shapes[i]);\r\n\t}\r\n\tthis._length = 0;\r\n};\r\nfunction DashProperty(elem, data, renderer, container) {\r\n    this.elem = elem;\r\n    this.frameId = -1;\r\n    this.dataProps = createSizedArray(data.length);\r\n    this.renderer = renderer;\r\n    this.k = false;\r\n    this.dashStr = '';\r\n    this.dashArray = createTypedArray('float32',  data.length ? data.length - 1 : 0);\r\n    this.dashoffset = createTypedArray('float32',  1);\r\n    this.initDynamicPropertyContainer(container);\r\n    var i, len = data.length || 0, prop;\r\n    for(i = 0; i < len; i += 1) {\r\n        prop = PropertyFactory.getProp(elem,data[i].v,0, 0, this);\r\n        this.k = prop.k || this.k;\r\n        this.dataProps[i] = {n:data[i].n,p:prop};\r\n    }\r\n    if(!this.k){\r\n        this.getValue(true);\r\n    }\r\n    this._isAnimated = this.k;\r\n}\r\n\r\nDashProperty.prototype.getValue = function(forceRender) {\r\n    if(this.elem.globalData.frameId === this.frameId && !forceRender){\r\n        return;\r\n    }\r\n    this.frameId = this.elem.globalData.frameId;\r\n    this.iterateDynamicProperties();\r\n    this._mdf = this._mdf || forceRender;\r\n    if (this._mdf) {\r\n        var i = 0, len = this.dataProps.length;\r\n        if(this.renderer === 'svg') {\r\n            this.dashStr = '';\r\n        }\r\n        for(i=0;i<len;i+=1){\r\n            if(this.dataProps[i].n != 'o'){\r\n                if(this.renderer === 'svg') {\r\n                    this.dashStr += ' ' + this.dataProps[i].p.v;\r\n                }else{\r\n                    this.dashArray[i] = this.dataProps[i].p.v;\r\n                }\r\n            }else{\r\n                this.dashoffset[0] = this.dataProps[i].p.v;\r\n            }\r\n        }\r\n    }\r\n};\r\nextendPrototype([DynamicPropertyContainer], DashProperty);\r\nfunction GradientProperty(elem,data,container){\r\n    this.data = data;\r\n    this.c = createTypedArray('uint8c', data.p*4);\r\n    var cLength = data.k.k[0].s ? (data.k.k[0].s.length - data.p*4) : data.k.k.length - data.p*4;\r\n    this.o = createTypedArray('float32', cLength);\r\n    this._cmdf = false;\r\n    this._omdf = false;\r\n    this._collapsable = this.checkCollapsable();\r\n    this._hasOpacity = cLength;\r\n    this.initDynamicPropertyContainer(container);\r\n    this.prop = PropertyFactory.getProp(elem,data.k,1,null,this);\r\n    this.k = this.prop.k;\r\n    this.getValue(true);\r\n}\r\n\r\nGradientProperty.prototype.comparePoints = function(values, points) {\r\n    var i = 0, len = this.o.length/2, diff;\r\n    while(i < len) {\r\n        diff = Math.abs(values[i*4] - values[points*4 + i*2]);\r\n        if(diff > 0.01){\r\n            return false;\r\n        }\r\n        i += 1;\r\n    }\r\n    return true;\r\n};\r\n\r\nGradientProperty.prototype.checkCollapsable = function() {\r\n    if (this.o.length/2 !== this.c.length/4) {\r\n        return false;\r\n    }\r\n    if (this.data.k.k[0].s) {\r\n        var i = 0, len = this.data.k.k.length;\r\n        while (i < len) {\r\n            if (!this.comparePoints(this.data.k.k[i].s, this.data.p)) {\r\n                return false;\r\n            }\r\n            i += 1;\r\n        }\r\n    } else if(!this.comparePoints(this.data.k.k, this.data.p)) {\r\n        return false;\r\n    }\r\n    return true;\r\n};\r\n\r\nGradientProperty.prototype.getValue = function(forceRender){\r\n    this.prop.getValue();\r\n    this._mdf = false;\r\n    this._cmdf = false;\r\n    this._omdf = false;\r\n    if(this.prop._mdf || forceRender){\r\n        var i, len = this.data.p*4;\r\n        var mult, val;\r\n        for(i=0;i<len;i+=1){\r\n            mult = i%4 === 0 ? 100 : 255;\r\n            val = Math.round(this.prop.v[i]*mult);\r\n            if(this.c[i] !== val){\r\n                this.c[i] = val;\r\n                this._cmdf = !forceRender;\r\n            }\r\n        }\r\n        if(this.o.length){\r\n            len = this.prop.v.length;\r\n            for(i=this.data.p*4;i<len;i+=1){\r\n                mult = i%2 === 0 ? 100 : 1;\r\n                val = i%2 === 0 ?  Math.round(this.prop.v[i]*100):this.prop.v[i];\r\n                if(this.o[i-this.data.p*4] !== val){\r\n                    this.o[i-this.data.p*4] = val;\r\n                    this._omdf = !forceRender;\r\n                }\r\n            }\r\n        }\r\n        this._mdf = !forceRender;\r\n    }\r\n};\r\n\r\nextendPrototype([DynamicPropertyContainer], GradientProperty);\r\nvar buildShapeString = function(pathNodes, length, closed, mat) {\r\n\tif(length === 0) {\r\n            return '';\r\n        }\r\n        var _o = pathNodes.o;\r\n        var _i = pathNodes.i;\r\n        var _v = pathNodes.v;\r\n        var i, shapeString = \" M\" + mat.applyToPointStringified(_v[0][0], _v[0][1]);\r\n        for(i = 1; i < length; i += 1) {\r\n            shapeString += \" C\" + mat.applyToPointStringified(_o[i - 1][0], _o[i - 1][1]) + \" \" + mat.applyToPointStringified(_i[i][0], _i[i][1]) + \" \" + mat.applyToPointStringified(_v[i][0], _v[i][1]);\r\n        }\r\n        if (closed && length) {\r\n            shapeString += \" C\" + mat.applyToPointStringified(_o[i - 1][0], _o[i - 1][1]) + \" \" + mat.applyToPointStringified(_i[0][0], _i[0][1]) + \" \" + mat.applyToPointStringified(_v[0][0], _v[0][1]);\r\n            shapeString += 'z';\r\n        }\r\n        return shapeString;\r\n}\r\nvar ImagePreloader = (function(){\r\n\r\n    var proxyImage = (function(){\r\n        var canvas = createTag('canvas');\r\n        canvas.width = 1;\r\n        canvas.height = 1;\r\n        var ctx = canvas.getContext('2d');\r\n        ctx.fillStyle = 'rgba(0,0,0,0)';\r\n        ctx.fillRect(0, 0, 1, 1);\r\n        return canvas;\r\n    }())\r\n\r\n    function imageLoaded(){\r\n        this.loadedAssets += 1;\r\n        if(this.loadedAssets === this.totalImages){\r\n            if(this.imagesLoadedCb) {\r\n                this.imagesLoadedCb(null);\r\n            }\r\n        }\r\n    }\r\n\r\n    function getAssetsPath(assetData, assetsPath, original_path) {\r\n        var path = '';\r\n        if (assetData.e) {\r\n            path = assetData.p;\r\n        } else if(assetsPath) {\r\n            var imagePath = assetData.p;\r\n            if (imagePath.indexOf('images/') !== -1) {\r\n                imagePath = imagePath.split('/')[1];\r\n            }\r\n            path = assetsPath + imagePath;\r\n        } else {\r\n            path = original_path;\r\n            path += assetData.u ? assetData.u : '';\r\n            path += assetData.p;\r\n        }\r\n        return path;\r\n    }\r\n\r\n    function createImageData(assetData) {\r\n        var path = getAssetsPath(assetData, this.assetsPath, this.path);\r\n        var img = createTag('img');\r\n        img.crossOrigin = 'anonymous';\r\n        img.addEventListener('load', this._imageLoaded.bind(this), false);\r\n        img.addEventListener('error', function() {\r\n            ob.img = proxyImage;\r\n            this._imageLoaded();\r\n        }.bind(this), false);\r\n        img.src = path;\r\n        var ob = {\r\n            img: img,\r\n            assetData: assetData\r\n        }\r\n        return ob;\r\n    }\r\n\r\n    function loadAssets(assets, cb){\r\n        this.imagesLoadedCb = cb;\r\n        var i, len = assets.length;\r\n        for (i = 0; i < len; i += 1) {\r\n            if(!assets[i].layers){\r\n                this.totalImages += 1;\r\n                this.images.push(this._createImageData(assets[i]));\r\n            }\r\n        }\r\n    }\r\n\r\n    function setPath(path){\r\n        this.path = path || '';\r\n    }\r\n\r\n    function setAssetsPath(path){\r\n        this.assetsPath = path || '';\r\n    }\r\n\r\n    function getImage(assetData) {\r\n        var i = 0, len = this.images.length;\r\n        while (i < len) {\r\n            if (this.images[i].assetData === assetData) {\r\n                return this.images[i].img;\r\n            }\r\n            i += 1;\r\n        }\r\n    }\r\n\r\n    function destroy() {\r\n        this.imagesLoadedCb = null;\r\n        this.images.length = 0;\r\n    }\r\n\r\n    function loaded() {\r\n        return this.totalImages === this.loadedAssets;\r\n    }\r\n\r\n    return function ImagePreloader(){\r\n        this.loadAssets = loadAssets;\r\n        this.setAssetsPath = setAssetsPath;\r\n        this.setPath = setPath;\r\n        this.loaded = loaded;\r\n        this.destroy = destroy;\r\n        this.getImage = getImage;\r\n        this._createImageData = createImageData;\r\n        this._imageLoaded = imageLoaded;\r\n        this.assetsPath = '';\r\n        this.path = '';\r\n        this.totalImages = 0;\r\n        this.loadedAssets = 0;\r\n        this.imagesLoadedCb = null;\r\n        this.images = [];\r\n    };\r\n}());\r\nvar featureSupport = (function(){\r\n\tvar ob = {\r\n\t\tmaskType: true\r\n\t};\r\n\tif (/MSIE 10/i.test(navigator.userAgent) || /MSIE 9/i.test(navigator.userAgent) || /rv:11.0/i.test(navigator.userAgent) || /Edge\\/\\d./i.test(navigator.userAgent)) {\r\n\t   ob.maskType = false;\r\n\t}\r\n\treturn ob;\r\n}());\r\nvar filtersFactory = (function(){\r\n\tvar ob = {};\r\n\tob.createFilter = createFilter;\r\n\tob.createAlphaToLuminanceFilter = createAlphaToLuminanceFilter;\r\n\r\n\tfunction createFilter(filId){\r\n        \tvar fil = createNS('filter');\r\n        \tfil.setAttribute('id',filId);\r\n                fil.setAttribute('filterUnits','objectBoundingBox');\r\n                fil.setAttribute('x','0%');\r\n                fil.setAttribute('y','0%');\r\n                fil.setAttribute('width','100%');\r\n                fil.setAttribute('height','100%');\r\n                return fil;\r\n\t}\r\n\r\n\tfunction createAlphaToLuminanceFilter(){\r\n                var feColorMatrix = createNS('feColorMatrix');\r\n                feColorMatrix.setAttribute('type','matrix');\r\n                feColorMatrix.setAttribute('color-interpolation-filters','sRGB');\r\n                feColorMatrix.setAttribute('values','0 0 0 1 0  0 0 0 1 0  0 0 0 1 0  0 0 0 1 1');\r\n                return feColorMatrix;\r\n\t}\r\n\r\n\treturn ob;\r\n}());\r\nvar assetLoader = (function(){\r\n\r\n\tfunction formatResponse(xhr) {\r\n\t\tif(xhr.response && typeof xhr.response === 'object') {\r\n\t\t\treturn xhr.response;\r\n\t\t} else if(xhr.response && typeof xhr.response === 'string') {\r\n\t\t\treturn JSON.parse(xhr.response);\r\n\t\t} else if(xhr.responseText) {\r\n\t\t\treturn JSON.parse(xhr.responseText);\r\n\t\t}\r\n\t}\r\n\r\n\tfunction loadAsset(path, callback, errorCallback) {\r\n\t\tvar response;\r\n\t\tvar xhr = new XMLHttpRequest();\r\n\t\txhr.open('GET', path, true);\r\n\t\t// set responseType after calling open or IE will break.\r\n\t\ttry {\r\n\t\t    // This crashes on Android WebView prior to KitKat\r\n\t\t    xhr.responseType = \"json\";\r\n\t\t} catch (err) {}\r\n\t    xhr.send();\r\n\t    xhr.onreadystatechange = function () {\r\n\t        if (xhr.readyState == 4) {\r\n\t            if(xhr.status == 200){\r\n\t            \tresponse = formatResponse(xhr);\r\n\t            \tcallback(response);\r\n\t            }else{\r\n\t                try{\r\n\t            \t\tresponse = formatResponse(xhr);\r\n\t            \t\tcallback(response);\r\n\t                }catch(err){\r\n\t                \tif(errorCallback) {\r\n\t                \t\terrorCallback(err);\r\n\t                \t}\r\n\t                }\r\n\t            }\r\n\t        }\r\n\t    };\r\n\t}\r\n\treturn {\r\n\t\tload: loadAsset\r\n\t}\r\n}())\r\n\r\nfunction TextAnimatorProperty(textData, renderType, elem){\r\n    this._isFirstFrame = true;\r\n\tthis._hasMaskedPath = false;\r\n\tthis._frameId = -1;\r\n\tthis._textData = textData;\r\n\tthis._renderType = renderType;\r\n    this._elem = elem;\r\n\tthis._animatorsData = createSizedArray(this._textData.a.length);\r\n\tthis._pathData = {};\r\n\tthis._moreOptions = {\r\n\t\talignment: {}\r\n\t};\r\n\tthis.renderedLetters = [];\r\n    this.lettersChangedFlag = false;\r\n    this.initDynamicPropertyContainer(elem);\r\n\r\n}\r\n\r\nTextAnimatorProperty.prototype.searchProperties = function(){\r\n    var i, len = this._textData.a.length, animatorProps;\r\n    var getProp = PropertyFactory.getProp;\r\n    for(i=0;i<len;i+=1){\r\n        animatorProps = this._textData.a[i];\r\n        this._animatorsData[i] = new TextAnimatorDataProperty(this._elem, animatorProps, this);\r\n    }\r\n    if(this._textData.p && 'm' in this._textData.p){\r\n        this._pathData = {\r\n            f: getProp(this._elem,this._textData.p.f,0,0,this),\r\n            l: getProp(this._elem,this._textData.p.l,0,0,this),\r\n            r: this._textData.p.r,\r\n            m: this._elem.maskManager.getMaskProperty(this._textData.p.m)\r\n        };\r\n        this._hasMaskedPath = true;\r\n    } else {\r\n        this._hasMaskedPath = false;\r\n    }\r\n    this._moreOptions.alignment = getProp(this._elem,this._textData.m.a,1,0,this);\r\n};\r\n\r\nTextAnimatorProperty.prototype.getMeasures = function(documentData, lettersChangedFlag){\r\n    this.lettersChangedFlag = lettersChangedFlag;\r\n    if(!this._mdf && !this._isFirstFrame && !lettersChangedFlag && (!this._hasMaskedPath || !this._pathData.m._mdf)) {\r\n        return;\r\n    }\r\n    this._isFirstFrame = false;\r\n    var alignment = this._moreOptions.alignment.v;\r\n    var animators = this._animatorsData;\r\n    var textData = this._textData;\r\n    var matrixHelper = this.mHelper;\r\n    var renderType = this._renderType;\r\n    var renderedLettersCount = this.renderedLetters.length;\r\n    var data = this.data;\r\n    var xPos,yPos;\r\n    var i, len;\r\n    var letters = documentData.l, pathInfo, currentLength, currentPoint, segmentLength, flag, pointInd, segmentInd, prevPoint, points, segments, partialLength, totalLength, perc, tanAngle, mask;\r\n    if(this._hasMaskedPath) {\r\n        mask = this._pathData.m;\r\n        if(!this._pathData.n || this._pathData._mdf){\r\n            var paths = mask.v;\r\n            if(this._pathData.r){\r\n                paths = paths.reverse();\r\n            }\r\n            // TODO: release bezier data cached from previous pathInfo: this._pathData.pi\r\n            pathInfo = {\r\n                tLength: 0,\r\n                segments: []\r\n            };\r\n            len = paths._length - 1;\r\n            var bezierData;\r\n            totalLength = 0;\r\n            for (i = 0; i < len; i += 1) {\r\n                bezierData = bez.buildBezierData(paths.v[i]\r\n                    , paths.v[i + 1]\r\n                    , [paths.o[i][0] - paths.v[i][0], paths.o[i][1] - paths.v[i][1]]\r\n                    , [paths.i[i + 1][0] - paths.v[i + 1][0], paths.i[i + 1][1] - paths.v[i + 1][1]]);\r\n                pathInfo.tLength += bezierData.segmentLength;\r\n                pathInfo.segments.push(bezierData);\r\n                totalLength += bezierData.segmentLength;\r\n            }\r\n            i = len;\r\n            if (mask.v.c) {\r\n                bezierData = bez.buildBezierData(paths.v[i]\r\n                    , paths.v[0]\r\n                    , [paths.o[i][0] - paths.v[i][0], paths.o[i][1] - paths.v[i][1]]\r\n                    , [paths.i[0][0] - paths.v[0][0], paths.i[0][1] - paths.v[0][1]]);\r\n                pathInfo.tLength += bezierData.segmentLength;\r\n                pathInfo.segments.push(bezierData);\r\n                totalLength += bezierData.segmentLength;\r\n            }\r\n            this._pathData.pi = pathInfo;\r\n        }\r\n        pathInfo = this._pathData.pi;\r\n\r\n        currentLength = this._pathData.f.v;\r\n        segmentInd = 0;\r\n        pointInd = 1;\r\n        segmentLength = 0;\r\n        flag = true;\r\n        segments = pathInfo.segments;\r\n        if (currentLength < 0 && mask.v.c) {\r\n            if (pathInfo.tLength < Math.abs(currentLength)) {\r\n                currentLength = -Math.abs(currentLength) % pathInfo.tLength;\r\n            }\r\n            segmentInd = segments.length - 1;\r\n            points = segments[segmentInd].points;\r\n            pointInd = points.length - 1;\r\n            while (currentLength < 0) {\r\n                currentLength += points[pointInd].partialLength;\r\n                pointInd -= 1;\r\n                if (pointInd < 0) {\r\n                    segmentInd -= 1;\r\n                    points = segments[segmentInd].points;\r\n                    pointInd = points.length - 1;\r\n                }\r\n            }\r\n\r\n        }\r\n        points = segments[segmentInd].points;\r\n        prevPoint = points[pointInd - 1];\r\n        currentPoint = points[pointInd];\r\n        partialLength = currentPoint.partialLength;\r\n    }\r\n\r\n\r\n    len = letters.length;\r\n    xPos = 0;\r\n    yPos = 0;\r\n    var yOff = documentData.finalSize * 1.2 * 0.714;\r\n    var firstLine = true;\r\n    var animatorProps, animatorSelector;\r\n    var j, jLen;\r\n    var letterValue;\r\n\r\n    jLen = animators.length;\r\n    var lastLetter;\r\n\r\n    var mult, ind = -1, offf, xPathPos, yPathPos;\r\n    var initPathPos = currentLength,initSegmentInd = segmentInd, initPointInd = pointInd, currentLine = -1;\r\n    var elemOpacity;\r\n    var sc,sw,fc,k;\r\n    var lineLength = 0;\r\n    var letterSw, letterSc, letterFc, letterM = '', letterP = this.defaultPropsArray, letterO;\r\n\r\n    //\r\n    if(documentData.j === 2 || documentData.j === 1) {\r\n        var animatorJustifyOffset = 0;\r\n        var animatorFirstCharOffset = 0;\r\n        var justifyOffsetMult = documentData.j === 2 ? -0.5 : -1;\r\n        var lastIndex = 0;\r\n        var isNewLine = true;\r\n\r\n        for (i = 0; i < len; i += 1) {\r\n            if (letters[i].n) {\r\n                if(animatorJustifyOffset) {\r\n                    animatorJustifyOffset += animatorFirstCharOffset;\r\n                }\r\n                while (lastIndex < i) {\r\n                    letters[lastIndex].animatorJustifyOffset = animatorJustifyOffset;\r\n                    lastIndex += 1;\r\n                }\r\n                animatorJustifyOffset = 0;\r\n                isNewLine = true;\r\n            } else {\r\n                for (j = 0; j < jLen; j += 1) {\r\n                    animatorProps = animators[j].a;\r\n                    if (animatorProps.t.propType) {\r\n                        if (isNewLine && documentData.j === 2) {\r\n                            animatorFirstCharOffset += animatorProps.t.v * justifyOffsetMult;\r\n                        }\r\n                        animatorSelector = animators[j].s;\r\n                        mult = animatorSelector.getMult(letters[i].anIndexes[j], textData.a[j].s.totalChars);\r\n                        if (mult.length) {\r\n                            animatorJustifyOffset += animatorProps.t.v*mult[0] * justifyOffsetMult;\r\n                        } else {\r\n                            animatorJustifyOffset += animatorProps.t.v*mult * justifyOffsetMult;\r\n                        }\r\n                    }\r\n                }\r\n                isNewLine = false;\r\n            }\r\n        }\r\n        if(animatorJustifyOffset) {\r\n            animatorJustifyOffset += animatorFirstCharOffset;\r\n        }\r\n        while(lastIndex < i) {\r\n            letters[lastIndex].animatorJustifyOffset = animatorJustifyOffset;\r\n            lastIndex += 1;\r\n        }\r\n    }\r\n    //\r\n\r\n    for( i = 0; i < len; i += 1) {\r\n\r\n        matrixHelper.reset();\r\n        elemOpacity = 1;\r\n        if(letters[i].n) {\r\n            xPos = 0;\r\n            yPos += documentData.yOffset;\r\n            yPos += firstLine ? 1 : 0;\r\n            currentLength = initPathPos ;\r\n            firstLine = false;\r\n            lineLength = 0;\r\n            if(this._hasMaskedPath) {\r\n                segmentInd = initSegmentInd;\r\n                pointInd = initPointInd;\r\n                points = segments[segmentInd].points;\r\n                prevPoint = points[pointInd - 1];\r\n                currentPoint = points[pointInd];\r\n                partialLength = currentPoint.partialLength;\r\n                segmentLength = 0;\r\n            }\r\n            letterO = letterSw = letterFc = letterM = '';\r\n            letterP = this.defaultPropsArray;\r\n        }else{\r\n            if(this._hasMaskedPath) {\r\n                if(currentLine !== letters[i].line){\r\n                    switch(documentData.j){\r\n                        case 1:\r\n                            currentLength += totalLength - documentData.lineWidths[letters[i].line];\r\n                            break;\r\n                        case 2:\r\n                            currentLength += (totalLength - documentData.lineWidths[letters[i].line])/2;\r\n                            break;\r\n                    }\r\n                    currentLine = letters[i].line;\r\n                }\r\n                if (ind !== letters[i].ind) {\r\n                    if (letters[ind]) {\r\n                        currentLength += letters[ind].extra;\r\n                    }\r\n                    currentLength += letters[i].an / 2;\r\n                    ind = letters[i].ind;\r\n                }\r\n                currentLength += alignment[0] * letters[i].an / 200;\r\n                var animatorOffset = 0;\r\n                for (j = 0; j < jLen; j += 1) {\r\n                    animatorProps = animators[j].a;\r\n                    if (animatorProps.p.propType) {\r\n                        animatorSelector = animators[j].s;\r\n                        mult = animatorSelector.getMult(letters[i].anIndexes[j],textData.a[j].s.totalChars);\r\n                        if(mult.length){\r\n                            animatorOffset += animatorProps.p.v[0] * mult[0];\r\n                        } else{\r\n                            animatorOffset += animatorProps.p.v[0] * mult;\r\n                        }\r\n\r\n                    }\r\n                    if (animatorProps.a.propType) {\r\n                        animatorSelector = animators[j].s;\r\n                        mult = animatorSelector.getMult(letters[i].anIndexes[j],textData.a[j].s.totalChars);\r\n                        if(mult.length){\r\n                            animatorOffset += animatorProps.a.v[0] * mult[0];\r\n                        } else{\r\n                            animatorOffset += animatorProps.a.v[0] * mult;\r\n                        }\r\n\r\n                    }\r\n                }\r\n                flag = true;\r\n                while (flag) {\r\n                    if (segmentLength + partialLength >= currentLength + animatorOffset || !points) {\r\n                        perc = (currentLength + animatorOffset - segmentLength) / currentPoint.partialLength;\r\n                        xPathPos = prevPoint.point[0] + (currentPoint.point[0] - prevPoint.point[0]) * perc;\r\n                        yPathPos = prevPoint.point[1] + (currentPoint.point[1] - prevPoint.point[1]) * perc;\r\n                        matrixHelper.translate(-alignment[0]*letters[i].an/200, -(alignment[1] * yOff / 100));\r\n                        flag = false;\r\n                    } else if (points) {\r\n                        segmentLength += currentPoint.partialLength;\r\n                        pointInd += 1;\r\n                        if (pointInd >= points.length) {\r\n                            pointInd = 0;\r\n                            segmentInd += 1;\r\n                            if (!segments[segmentInd]) {\r\n                                if (mask.v.c) {\r\n                                    pointInd = 0;\r\n                                    segmentInd = 0;\r\n                                    points = segments[segmentInd].points;\r\n                                } else {\r\n                                    segmentLength -= currentPoint.partialLength;\r\n                                    points = null;\r\n                                }\r\n                            } else {\r\n                                points = segments[segmentInd].points;\r\n                            }\r\n                        }\r\n                        if (points) {\r\n                            prevPoint = currentPoint;\r\n                            currentPoint = points[pointInd];\r\n                            partialLength = currentPoint.partialLength;\r\n                        }\r\n                    }\r\n                }\r\n                offf = letters[i].an / 2 - letters[i].add;\r\n                matrixHelper.translate(-offf, 0, 0);\r\n            } else {\r\n                offf = letters[i].an/2 - letters[i].add;\r\n                matrixHelper.translate(-offf,0,0);\r\n\r\n                // Grouping alignment\r\n                matrixHelper.translate(-alignment[0]*letters[i].an/200, -alignment[1]*yOff/100, 0);\r\n            }\r\n\r\n            lineLength += letters[i].l/2;\r\n            for(j=0;j<jLen;j+=1){\r\n                animatorProps = animators[j].a;\r\n                if (animatorProps.t.propType) {\r\n                    animatorSelector = animators[j].s;\r\n                    mult = animatorSelector.getMult(letters[i].anIndexes[j],textData.a[j].s.totalChars);\r\n                    //This condition is to prevent applying tracking to first character in each line. Might be better to use a boolean \"isNewLine\"\r\n                    if(xPos !== 0 || documentData.j !== 0) {\r\n                        if(this._hasMaskedPath) {\r\n                            if(mult.length) {\r\n                                currentLength += animatorProps.t.v*mult[0];\r\n                            } else {\r\n                                currentLength += animatorProps.t.v*mult;\r\n                            }\r\n                        }else{\r\n                            if(mult.length) {\r\n                                xPos += animatorProps.t.v*mult[0];\r\n                            } else {\r\n                                xPos += animatorProps.t.v*mult;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            lineLength += letters[i].l/2;\r\n            if(documentData.strokeWidthAnim) {\r\n                sw = documentData.sw || 0;\r\n            }\r\n            if(documentData.strokeColorAnim) {\r\n                if(documentData.sc){\r\n                    sc = [documentData.sc[0], documentData.sc[1], documentData.sc[2]];\r\n                }else{\r\n                    sc = [0,0,0];\r\n                }\r\n            }\r\n            if(documentData.fillColorAnim && documentData.fc) {\r\n                fc = [documentData.fc[0], documentData.fc[1], documentData.fc[2]];\r\n            }\r\n            for(j=0;j<jLen;j+=1){\r\n                animatorProps = animators[j].a;\r\n                if (animatorProps.a.propType) {\r\n                    animatorSelector = animators[j].s;\r\n                    mult = animatorSelector.getMult(letters[i].anIndexes[j],textData.a[j].s.totalChars);\r\n\r\n                    if(mult.length){\r\n                        matrixHelper.translate(-animatorProps.a.v[0]*mult[0], -animatorProps.a.v[1]*mult[1], animatorProps.a.v[2]*mult[2]);\r\n                    } else {\r\n                        matrixHelper.translate(-animatorProps.a.v[0]*mult, -animatorProps.a.v[1]*mult, animatorProps.a.v[2]*mult);\r\n                    }\r\n                }\r\n            }\r\n            for(j=0;j<jLen;j+=1){\r\n                animatorProps = animators[j].a;\r\n                if (animatorProps.s.propType) {\r\n                    animatorSelector = animators[j].s;\r\n                    mult = animatorSelector.getMult(letters[i].anIndexes[j],textData.a[j].s.totalChars);\r\n                    if(mult.length){\r\n                        matrixHelper.scale(1+((animatorProps.s.v[0]-1)*mult[0]),1+((animatorProps.s.v[1]-1)*mult[1]),1);\r\n                    } else {\r\n                        matrixHelper.scale(1+((animatorProps.s.v[0]-1)*mult),1+((animatorProps.s.v[1]-1)*mult),1);\r\n                    }\r\n                }\r\n            }\r\n            for(j=0;j<jLen;j+=1) {\r\n                animatorProps = animators[j].a;\r\n                animatorSelector = animators[j].s;\r\n                mult = animatorSelector.getMult(letters[i].anIndexes[j],textData.a[j].s.totalChars);\r\n                if (animatorProps.sk.propType) {\r\n                    if(mult.length) {\r\n                        matrixHelper.skewFromAxis(-animatorProps.sk.v * mult[0], animatorProps.sa.v * mult[1]);\r\n                    } else {\r\n                        matrixHelper.skewFromAxis(-animatorProps.sk.v * mult, animatorProps.sa.v * mult);\r\n                    }\r\n                }\r\n                if (animatorProps.r.propType) {\r\n                    if(mult.length) {\r\n                        matrixHelper.rotateZ(-animatorProps.r.v * mult[2]);\r\n                    } else {\r\n                        matrixHelper.rotateZ(-animatorProps.r.v * mult);\r\n                    }\r\n                }\r\n                if (animatorProps.ry.propType) {\r\n\r\n                    if(mult.length) {\r\n                        matrixHelper.rotateY(animatorProps.ry.v*mult[1]);\r\n                    }else{\r\n                        matrixHelper.rotateY(animatorProps.ry.v*mult);\r\n                    }\r\n                }\r\n                if (animatorProps.rx.propType) {\r\n                    if(mult.length) {\r\n                        matrixHelper.rotateX(animatorProps.rx.v*mult[0]);\r\n                    } else {\r\n                        matrixHelper.rotateX(animatorProps.rx.v*mult);\r\n                    }\r\n                }\r\n                if (animatorProps.o.propType) {\r\n                    if(mult.length) {\r\n                        elemOpacity += ((animatorProps.o.v)*mult[0] - elemOpacity)*mult[0];\r\n                    } else {\r\n                        elemOpacity += ((animatorProps.o.v)*mult - elemOpacity)*mult;\r\n                    }\r\n                }\r\n                if (documentData.strokeWidthAnim && animatorProps.sw.propType) {\r\n                    if(mult.length) {\r\n                        sw += animatorProps.sw.v*mult[0];\r\n                    } else {\r\n                        sw += animatorProps.sw.v*mult;\r\n                    }\r\n                }\r\n                if (documentData.strokeColorAnim && animatorProps.sc.propType) {\r\n                    for(k=0;k<3;k+=1){\r\n                        if(mult.length) {\r\n                            sc[k] = sc[k] + (animatorProps.sc.v[k] - sc[k])*mult[0];\r\n                        } else {\r\n                            sc[k] = sc[k] + (animatorProps.sc.v[k] - sc[k])*mult;\r\n                        }\r\n                    }\r\n                }\r\n                if (documentData.fillColorAnim && documentData.fc) {\r\n                    if(animatorProps.fc.propType){\r\n                        for(k=0;k<3;k+=1){\r\n                            if(mult.length) {\r\n                                fc[k] = fc[k] + (animatorProps.fc.v[k] - fc[k])*mult[0];\r\n                            } else {\r\n                                fc[k] = fc[k] + (animatorProps.fc.v[k] - fc[k])*mult;\r\n                            }\r\n                        }\r\n                    }\r\n                    if(animatorProps.fh.propType){\r\n                        if(mult.length) {\r\n                            fc = addHueToRGB(fc,animatorProps.fh.v*mult[0]);\r\n                        } else {\r\n                            fc = addHueToRGB(fc,animatorProps.fh.v*mult);\r\n                        }\r\n                    }\r\n                    if(animatorProps.fs.propType){\r\n                        if(mult.length) {\r\n                            fc = addSaturationToRGB(fc,animatorProps.fs.v*mult[0]);\r\n                        } else {\r\n                            fc = addSaturationToRGB(fc,animatorProps.fs.v*mult);\r\n                        }\r\n                    }\r\n                    if(animatorProps.fb.propType){\r\n                        if(mult.length) {\r\n                            fc = addBrightnessToRGB(fc,animatorProps.fb.v*mult[0]);\r\n                        } else {\r\n                            fc = addBrightnessToRGB(fc,animatorProps.fb.v*mult);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            for(j=0;j<jLen;j+=1){\r\n                animatorProps = animators[j].a;\r\n\r\n                if (animatorProps.p.propType) {\r\n                    animatorSelector = animators[j].s;\r\n                    mult = animatorSelector.getMult(letters[i].anIndexes[j],textData.a[j].s.totalChars);\r\n                    if(this._hasMaskedPath) {\r\n                        if(mult.length) {\r\n                            matrixHelper.translate(0, animatorProps.p.v[1] * mult[0], -animatorProps.p.v[2] * mult[1]);\r\n                        } else {\r\n                            matrixHelper.translate(0, animatorProps.p.v[1] * mult, -animatorProps.p.v[2] * mult);\r\n                        }\r\n                    }else{\r\n                        if(mult.length) {\r\n                            matrixHelper.translate(animatorProps.p.v[0] * mult[0], animatorProps.p.v[1] * mult[1], -animatorProps.p.v[2] * mult[2]);\r\n                        } else {\r\n                            matrixHelper.translate(animatorProps.p.v[0] * mult, animatorProps.p.v[1] * mult, -animatorProps.p.v[2] * mult);\r\n                        \r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            if(documentData.strokeWidthAnim){\r\n                letterSw = sw < 0 ? 0 : sw;\r\n            }\r\n            if(documentData.strokeColorAnim){\r\n                letterSc = 'rgb('+Math.round(sc[0]*255)+','+Math.round(sc[1]*255)+','+Math.round(sc[2]*255)+')';\r\n            }\r\n            if(documentData.fillColorAnim && documentData.fc){\r\n                letterFc = 'rgb('+Math.round(fc[0]*255)+','+Math.round(fc[1]*255)+','+Math.round(fc[2]*255)+')';\r\n            }\r\n\r\n            if(this._hasMaskedPath) {\r\n                matrixHelper.translate(0,-documentData.ls);\r\n\r\n                matrixHelper.translate(0, alignment[1]*yOff/100 + yPos,0);\r\n                if (textData.p.p) {\r\n                    tanAngle = (currentPoint.point[1] - prevPoint.point[1]) / (currentPoint.point[0] - prevPoint.point[0]);\r\n                    var rot = Math.atan(tanAngle) * 180 / Math.PI;\r\n                    if (currentPoint.point[0] < prevPoint.point[0]) {\r\n                        rot += 180;\r\n                    }\r\n                    matrixHelper.rotate(-rot * Math.PI / 180);\r\n                }\r\n                matrixHelper.translate(xPathPos, yPathPos, 0);\r\n                currentLength -= alignment[0]*letters[i].an/200;\r\n                if(letters[i+1] && ind !== letters[i+1].ind){\r\n                    currentLength += letters[i].an / 2;\r\n                    currentLength += documentData.tr/1000*documentData.finalSize;\r\n                }\r\n            }else{\r\n\r\n                matrixHelper.translate(xPos,yPos,0);\r\n\r\n                if(documentData.ps){\r\n                    //matrixHelper.translate(documentData.ps[0],documentData.ps[1],0);\r\n                    matrixHelper.translate(documentData.ps[0],documentData.ps[1] + documentData.ascent,0);\r\n                }\r\n                switch(documentData.j){\r\n                    case 1:\r\n                        matrixHelper.translate(letters[i].animatorJustifyOffset + documentData.justifyOffset + (documentData.boxWidth - documentData.lineWidths[letters[i].line]),0,0);\r\n                        break;\r\n                    case 2:\r\n                        matrixHelper.translate(letters[i].animatorJustifyOffset + documentData.justifyOffset + (documentData.boxWidth - documentData.lineWidths[letters[i].line])/2,0,0);\r\n                        break;\r\n                }\r\n                matrixHelper.translate(0,-documentData.ls);\r\n                matrixHelper.translate(offf,0,0);\r\n                matrixHelper.translate(alignment[0]*letters[i].an/200,alignment[1]*yOff/100,0);\r\n                xPos += letters[i].l + documentData.tr/1000*documentData.finalSize;\r\n            }\r\n            if(renderType === 'html'){\r\n                letterM = matrixHelper.toCSS();\r\n            }else if(renderType === 'svg'){\r\n                letterM = matrixHelper.to2dCSS();\r\n            }else{\r\n                letterP = [matrixHelper.props[0],matrixHelper.props[1],matrixHelper.props[2],matrixHelper.props[3],matrixHelper.props[4],matrixHelper.props[5],matrixHelper.props[6],matrixHelper.props[7],matrixHelper.props[8],matrixHelper.props[9],matrixHelper.props[10],matrixHelper.props[11],matrixHelper.props[12],matrixHelper.props[13],matrixHelper.props[14],matrixHelper.props[15]];\r\n            }\r\n            letterO = elemOpacity;\r\n        }\r\n\r\n        if(renderedLettersCount <= i) {\r\n            letterValue = new LetterProps(letterO,letterSw,letterSc,letterFc,letterM,letterP);\r\n            this.renderedLetters.push(letterValue);\r\n            renderedLettersCount += 1;\r\n            this.lettersChangedFlag = true;\r\n        } else {\r\n            letterValue = this.renderedLetters[i];\r\n            this.lettersChangedFlag = letterValue.update(letterO, letterSw, letterSc, letterFc, letterM, letterP) || this.lettersChangedFlag;\r\n        }\r\n    }\r\n};\r\n\r\nTextAnimatorProperty.prototype.getValue = function(){\r\n\tif(this._elem.globalData.frameId === this._frameId){\r\n        return;\r\n    }\r\n    this._frameId = this._elem.globalData.frameId;\r\n    this.iterateDynamicProperties();\r\n};\r\n\r\nTextAnimatorProperty.prototype.mHelper = new Matrix();\r\nTextAnimatorProperty.prototype.defaultPropsArray = [];\r\nextendPrototype([DynamicPropertyContainer], TextAnimatorProperty);\r\nfunction TextAnimatorDataProperty(elem, animatorProps, container) {\r\n\tvar defaultData = {propType:false};\r\n\tvar getProp = PropertyFactory.getProp;\r\n\tvar textAnimator_animatables = animatorProps.a;\r\n\tthis.a = {\r\n\t\tr: textAnimator_animatables.r ? getProp(elem, textAnimator_animatables.r, 0, degToRads, container) : defaultData,\r\n\t\trx: textAnimator_animatables.rx ? getProp(elem, textAnimator_animatables.rx, 0, degToRads, container) : defaultData,\r\n\t\try: textAnimator_animatables.ry ? getProp(elem, textAnimator_animatables.ry, 0, degToRads, container) : defaultData,\r\n\t\tsk: textAnimator_animatables.sk ? getProp(elem, textAnimator_animatables.sk, 0, degToRads, container) : defaultData,\r\n\t\tsa: textAnimator_animatables.sa ? getProp(elem, textAnimator_animatables.sa, 0, degToRads, container) : defaultData,\r\n\t\ts: textAnimator_animatables.s ? getProp(elem, textAnimator_animatables.s, 1, 0.01, container) : defaultData,\r\n\t\ta: textAnimator_animatables.a ? getProp(elem, textAnimator_animatables.a, 1, 0, container) : defaultData,\r\n\t\to: textAnimator_animatables.o ? getProp(elem, textAnimator_animatables.o, 0, 0.01, container) : defaultData,\r\n\t\tp: textAnimator_animatables.p ? getProp(elem,textAnimator_animatables.p, 1, 0, container) : defaultData,\r\n\t\tsw: textAnimator_animatables.sw ? getProp(elem, textAnimator_animatables.sw, 0, 0, container) : defaultData,\r\n\t\tsc: textAnimator_animatables.sc ? getProp(elem, textAnimator_animatables.sc, 1, 0, container) : defaultData,\r\n\t\tfc: textAnimator_animatables.fc ? getProp(elem, textAnimator_animatables.fc, 1, 0, container) : defaultData,\r\n\t\tfh: textAnimator_animatables.fh ? getProp(elem, textAnimator_animatables.fh, 0, 0, container) : defaultData,\r\n\t\tfs: textAnimator_animatables.fs ? getProp(elem, textAnimator_animatables.fs, 0, 0.01, container) : defaultData,\r\n\t\tfb: textAnimator_animatables.fb ? getProp(elem, textAnimator_animatables.fb, 0, 0.01, container) : defaultData,\r\n\t\tt: textAnimator_animatables.t ? getProp(elem, textAnimator_animatables.t, 0, 0, container) : defaultData\r\n\t};\r\n\r\n\tthis.s = TextSelectorProp.getTextSelectorProp(elem,animatorProps.s, container);\r\n    this.s.t = animatorProps.s.t;\r\n}\r\nfunction LetterProps(o, sw, sc, fc, m, p){\r\n    this.o = o;\r\n    this.sw = sw;\r\n    this.sc = sc;\r\n    this.fc = fc;\r\n    this.m = m;\r\n    this.p = p;\r\n    this._mdf = {\r\n    \to: true,\r\n    \tsw: !!sw,\r\n    \tsc: !!sc,\r\n    \tfc: !!fc,\r\n    \tm: true,\r\n    \tp: true\r\n    };\r\n}\r\n\r\nLetterProps.prototype.update = function(o, sw, sc, fc, m, p) {\r\n\tthis._mdf.o = false;\r\n\tthis._mdf.sw = false;\r\n\tthis._mdf.sc = false;\r\n\tthis._mdf.fc = false;\r\n\tthis._mdf.m = false;\r\n\tthis._mdf.p = false;\r\n\tvar updated = false;\r\n\r\n\tif(this.o !== o) {\r\n\t\tthis.o = o;\r\n\t\tthis._mdf.o = true;\r\n\t\tupdated = true;\r\n\t}\r\n\tif(this.sw !== sw) {\r\n\t\tthis.sw = sw;\r\n\t\tthis._mdf.sw = true;\r\n\t\tupdated = true;\r\n\t}\r\n\tif(this.sc !== sc) {\r\n\t\tthis.sc = sc;\r\n\t\tthis._mdf.sc = true;\r\n\t\tupdated = true;\r\n\t}\r\n\tif(this.fc !== fc) {\r\n\t\tthis.fc = fc;\r\n\t\tthis._mdf.fc = true;\r\n\t\tupdated = true;\r\n\t}\r\n\tif(this.m !== m) {\r\n\t\tthis.m = m;\r\n\t\tthis._mdf.m = true;\r\n\t\tupdated = true;\r\n\t}\r\n\tif(p.length && (this.p[0] !== p[0] || this.p[1] !== p[1] || this.p[4] !== p[4] || this.p[5] !== p[5] || this.p[12] !== p[12] || this.p[13] !== p[13])) {\r\n\t\tthis.p = p;\r\n\t\tthis._mdf.p = true;\r\n\t\tupdated = true;\r\n\t}\r\n\treturn updated;\r\n};\r\nfunction TextProperty(elem, data){\r\n\tthis._frameId = initialDefaultFrame;\r\n\tthis.pv = '';\r\n\tthis.v = '';\r\n\tthis.kf = false;\r\n\tthis._isFirstFrame = true;\r\n\tthis._mdf = false;\r\n    this.data = data;\r\n\tthis.elem = elem;\r\n    this.comp = this.elem.comp;\r\n\tthis.keysIndex = 0;\r\n    this.canResize = false;\r\n    this.minimumFontSize = 1;\r\n    this.effectsSequence = [];\r\n\tthis.currentData = {\r\n\t\tascent: 0,\r\n        boxWidth: this.defaultBoxWidth,\r\n        f: '',\r\n        fStyle: '',\r\n        fWeight: '',\r\n        fc: '',\r\n        j: '',\r\n        justifyOffset: '',\r\n        l: [],\r\n        lh: 0,\r\n        lineWidths: [],\r\n        ls: '',\r\n        of: '',\r\n        s: '',\r\n        sc: '',\r\n        sw: 0,\r\n        t: 0,\r\n        tr: 0,\r\n        sz:0,\r\n        ps:null,\r\n        fillColorAnim: false,\r\n        strokeColorAnim: false,\r\n        strokeWidthAnim: false,\r\n        yOffset: 0,\r\n        finalSize:0,\r\n        finalText:[],\r\n        finalLineHeight: 0,\r\n        __complete: false\r\n\r\n\t};\r\n    this.copyData(this.currentData, this.data.d.k[0].s);\r\n\r\n    if(!this.searchProperty()) {\r\n        this.completeTextData(this.currentData);\r\n    }\r\n}\r\n\r\nTextProperty.prototype.defaultBoxWidth = [0,0];\r\n\r\nTextProperty.prototype.copyData = function(obj, data) {\r\n    for(var s in data) {\r\n        if(data.hasOwnProperty(s)) {\r\n            obj[s] = data[s];\r\n        }\r\n    }\r\n    return obj;\r\n}\r\n\r\nTextProperty.prototype.setCurrentData = function(data){\r\n    if(!data.__complete) {\r\n        this.completeTextData(data);\r\n    }\r\n    this.currentData = data;\r\n    this.currentData.boxWidth = this.currentData.boxWidth || this.defaultBoxWidth;\r\n    this._mdf = true;\r\n};\r\n\r\nTextProperty.prototype.searchProperty = function() {\r\n    return this.searchKeyframes();\r\n};\r\n\r\nTextProperty.prototype.searchKeyframes = function() {\r\n    this.kf = this.data.d.k.length > 1;\r\n    if(this.kf) {\r\n        this.addEffect(this.getKeyframeValue.bind(this));\r\n    }\r\n    return this.kf;\r\n}\r\n\r\nTextProperty.prototype.addEffect = function(effectFunction) {\r\n\tthis.effectsSequence.push(effectFunction);\r\n    this.elem.addDynamicProperty(this);\r\n};\r\n\r\nTextProperty.prototype.getValue = function(_finalValue) {\r\n    if((this.elem.globalData.frameId === this.frameId || !this.effectsSequence.length) && !_finalValue) {\r\n        return;\r\n    }\r\n    this.currentData.t = this.data.d.k[this.keysIndex].s.t;\r\n    var currentValue = this.currentData;\r\n    var currentIndex = this.keysIndex;\r\n    if(this.lock) {\r\n        this.setCurrentData(this.currentData);\r\n        return;\r\n    }\r\n    this.lock = true;\r\n    this._mdf = false;\r\n    var multipliedValue;\r\n    var i, len = this.effectsSequence.length;\r\n    var finalValue = _finalValue || this.data.d.k[this.keysIndex].s;\r\n    for(i = 0; i < len; i += 1) {\r\n        //Checking if index changed to prevent creating a new object every time the expression updates.\r\n        if(currentIndex !== this.keysIndex) {\r\n            finalValue = this.effectsSequence[i](finalValue, finalValue.t);\r\n        } else {\r\n            finalValue = this.effectsSequence[i](this.currentData, finalValue.t);\r\n        }\r\n    }\r\n    if(currentValue !== finalValue) {\r\n        this.setCurrentData(finalValue);\r\n    }\r\n    this.pv = this.v = this.currentData;\r\n    this.lock = false;\r\n    this.frameId = this.elem.globalData.frameId;\r\n}\r\n\r\nTextProperty.prototype.getKeyframeValue = function() {\r\n    var textKeys = this.data.d.k, textDocumentData;\r\n    var frameNum = this.elem.comp.renderedFrame;\r\n    var i = 0, len = textKeys.length;\r\n    while(i <= len - 1) {\r\n        textDocumentData = textKeys[i].s;\r\n        if(i === len - 1 || textKeys[i+1].t > frameNum){\r\n            break;\r\n        }\r\n        i += 1;\r\n    }\r\n    if(this.keysIndex !== i) {\r\n        this.keysIndex = i;\r\n    }\r\n    return this.data.d.k[this.keysIndex].s;\r\n};\r\n\r\nTextProperty.prototype.buildFinalText = function(text) {\r\n    var combinedCharacters = FontManager.getCombinedCharacterCodes();\r\n    var charactersArray = [];\r\n    var i = 0, len = text.length;\r\n    var charCode;\r\n    while (i < len) {\r\n        charCode = text.charCodeAt(i);\r\n        if (combinedCharacters.indexOf(charCode) !== -1) {\r\n            charactersArray[charactersArray.length - 1] += text.charAt(i);\r\n        } else {\r\n            if (charCode >= 0xD800 && charCode <= 0xDBFF) {\r\n                charCode = text.charCodeAt(i + 1);\r\n                if (charCode >= 0xDC00 && charCode <= 0xDFFF) {\r\n                    charactersArray.push(text.substr(i, 2));\r\n                    ++i;\r\n                } else {\r\n                    charactersArray.push(text.charAt(i));\r\n                }\r\n            } else {\r\n                charactersArray.push(text.charAt(i));\r\n            }\r\n        }\r\n        i += 1;\r\n    }\r\n    return charactersArray;\r\n}\r\n\r\nTextProperty.prototype.completeTextData = function(documentData) {\r\n    documentData.__complete = true;\r\n    var fontManager = this.elem.globalData.fontManager;\r\n    var data = this.data;\r\n    var letters = [];\r\n    var i, len;\r\n    var newLineFlag, index = 0, val;\r\n    var anchorGrouping = data.m.g;\r\n    var currentSize = 0, currentPos = 0, currentLine = 0, lineWidths = [];\r\n    var lineWidth = 0;\r\n    var maxLineWidth = 0;\r\n    var j, jLen;\r\n    var fontData = fontManager.getFontByName(documentData.f);\r\n    var charData, cLength = 0;\r\n    var styles = fontData.fStyle ? fontData.fStyle.split(' ') : [];\r\n\r\n    var fWeight = 'normal', fStyle = 'normal';\r\n    len = styles.length;\r\n    var styleName;\r\n    for(i=0;i<len;i+=1){\r\n        styleName = styles[i].toLowerCase();\r\n        switch(styleName) {\r\n            case 'italic':\r\n            fStyle = 'italic';\r\n            break;\r\n            case 'bold':\r\n            fWeight = '700';\r\n            break;\r\n            case 'black':\r\n            fWeight = '900';\r\n            break;\r\n            case 'medium':\r\n            fWeight = '500';\r\n            break;\r\n            case 'regular':\r\n            case 'normal':\r\n            fWeight = '400';\r\n            break;\r\n            case 'light':\r\n            case 'thin':\r\n            fWeight = '200';\r\n            break;\r\n        }\r\n    }\r\n    documentData.fWeight = fontData.fWeight || fWeight;\r\n    documentData.fStyle = fStyle;\r\n    documentData.finalSize = documentData.s;\r\n    documentData.finalText = this.buildFinalText(documentData.t);\r\n    len = documentData.finalText.length;\r\n    documentData.finalLineHeight = documentData.lh;\r\n    var trackingOffset = documentData.tr/1000*documentData.finalSize;\r\n    var charCode;\r\n    if(documentData.sz){\r\n        var flag = true;\r\n        var boxWidth = documentData.sz[0];\r\n        var boxHeight = documentData.sz[1];\r\n        var currentHeight, finalText;\r\n        while(flag) {\r\n            finalText = this.buildFinalText(documentData.t);\r\n            currentHeight = 0;\r\n            lineWidth = 0;\r\n            len = finalText.length;\r\n            trackingOffset = documentData.tr/1000*documentData.finalSize;\r\n            var lastSpaceIndex = -1;\r\n            for(i=0;i<len;i+=1){\r\n                charCode = finalText[i].charCodeAt(0);\r\n                newLineFlag = false;\r\n                if(finalText[i] === ' '){\r\n                    lastSpaceIndex = i;\r\n                }else if(charCode === 13 || charCode === 3){\r\n                    lineWidth = 0;\r\n                    newLineFlag = true;\r\n                    currentHeight += documentData.finalLineHeight || documentData.finalSize*1.2;\r\n                }\r\n                if(fontManager.chars){\r\n                    charData = fontManager.getCharData(finalText[i], fontData.fStyle, fontData.fFamily);\r\n                    cLength = newLineFlag ? 0 : charData.w*documentData.finalSize/100;\r\n                }else{\r\n                    //tCanvasHelper.font = documentData.s + 'px '+ fontData.fFamily;\r\n                    cLength = fontManager.measureText(finalText[i], documentData.f, documentData.finalSize);\r\n                }\r\n                if(lineWidth + cLength > boxWidth && finalText[i] !== ' '){\r\n                    if(lastSpaceIndex === -1){\r\n                        len += 1;\r\n                    } else {\r\n                        i = lastSpaceIndex;\r\n                    }\r\n                    currentHeight += documentData.finalLineHeight || documentData.finalSize*1.2;\r\n                    finalText.splice(i, lastSpaceIndex === i ? 1 : 0,\"\\r\");\r\n                    //finalText = finalText.substr(0,i) + \"\\r\" + finalText.substr(i === lastSpaceIndex ? i + 1 : i);\r\n                    lastSpaceIndex = -1;\r\n                    lineWidth = 0;\r\n                }else {\r\n                    lineWidth += cLength;\r\n                    lineWidth += trackingOffset;\r\n                }\r\n            }\r\n            currentHeight += fontData.ascent*documentData.finalSize/100;\r\n            if(this.canResize && documentData.finalSize > this.minimumFontSize && boxHeight < currentHeight) {\r\n                documentData.finalSize -= 1;\r\n                documentData.finalLineHeight = documentData.finalSize * documentData.lh / documentData.s;\r\n            } else {\r\n                documentData.finalText = finalText;\r\n                len = documentData.finalText.length;\r\n                flag = false;\r\n            }\r\n        }\r\n\r\n    }\r\n    lineWidth = - trackingOffset;\r\n    cLength = 0;\r\n    var uncollapsedSpaces = 0;\r\n    var currentChar;\r\n    for (i = 0;i < len ;i += 1) {\r\n        newLineFlag = false;\r\n        currentChar = documentData.finalText[i];\r\n        charCode = currentChar.charCodeAt(0);\r\n        if (currentChar === ' '){\r\n            val = '\\u00A0';\r\n        } else if (charCode === 13 || charCode === 3) {\r\n            uncollapsedSpaces = 0;\r\n            lineWidths.push(lineWidth);\r\n            maxLineWidth = lineWidth > maxLineWidth ? lineWidth : maxLineWidth;\r\n            lineWidth = - 2 * trackingOffset;\r\n            val = '';\r\n            newLineFlag = true;\r\n            currentLine += 1;\r\n        }else{\r\n            val = documentData.finalText[i];\r\n        }\r\n        if(fontManager.chars){\r\n            charData = fontManager.getCharData(currentChar, fontData.fStyle, fontManager.getFontByName(documentData.f).fFamily);\r\n            cLength = newLineFlag ? 0 : charData.w*documentData.finalSize/100;\r\n        }else{\r\n            //var charWidth = fontManager.measureText(val, documentData.f, documentData.finalSize);\r\n            //tCanvasHelper.font = documentData.finalSize + 'px '+ fontManager.getFontByName(documentData.f).fFamily;\r\n            cLength = fontManager.measureText(val, documentData.f, documentData.finalSize);\r\n        }\r\n\r\n        //\r\n        if(currentChar === ' '){\r\n            uncollapsedSpaces += cLength + trackingOffset;\r\n        } else {\r\n            lineWidth += cLength + trackingOffset + uncollapsedSpaces;\r\n            uncollapsedSpaces = 0;\r\n        }\r\n        letters.push({l:cLength,an:cLength,add:currentSize,n:newLineFlag, anIndexes:[], val: val, line: currentLine, animatorJustifyOffset: 0});\r\n        if(anchorGrouping == 2){\r\n            currentSize += cLength;\r\n            if(val === '' || val === '\\u00A0' || i === len - 1){\r\n                if(val === '' || val === '\\u00A0'){\r\n                    currentSize -= cLength;\r\n                }\r\n                while(currentPos<=i){\r\n                    letters[currentPos].an = currentSize;\r\n                    letters[currentPos].ind = index;\r\n                    letters[currentPos].extra = cLength;\r\n                    currentPos += 1;\r\n                }\r\n                index += 1;\r\n                currentSize = 0;\r\n            }\r\n        }else if(anchorGrouping == 3){\r\n            currentSize += cLength;\r\n            if(val === '' || i === len - 1){\r\n                if(val === ''){\r\n                    currentSize -= cLength;\r\n                }\r\n                while(currentPos<=i){\r\n                    letters[currentPos].an = currentSize;\r\n                    letters[currentPos].ind = index;\r\n                    letters[currentPos].extra = cLength;\r\n                    currentPos += 1;\r\n                }\r\n                currentSize = 0;\r\n                index += 1;\r\n            }\r\n        }else{\r\n            letters[index].ind = index;\r\n            letters[index].extra = 0;\r\n            index += 1;\r\n        }\r\n    }\r\n    documentData.l = letters;\r\n    maxLineWidth = lineWidth > maxLineWidth ? lineWidth : maxLineWidth;\r\n    lineWidths.push(lineWidth);\r\n    if(documentData.sz){\r\n        documentData.boxWidth = documentData.sz[0];\r\n        documentData.justifyOffset = 0;\r\n    }else{\r\n        documentData.boxWidth = maxLineWidth;\r\n        switch(documentData.j){\r\n            case 1:\r\n                documentData.justifyOffset = - documentData.boxWidth;\r\n                break;\r\n            case 2:\r\n                documentData.justifyOffset = - documentData.boxWidth/2;\r\n                break;\r\n            default:\r\n                documentData.justifyOffset = 0;\r\n        }\r\n    }\r\n    documentData.lineWidths = lineWidths;\r\n\r\n    var animators = data.a, animatorData, letterData;\r\n    jLen = animators.length;\r\n    var based, ind, indexes = [];\r\n    for(j=0;j<jLen;j+=1){\r\n        animatorData = animators[j];\r\n        if(animatorData.a.sc){\r\n            documentData.strokeColorAnim = true;\r\n        }\r\n        if(animatorData.a.sw){\r\n            documentData.strokeWidthAnim = true;\r\n        }\r\n        if(animatorData.a.fc || animatorData.a.fh || animatorData.a.fs || animatorData.a.fb){\r\n            documentData.fillColorAnim = true;\r\n        }\r\n        ind = 0;\r\n        based = animatorData.s.b;\r\n        for(i=0;i<len;i+=1){\r\n            letterData = letters[i];\r\n            letterData.anIndexes[j] = ind;\r\n            if((based == 1 && letterData.val !== '') || (based == 2 && letterData.val !== '' && letterData.val !== '\\u00A0') || (based == 3 && (letterData.n || letterData.val == '\\u00A0' || i == len - 1)) || (based == 4 && (letterData.n || i == len - 1))){\r\n                if(animatorData.s.rn === 1){\r\n                    indexes.push(ind);\r\n                }\r\n                ind += 1;\r\n            }\r\n        }\r\n        data.a[j].s.totalChars = ind;\r\n        var currentInd = -1, newInd;\r\n        if(animatorData.s.rn === 1){\r\n            for(i = 0; i < len; i += 1){\r\n                letterData = letters[i];\r\n                if(currentInd != letterData.anIndexes[j]){\r\n                    currentInd = letterData.anIndexes[j];\r\n                    newInd = indexes.splice(Math.floor(Math.random()*indexes.length),1)[0];\r\n                }\r\n                letterData.anIndexes[j] = newInd;\r\n            }\r\n        }\r\n    }\r\n    documentData.yOffset = documentData.finalLineHeight || documentData.finalSize*1.2;\r\n    documentData.ls = documentData.ls || 0;\r\n    documentData.ascent = fontData.ascent*documentData.finalSize/100;\r\n};\r\n\r\nTextProperty.prototype.updateDocumentData = function(newData, index) {\r\n\tindex = index === undefined ? this.keysIndex : index;\r\n    var dData = this.copyData({}, this.data.d.k[index].s);\r\n    dData = this.copyData(dData, newData);\r\n    this.data.d.k[index].s = dData;\r\n    this.recalculate(index);\r\n    this.elem.addDynamicProperty(this);\r\n};\r\n\r\nTextProperty.prototype.recalculate = function(index) {\r\n    var dData = this.data.d.k[index].s;\r\n    dData.__complete = false;\r\n    this.keysIndex = 0;\r\n    this._isFirstFrame = true;\r\n    this.getValue(dData);\r\n}\r\n\r\nTextProperty.prototype.canResizeFont = function(_canResize) {\r\n    this.canResize = _canResize;\r\n    this.recalculate(this.keysIndex);\r\n    this.elem.addDynamicProperty(this);\r\n};\r\n\r\nTextProperty.prototype.setMinimumFontSize = function(_fontValue) {\r\n    this.minimumFontSize = Math.floor(_fontValue) || 1;\r\n    this.recalculate(this.keysIndex);\r\n    this.elem.addDynamicProperty(this);\r\n};\r\n\r\nvar TextSelectorProp = (function(){\r\n    var max = Math.max;\r\n    var min = Math.min;\r\n    var floor = Math.floor;\r\n\r\n    function TextSelectorProp(elem,data){\r\n        this._currentTextLength = -1;\r\n        this.k = false;\r\n        this.data = data;\r\n        this.elem = elem;\r\n        this.comp = elem.comp;\r\n        this.finalS = 0;\r\n        this.finalE = 0;\r\n        this.initDynamicPropertyContainer(elem);\r\n        this.s = PropertyFactory.getProp(elem,data.s || {k:0},0,0,this);\r\n        if('e' in data){\r\n            this.e = PropertyFactory.getProp(elem,data.e,0,0,this);\r\n        }else{\r\n            this.e = {v:100};\r\n        }\r\n        this.o = PropertyFactory.getProp(elem,data.o || {k:0},0,0,this);\r\n        this.xe = PropertyFactory.getProp(elem,data.xe || {k:0},0,0,this);\r\n        this.ne = PropertyFactory.getProp(elem,data.ne || {k:0},0,0,this);\r\n        this.a = PropertyFactory.getProp(elem,data.a,0,0.01,this);\r\n        if(!this.dynamicProperties.length){\r\n            this.getValue();\r\n        }\r\n    }\r\n\r\n    TextSelectorProp.prototype = {\r\n        getMult: function(ind) {\r\n            if(this._currentTextLength !== this.elem.textProperty.currentData.l.length) {\r\n                this.getValue();\r\n            }\r\n            //var easer = bez.getEasingCurve(this.ne.v/100,0,1-this.xe.v/100,1);\r\n            var easer = BezierFactory.getBezierEasing(this.ne.v/100,0,1-this.xe.v/100,1).get;\r\n            var mult = 0;\r\n            var s = this.finalS;\r\n            var e = this.finalE;\r\n            var type = this.data.sh;\r\n            if(type == 2){\r\n                if(e === s){\r\n                    mult = ind >= e ? 1 : 0;\r\n                }else{\r\n                    mult = max(0,min(0.5/(e-s) + (ind-s)/(e-s),1));\r\n                }\r\n                mult = easer(mult);\r\n            }else if(type == 3){\r\n                if(e === s){\r\n                    mult = ind >= e ? 0 : 1;\r\n                }else{\r\n                    mult = 1 - max(0,min(0.5/(e-s) + (ind-s)/(e-s),1));\r\n                }\r\n\r\n                mult = easer(mult);\r\n            }else if(type == 4){\r\n                if(e === s){\r\n                    mult = 0;\r\n                }else{\r\n                    mult = max(0,min(0.5/(e-s) + (ind-s)/(e-s),1));\r\n                    if(mult<0.5){\r\n                        mult *= 2;\r\n                    }else{\r\n                        mult = 1 - 2*(mult-0.5);\r\n                    }\r\n                }\r\n                mult = easer(mult);\r\n            }else if(type == 5){\r\n                if(e === s){\r\n                    mult = 0;\r\n                }else{\r\n                    var tot = e - s;\r\n                    /*ind += 0.5;\r\n                    mult = -4/(tot*tot)*(ind*ind)+(4/tot)*ind;*/\r\n                    ind = min(max(0,ind+0.5-s),e-s);\r\n                    var x = -tot/2+ind;\r\n                    var a = tot/2;\r\n                    mult = Math.sqrt(1 - (x*x)/(a*a));\r\n                }\r\n                mult = easer(mult);\r\n            }else if(type == 6){\r\n                if(e === s){\r\n                    mult = 0;\r\n                }else{\r\n                    ind = min(max(0,ind+0.5-s),e-s);\r\n                    mult = (1+(Math.cos((Math.PI+Math.PI*2*(ind)/(e-s)))))/2;\r\n                    /*\r\n                     ind = Math.min(Math.max(s,ind),e-1);\r\n                     mult = (1+(Math.cos((Math.PI+Math.PI*2*(ind-s)/(e-1-s)))))/2;\r\n                     mult = Math.max(mult,(1/(e-1-s))/(e-1-s));*/\r\n                }\r\n                mult = easer(mult);\r\n            }else {\r\n                if(ind >= floor(s)){\r\n                    if(ind-s < 0){\r\n                        mult = 1 - (s - ind);\r\n                    }else{\r\n                        mult = max(0,min(e-ind,1));\r\n                    }\r\n                }\r\n                mult = easer(mult);\r\n            }\r\n            return mult*this.a.v;\r\n        },\r\n        getValue: function(newCharsFlag) {\r\n            this.iterateDynamicProperties();\r\n            this._mdf = newCharsFlag || this._mdf;\r\n            this._currentTextLength = this.elem.textProperty.currentData.l.length || 0;\r\n            if(newCharsFlag && this.data.r === 2) {\r\n                this.e.v = this._currentTextLength;\r\n            }\r\n            var divisor = this.data.r === 2 ? 1 : 100 / this.data.totalChars;\r\n            var o = this.o.v/divisor;\r\n            var s = this.s.v/divisor + o;\r\n            var e = (this.e.v/divisor) + o;\r\n            if(s>e){\r\n                var _s = s;\r\n                s = e;\r\n                e = _s;\r\n            }\r\n            this.finalS = s;\r\n            this.finalE = e;\r\n        }\r\n    }\r\n    extendPrototype([DynamicPropertyContainer], TextSelectorProp);\r\n\r\n    function getTextSelectorProp(elem, data,arr) {\r\n        return new TextSelectorProp(elem, data, arr);\r\n    }\r\n\r\n    return {\r\n        getTextSelectorProp: getTextSelectorProp\r\n    };\r\n}());\r\n\r\n    \r\nvar pool_factory = (function() {\r\n\treturn function(initialLength, _create, _release, _clone) {\r\n\r\n\t\tvar _length = 0;\r\n\t\tvar _maxLength = initialLength;\r\n\t\tvar pool = createSizedArray(_maxLength);\r\n\r\n\t\tvar ob = {\r\n\t\t\tnewElement: newElement,\r\n\t\t\trelease: release\r\n\t\t};\r\n\r\n\t\tfunction newElement(){\r\n\t\t\tvar element;\r\n\t\t\tif(_length){\r\n\t\t\t\t_length -= 1;\r\n\t\t\t\telement = pool[_length];\r\n\t\t\t} else {\r\n\t\t\t\telement = _create();\r\n\t\t\t}\r\n\t\t\treturn element;\r\n\t\t}\r\n\r\n\t\tfunction release(element) {\r\n\t\t\tif(_length === _maxLength) {\r\n\t\t\t\tpool = pooling.double(pool);\r\n\t\t\t\t_maxLength = _maxLength*2;\r\n\t\t\t}\r\n\t\t\tif (_release) {\r\n\t\t\t\t_release(element);\r\n\t\t\t}\r\n\t\t\tpool[_length] = element;\r\n\t\t\t_length += 1;\r\n\t\t}\r\n\r\n\t\tfunction clone() {\r\n\t\t\tvar clonedElement = newElement();\r\n\t\t\treturn _clone(clonedElement);\r\n\t\t}\r\n\r\n\t\treturn ob;\r\n\t};\r\n}());\r\n\r\nvar pooling = (function(){\r\n\r\n\tfunction double(arr){\r\n\t\treturn arr.concat(createSizedArray(arr.length));\r\n\t}\r\n\r\n\treturn {\r\n\t\tdouble: double\r\n\t};\r\n}());\r\nvar point_pool = (function(){\r\n\r\n\tfunction create() {\r\n\t\treturn createTypedArray('float32', 2);\r\n\t}\r\n\treturn pool_factory(8, create);\r\n}());\r\nvar shape_pool = (function(){\r\n\r\n\tfunction create() {\r\n\t\treturn new ShapePath();\r\n\t}\r\n\r\n\tfunction release(shapePath) {\r\n\t\tvar len = shapePath._length, i;\r\n\t\tfor(i = 0; i < len; i += 1) {\r\n\t\t\tpoint_pool.release(shapePath.v[i]);\r\n\t\t\tpoint_pool.release(shapePath.i[i]);\r\n\t\t\tpoint_pool.release(shapePath.o[i]);\r\n\t\t\tshapePath.v[i] = null;\r\n\t\t\tshapePath.i[i] = null;\r\n\t\t\tshapePath.o[i] = null;\r\n\t\t}\r\n\t\tshapePath._length = 0;\r\n\t\tshapePath.c = false;\r\n\t}\r\n\r\n\tfunction clone(shape) {\r\n\t\tvar cloned = factory.newElement();\r\n\t\tvar i, len = shape._length === undefined ? shape.v.length : shape._length;\r\n\t\tcloned.setLength(len);\r\n\t\tcloned.c = shape.c;\r\n\t\tvar pt;\r\n\t\t\r\n\t\tfor(i = 0; i < len; i += 1) {\r\n\t\t\tcloned.setTripleAt(shape.v[i][0],shape.v[i][1],shape.o[i][0],shape.o[i][1],shape.i[i][0],shape.i[i][1], i);\r\n\t\t}\r\n\t\treturn cloned;\r\n\t}\r\n\r\n\tvar factory = pool_factory(4, create, release);\r\n\tfactory.clone = clone;\r\n\r\n\treturn factory;\r\n}());\r\nvar shapeCollection_pool = (function(){\r\n\tvar ob = {\r\n\t\tnewShapeCollection: newShapeCollection,\r\n\t\trelease: release\r\n\t};\r\n\r\n\tvar _length = 0;\r\n\tvar _maxLength = 4;\r\n\tvar pool = createSizedArray(_maxLength);\r\n\r\n\tfunction newShapeCollection(){\r\n\t\tvar shapeCollection;\r\n\t\tif(_length){\r\n\t\t\t_length -= 1;\r\n\t\t\tshapeCollection = pool[_length];\r\n\t\t} else {\r\n\t\t\tshapeCollection = new ShapeCollection();\r\n\t\t}\r\n\t\treturn shapeCollection;\r\n\t}\r\n\r\n\tfunction release(shapeCollection) {\r\n\t\tvar i, len = shapeCollection._length;\r\n\t\tfor(i = 0; i < len; i += 1) {\r\n\t\t\tshape_pool.release(shapeCollection.shapes[i]);\r\n\t\t}\r\n\t\tshapeCollection._length = 0;\r\n\r\n\t\tif(_length === _maxLength) {\r\n\t\t\tpool = pooling.double(pool);\r\n\t\t\t_maxLength = _maxLength*2;\r\n\t\t}\r\n\t\tpool[_length] = shapeCollection;\r\n\t\t_length += 1;\r\n\t}\r\n\r\n\treturn ob;\r\n}());\r\nvar segments_length_pool = (function(){\r\n\r\n\tfunction create() {\r\n\t\treturn {\r\n\t\t\tlengths: [],\r\n\t\t\ttotalLength: 0\r\n\t\t};\r\n\t}\r\n\r\n\tfunction release(element) {\r\n\t\tvar i, len = element.lengths.length;\r\n\t\tfor(i=0;i<len;i+=1) {\r\n\t\t\tbezier_length_pool.release(element.lengths[i]);\r\n\t\t}\r\n\t\telement.lengths.length = 0;\r\n\t}\r\n\r\n\treturn pool_factory(8, create, release);\r\n}());\r\nvar bezier_length_pool = (function(){\r\n\r\n\tfunction create() {\r\n\t\treturn {\r\n            addedLength: 0,\r\n            percents: createTypedArray('float32', defaultCurveSegments),\r\n            lengths: createTypedArray('float32', defaultCurveSegments),\r\n        };\r\n\t}\r\n\treturn pool_factory(8, create);\r\n}());\r\nfunction BaseRenderer(){}\r\nBaseRenderer.prototype.checkLayers = function(num){\r\n    var i, len = this.layers.length, data;\r\n    this.completeLayers = true;\r\n    for (i = len - 1; i >= 0; i--) {\r\n        if (!this.elements[i]) {\r\n            data = this.layers[i];\r\n            if(data.ip - data.st <= (num - this.layers[i].st) && data.op - data.st > (num - this.layers[i].st))\r\n            {\r\n                this.buildItem(i);\r\n            }\r\n        }\r\n        this.completeLayers = this.elements[i] ? this.completeLayers:false;\r\n    }\r\n    this.checkPendingElements();\r\n};\r\n\r\nBaseRenderer.prototype.createItem = function(layer){\r\n    switch(layer.ty){\r\n        case 2:\r\n            return this.createImage(layer);\r\n        case 0:\r\n            return this.createComp(layer);\r\n        case 1:\r\n            return this.createSolid(layer);\r\n        case 3:\r\n            return this.createNull(layer);\r\n        case 4:\r\n            return this.createShape(layer);\r\n        case 5:\r\n            return this.createText(layer);\r\n        case 13:\r\n            return this.createCamera(layer);\r\n    }\r\n    return this.createNull(layer);\r\n};\r\n\r\nBaseRenderer.prototype.createCamera = function(){\r\n    throw new Error('You\\'re using a 3d camera. Try the html renderer.');\r\n};\r\n\r\nBaseRenderer.prototype.buildAllItems = function(){\r\n    var i, len = this.layers.length;\r\n    for(i=0;i<len;i+=1){\r\n        this.buildItem(i);\r\n    }\r\n    this.checkPendingElements();\r\n};\r\n\r\nBaseRenderer.prototype.includeLayers = function(newLayers){\r\n    this.completeLayers = false;\r\n    var i, len = newLayers.length;\r\n    var j, jLen = this.layers.length;\r\n    for(i=0;i<len;i+=1){\r\n        j = 0;\r\n        while(j<jLen){\r\n            if(this.layers[j].id == newLayers[i].id){\r\n                this.layers[j] = newLayers[i];\r\n                break;\r\n            }\r\n            j += 1;\r\n        }\r\n    }\r\n};\r\n\r\nBaseRenderer.prototype.setProjectInterface = function(pInterface){\r\n    this.globalData.projectInterface = pInterface;\r\n};\r\n\r\nBaseRenderer.prototype.initItems = function(){\r\n    if(!this.globalData.progressiveLoad){\r\n        this.buildAllItems();\r\n    }\r\n};\r\nBaseRenderer.prototype.buildElementParenting = function(element, parentName, hierarchy) {\r\n    var elements = this.elements;\r\n    var layers = this.layers;\r\n    var i=0, len = layers.length;\r\n    while (i < len) {\r\n        if (layers[i].ind == parentName) {\r\n            if (!elements[i] || elements[i] === true) {\r\n                this.buildItem(i);\r\n                this.addPendingElement(element);\r\n            } else {\r\n                hierarchy.push(elements[i]);\r\n                elements[i].setAsParent();\r\n                if(layers[i].parent !== undefined) {\r\n                    this.buildElementParenting(element, layers[i].parent, hierarchy);\r\n                } else {\r\n                    element.setHierarchy(hierarchy);\r\n                }\r\n            }\r\n        }\r\n        i += 1;\r\n    }\r\n};\r\n\r\nBaseRenderer.prototype.addPendingElement = function(element){\r\n    this.pendingElements.push(element);\r\n};\r\n\r\nBaseRenderer.prototype.searchExtraCompositions = function(assets){\r\n    var i, len = assets.length;\r\n    for(i=0;i<len;i+=1){\r\n        if(assets[i].xt){\r\n            var comp = this.createComp(assets[i]);\r\n            comp.initExpressions();\r\n            this.globalData.projectInterface.registerComposition(comp);\r\n        }\r\n    }\r\n};\r\n\r\nBaseRenderer.prototype.setupGlobalData = function(animData, fontsContainer) {\r\n    this.globalData.fontManager = new FontManager();\r\n    this.globalData.fontManager.addChars(animData.chars);\r\n    this.globalData.fontManager.addFonts(animData.fonts, fontsContainer);\r\n    this.globalData.getAssetData = this.animationItem.getAssetData.bind(this.animationItem);\r\n    this.globalData.getAssetsPath = this.animationItem.getAssetsPath.bind(this.animationItem);\r\n    this.globalData.imageLoader = this.animationItem.imagePreloader;\r\n    this.globalData.frameId = 0;\r\n    this.globalData.frameRate = animData.fr;\r\n    this.globalData.nm = animData.nm;\r\n    this.globalData.compSize = {\r\n        w: animData.w,\r\n        h: animData.h\r\n    }\r\n}\r\nfunction SVGRenderer(animationItem, config){\r\n    this.animationItem = animationItem;\r\n    this.layers = null;\r\n    this.renderedFrame = -1;\r\n    this.svgElement = createNS('svg');\r\n    var ariaLabel = '';\r\n    if (config && config.title) {\r\n        var titleElement = createNS('title');\r\n        var titleId = createElementID();\r\n        titleElement.setAttribute('id', titleId);\r\n        titleElement.textContent = config.title;\r\n        this.svgElement.appendChild(titleElement);\r\n        ariaLabel += titleId;\r\n    }\r\n    if (config && config.description) {\r\n        var descElement = createNS('desc');\r\n        var descId = createElementID();\r\n        descElement.setAttribute('id', descId);\r\n        descElement.textContent = config.description;\r\n        this.svgElement.appendChild(descElement);\r\n        ariaLabel += ' ' + descId;\r\n    }\r\n    if (ariaLabel) {\r\n        this.svgElement.setAttribute('aria-labelledby', ariaLabel)\r\n    }\r\n    var defs = createNS( 'defs');\r\n    this.svgElement.appendChild(defs);\r\n    var maskElement = createNS('g');\r\n    this.svgElement.appendChild(maskElement);\r\n    this.layerElement = maskElement;\r\n    this.renderConfig = {\r\n        preserveAspectRatio: (config && config.preserveAspectRatio) || 'xMidYMid meet',\r\n        imagePreserveAspectRatio: (config && config.imagePreserveAspectRatio) || 'xMidYMid slice',\r\n        progressiveLoad: (config && config.progressiveLoad) || false,\r\n        hideOnTransparent: (config && config.hideOnTransparent === false) ? false : true,\r\n        viewBoxOnly: (config && config.viewBoxOnly) || false,\r\n        viewBoxSize: (config && config.viewBoxSize) || false,\r\n        className: (config && config.className) || ''\r\n    };\r\n\r\n    this.globalData = {\r\n        _mdf: false,\r\n        frameNum: -1,\r\n        defs: defs,\r\n        renderConfig: this.renderConfig\r\n    };\r\n    this.elements = [];\r\n    this.pendingElements = [];\r\n    this.destroyed = false;\r\n    this.rendererType = 'svg';\r\n\r\n}\r\n\r\nextendPrototype([BaseRenderer],SVGRenderer);\r\n\r\nSVGRenderer.prototype.createNull = function (data) {\r\n    return new NullElement(data,this.globalData,this);\r\n};\r\n\r\nSVGRenderer.prototype.createShape = function (data) {\r\n    return new SVGShapeElement(data,this.globalData,this);\r\n};\r\n\r\nSVGRenderer.prototype.createText = function (data) {\r\n    return new SVGTextElement(data,this.globalData,this);\r\n\r\n};\r\n\r\nSVGRenderer.prototype.createImage = function (data) {\r\n    return new IImageElement(data,this.globalData,this);\r\n};\r\n\r\nSVGRenderer.prototype.createComp = function (data) {\r\n    return new SVGCompElement(data,this.globalData,this);\r\n\r\n};\r\n\r\nSVGRenderer.prototype.createSolid = function (data) {\r\n    return new ISolidElement(data,this.globalData,this);\r\n};\r\n\r\nSVGRenderer.prototype.configAnimation = function(animData){\r\n    this.svgElement.setAttribute('xmlns','http://www.w3.org/2000/svg');\r\n    if(this.renderConfig.viewBoxSize) {\r\n        this.svgElement.setAttribute('viewBox',this.renderConfig.viewBoxSize);\r\n    } else {\r\n        this.svgElement.setAttribute('viewBox','0 0 '+animData.w+' '+animData.h);\r\n    }\r\n\r\n    if(!this.renderConfig.viewBoxOnly) {\r\n        this.svgElement.setAttribute('width',animData.w);\r\n        this.svgElement.setAttribute('height',animData.h);\r\n        this.svgElement.style.width = '100%';\r\n        this.svgElement.style.height = '100%';\r\n        this.svgElement.style.transform = 'translate3d(0,0,0)';\r\n    }\r\n    if(this.renderConfig.className) {\r\n        this.svgElement.setAttribute('class', this.renderConfig.className);\r\n    }\r\n    this.svgElement.setAttribute('preserveAspectRatio',this.renderConfig.preserveAspectRatio);\r\n    //this.layerElement.style.transform = 'translate3d(0,0,0)';\r\n    //this.layerElement.style.transformOrigin = this.layerElement.style.mozTransformOrigin = this.layerElement.style.webkitTransformOrigin = this.layerElement.style['-webkit-transform'] = \"0px 0px 0px\";\r\n    this.animationItem.wrapper.appendChild(this.svgElement);\r\n    //Mask animation\r\n    var defs = this.globalData.defs;\r\n\r\n    this.setupGlobalData(animData, defs);\r\n    this.globalData.progressiveLoad = this.renderConfig.progressiveLoad;\r\n    this.data = animData;\r\n\r\n    var maskElement = createNS( 'clipPath');\r\n    var rect = createNS('rect');\r\n    rect.setAttribute('width',animData.w);\r\n    rect.setAttribute('height',animData.h);\r\n    rect.setAttribute('x',0);\r\n    rect.setAttribute('y',0);\r\n    var maskId = createElementID();\r\n    maskElement.setAttribute('id', maskId);\r\n    maskElement.appendChild(rect);\r\n    this.layerElement.setAttribute(\"clip-path\", \"url(\" + locationHref + \"#\"+maskId+\")\");\r\n\r\n    defs.appendChild(maskElement);\r\n    this.layers = animData.layers;\r\n    this.elements = createSizedArray(animData.layers.length);\r\n};\r\n\r\n\r\nSVGRenderer.prototype.destroy = function () {\r\n    this.animationItem.wrapper.innerHTML = '';\r\n    this.layerElement = null;\r\n    this.globalData.defs = null;\r\n    var i, len = this.layers ? this.layers.length : 0;\r\n    for (i = 0; i < len; i++) {\r\n        if(this.elements[i]){\r\n            this.elements[i].destroy();\r\n        }\r\n    }\r\n    this.elements.length = 0;\r\n    this.destroyed = true;\r\n    this.animationItem = null;\r\n};\r\n\r\nSVGRenderer.prototype.updateContainerSize = function () {\r\n};\r\n\r\nSVGRenderer.prototype.buildItem  = function(pos){\r\n    var elements = this.elements;\r\n    if(elements[pos] || this.layers[pos].ty == 99){\r\n        return;\r\n    }\r\n    elements[pos] = true;\r\n    var element = this.createItem(this.layers[pos]);\r\n\r\n    elements[pos] = element;\r\n    if(expressionsPlugin){\r\n        if(this.layers[pos].ty === 0){\r\n            this.globalData.projectInterface.registerComposition(element);\r\n        }\r\n        element.initExpressions();\r\n    }\r\n    this.appendElementInPos(element,pos);\r\n    if(this.layers[pos].tt){\r\n        if(!this.elements[pos - 1] || this.elements[pos - 1] === true){\r\n            this.buildItem(pos - 1);\r\n            this.addPendingElement(element);\r\n        } else {\r\n            element.setMatte(elements[pos - 1].layerId);\r\n        }\r\n    }\r\n};\r\n\r\nSVGRenderer.prototype.checkPendingElements  = function(){\r\n    while(this.pendingElements.length){\r\n        var element = this.pendingElements.pop();\r\n        element.checkParenting();\r\n        if(element.data.tt){\r\n            var i = 0, len = this.elements.length;\r\n            while(i<len){\r\n                if(this.elements[i] === element){\r\n                    element.setMatte(this.elements[i - 1].layerId);\r\n                    break;\r\n                }\r\n                i += 1;\r\n            }\r\n        }\r\n    }\r\n};\r\n\r\nSVGRenderer.prototype.renderFrame = function(num){\r\n    if(this.renderedFrame === num || this.destroyed){\r\n        return;\r\n    }\r\n    if(num === null){\r\n        num = this.renderedFrame;\r\n    }else{\r\n        this.renderedFrame = num;\r\n    }\r\n    // console.log('-------');\r\n    // console.log('FRAME ',num);\r\n    this.globalData.frameNum = num;\r\n    this.globalData.frameId += 1;\r\n    this.globalData.projectInterface.currentFrame = num;\r\n    this.globalData._mdf = false;\r\n    var i, len = this.layers.length;\r\n    if(!this.completeLayers){\r\n        this.checkLayers(num);\r\n    }\r\n    for (i = len - 1; i >= 0; i--) {\r\n        if(this.completeLayers || this.elements[i]){\r\n            this.elements[i].prepareFrame(num - this.layers[i].st);\r\n        }\r\n    }\r\n    if(this.globalData._mdf) {\r\n        for (i = 0; i < len; i += 1) {\r\n            if(this.completeLayers || this.elements[i]){\r\n                this.elements[i].renderFrame();\r\n            }\r\n        }\r\n    }\r\n};\r\n\r\nSVGRenderer.prototype.appendElementInPos = function(element, pos){\r\n    var newElement = element.getBaseElement();\r\n    if(!newElement){\r\n        return;\r\n    }\r\n    var i = 0;\r\n    var nextElement;\r\n    while(i<pos){\r\n        if(this.elements[i] && this.elements[i]!== true && this.elements[i].getBaseElement()){\r\n            nextElement = this.elements[i].getBaseElement();\r\n        }\r\n        i += 1;\r\n    }\r\n    if(nextElement){\r\n        this.layerElement.insertBefore(newElement, nextElement);\r\n    } else {\r\n        this.layerElement.appendChild(newElement);\r\n    }\r\n};\r\n\r\nSVGRenderer.prototype.hide = function(){\r\n    this.layerElement.style.display = 'none';\r\n};\r\n\r\nSVGRenderer.prototype.show = function(){\r\n    this.layerElement.style.display = 'block';\r\n};\r\n\r\nfunction CanvasRenderer(animationItem, config){\r\n    this.animationItem = animationItem;\r\n    this.renderConfig = {\r\n        clearCanvas: (config && config.clearCanvas !== undefined) ? config.clearCanvas : true,\r\n        context: (config && config.context) || null,\r\n        progressiveLoad: (config && config.progressiveLoad) || false,\r\n        preserveAspectRatio: (config && config.preserveAspectRatio) || 'xMidYMid meet',\r\n        imagePreserveAspectRatio: (config && config.imagePreserveAspectRatio) || 'xMidYMid slice',\r\n        className: (config && config.className) || ''\r\n    };\r\n    this.renderConfig.dpr = (config && config.dpr) || 1;\r\n    if (this.animationItem.wrapper) {\r\n        this.renderConfig.dpr = (config && config.dpr) || window.devicePixelRatio || 1;\r\n    }\r\n    this.renderedFrame = -1;\r\n    this.globalData = {\r\n        frameNum: -1,\r\n        _mdf: false,\r\n        renderConfig: this.renderConfig,\r\n        currentGlobalAlpha: -1\r\n    };\r\n    this.contextData = new CVContextData();\r\n    this.elements = [];\r\n    this.pendingElements = [];\r\n    this.transformMat = new Matrix();\r\n    this.completeLayers = false;\r\n    this.rendererType = 'canvas';\r\n}\r\nextendPrototype([BaseRenderer],CanvasRenderer);\r\n\r\nCanvasRenderer.prototype.createShape = function (data) {\r\n    return new CVShapeElement(data, this.globalData, this);\r\n};\r\n\r\nCanvasRenderer.prototype.createText = function (data) {\r\n    return new CVTextElement(data, this.globalData, this);\r\n};\r\n\r\nCanvasRenderer.prototype.createImage = function (data) {\r\n    return new CVImageElement(data, this.globalData, this);\r\n};\r\n\r\nCanvasRenderer.prototype.createComp = function (data) {\r\n    return new CVCompElement(data, this.globalData, this);\r\n};\r\n\r\nCanvasRenderer.prototype.createSolid = function (data) {\r\n    return new CVSolidElement(data, this.globalData, this);\r\n};\r\n\r\nCanvasRenderer.prototype.createNull = SVGRenderer.prototype.createNull;\r\n\r\nCanvasRenderer.prototype.ctxTransform = function(props){\r\n    if(props[0] === 1 && props[1] === 0 && props[4] === 0 && props[5] === 1 && props[12] === 0 && props[13] === 0){\r\n        return;\r\n    }\r\n    if(!this.renderConfig.clearCanvas){\r\n        this.canvasContext.transform(props[0],props[1],props[4],props[5],props[12],props[13]);\r\n        return;\r\n    }\r\n    this.transformMat.cloneFromProps(props);\r\n    var cProps = this.contextData.cTr.props;\r\n    this.transformMat.transform(cProps[0],cProps[1],cProps[2],cProps[3],cProps[4],cProps[5],cProps[6],cProps[7],cProps[8],cProps[9],cProps[10],cProps[11],cProps[12],cProps[13],cProps[14],cProps[15]);\r\n    //this.contextData.cTr.transform(props[0],props[1],props[2],props[3],props[4],props[5],props[6],props[7],props[8],props[9],props[10],props[11],props[12],props[13],props[14],props[15]);\r\n    this.contextData.cTr.cloneFromProps(this.transformMat.props);\r\n    var trProps = this.contextData.cTr.props;\r\n    this.canvasContext.setTransform(trProps[0],trProps[1],trProps[4],trProps[5],trProps[12],trProps[13]);\r\n};\r\n\r\nCanvasRenderer.prototype.ctxOpacity = function(op){\r\n    /*if(op === 1){\r\n        return;\r\n    }*/\r\n    if(!this.renderConfig.clearCanvas){\r\n        this.canvasContext.globalAlpha *= op < 0 ? 0 : op;\r\n        this.globalData.currentGlobalAlpha = this.contextData.cO;\r\n        return;\r\n    }\r\n    this.contextData.cO *= op < 0 ? 0 : op;\r\n    if(this.globalData.currentGlobalAlpha !== this.contextData.cO) {\r\n        this.canvasContext.globalAlpha = this.contextData.cO;\r\n        this.globalData.currentGlobalAlpha = this.contextData.cO;\r\n    }\r\n};\r\n\r\nCanvasRenderer.prototype.reset = function(){\r\n    if(!this.renderConfig.clearCanvas){\r\n        this.canvasContext.restore();\r\n        return;\r\n    }\r\n    this.contextData.reset();\r\n};\r\n\r\nCanvasRenderer.prototype.save = function(actionFlag){\r\n    if(!this.renderConfig.clearCanvas){\r\n        this.canvasContext.save();\r\n        return;\r\n    }\r\n    if(actionFlag){\r\n        this.canvasContext.save();\r\n    }\r\n    var props = this.contextData.cTr.props;\r\n    if(this.contextData._length <= this.contextData.cArrPos) {\r\n        this.contextData.duplicate();\r\n    }\r\n    var i, arr = this.contextData.saved[this.contextData.cArrPos];\r\n    for (i = 0; i < 16; i += 1) {\r\n        arr[i] = props[i];\r\n    }\r\n    this.contextData.savedOp[this.contextData.cArrPos] = this.contextData.cO;\r\n    this.contextData.cArrPos += 1;\r\n};\r\n\r\nCanvasRenderer.prototype.restore = function(actionFlag){\r\n    if(!this.renderConfig.clearCanvas){\r\n        this.canvasContext.restore();\r\n        return;\r\n    }\r\n    if(actionFlag){\r\n        this.canvasContext.restore();\r\n        this.globalData.blendMode = 'source-over';\r\n    }\r\n    this.contextData.cArrPos -= 1;\r\n    var popped = this.contextData.saved[this.contextData.cArrPos];\r\n    var i,arr = this.contextData.cTr.props;\r\n    for(i=0;i<16;i+=1){\r\n        arr[i] = popped[i];\r\n    }\r\n    this.canvasContext.setTransform(popped[0],popped[1],popped[4],popped[5],popped[12],popped[13]);\r\n    popped = this.contextData.savedOp[this.contextData.cArrPos];\r\n    this.contextData.cO = popped;\r\n    if(this.globalData.currentGlobalAlpha !== popped) {\r\n        this.canvasContext.globalAlpha = popped;\r\n        this.globalData.currentGlobalAlpha = popped;\r\n    }\r\n};\r\n\r\nCanvasRenderer.prototype.configAnimation = function(animData){\r\n    if(this.animationItem.wrapper){\r\n        this.animationItem.container = createTag('canvas');\r\n        this.animationItem.container.style.width = '100%';\r\n        this.animationItem.container.style.height = '100%';\r\n        //this.animationItem.container.style.transform = 'translate3d(0,0,0)';\r\n        //this.animationItem.container.style.webkitTransform = 'translate3d(0,0,0)';\r\n        this.animationItem.container.style.transformOrigin = this.animationItem.container.style.mozTransformOrigin = this.animationItem.container.style.webkitTransformOrigin = this.animationItem.container.style['-webkit-transform'] = \"0px 0px 0px\";\r\n        this.animationItem.wrapper.appendChild(this.animationItem.container);\r\n        this.canvasContext = this.animationItem.container.getContext('2d');\r\n        if(this.renderConfig.className) {\r\n            this.animationItem.container.setAttribute('class', this.renderConfig.className);\r\n        }\r\n    }else{\r\n        this.canvasContext = this.renderConfig.context;\r\n    }\r\n    this.data = animData;\r\n    this.layers = animData.layers;\r\n    this.transformCanvas = {\r\n        w: animData.w,\r\n        h:animData.h,\r\n        sx:0,\r\n        sy:0,\r\n        tx:0,\r\n        ty:0\r\n    };\r\n    this.setupGlobalData(animData, document.body);\r\n    this.globalData.canvasContext = this.canvasContext;\r\n    this.globalData.renderer = this;\r\n    this.globalData.isDashed = false;\r\n    this.globalData.progressiveLoad = this.renderConfig.progressiveLoad;\r\n    this.globalData.transformCanvas = this.transformCanvas;\r\n    this.elements = createSizedArray(animData.layers.length);\r\n\r\n    this.updateContainerSize();\r\n};\r\n\r\nCanvasRenderer.prototype.updateContainerSize = function () {\r\n    this.reset();\r\n    var elementWidth,elementHeight;\r\n    if(this.animationItem.wrapper && this.animationItem.container){\r\n        elementWidth = this.animationItem.wrapper.offsetWidth;\r\n        elementHeight = this.animationItem.wrapper.offsetHeight;\r\n        this.animationItem.container.setAttribute('width',elementWidth * this.renderConfig.dpr );\r\n        this.animationItem.container.setAttribute('height',elementHeight * this.renderConfig.dpr);\r\n    }else{\r\n        elementWidth = this.canvasContext.canvas.width * this.renderConfig.dpr;\r\n        elementHeight = this.canvasContext.canvas.height * this.renderConfig.dpr;\r\n    }\r\n    var elementRel,animationRel;\r\n    if(this.renderConfig.preserveAspectRatio.indexOf('meet') !== -1 || this.renderConfig.preserveAspectRatio.indexOf('slice') !== -1){\r\n        var par = this.renderConfig.preserveAspectRatio.split(' ');\r\n        var fillType = par[1] || 'meet';\r\n        var pos = par[0] || 'xMidYMid';\r\n        var xPos = pos.substr(0,4);\r\n        var yPos = pos.substr(4);\r\n        elementRel = elementWidth/elementHeight;\r\n        animationRel = this.transformCanvas.w/this.transformCanvas.h;\r\n        if(animationRel>elementRel && fillType === 'meet' || animationRel<elementRel && fillType === 'slice'){\r\n            this.transformCanvas.sx = elementWidth/(this.transformCanvas.w/this.renderConfig.dpr);\r\n            this.transformCanvas.sy = elementWidth/(this.transformCanvas.w/this.renderConfig.dpr);\r\n        }else{\r\n            this.transformCanvas.sx = elementHeight/(this.transformCanvas.h / this.renderConfig.dpr);\r\n            this.transformCanvas.sy = elementHeight/(this.transformCanvas.h / this.renderConfig.dpr);\r\n        }\r\n\r\n        if(xPos === 'xMid' && ((animationRel<elementRel && fillType==='meet') || (animationRel>elementRel && fillType === 'slice'))){\r\n            this.transformCanvas.tx = (elementWidth-this.transformCanvas.w*(elementHeight/this.transformCanvas.h))/2*this.renderConfig.dpr;\r\n        } else if(xPos === 'xMax' && ((animationRel<elementRel && fillType==='meet') || (animationRel>elementRel && fillType === 'slice'))){\r\n            this.transformCanvas.tx = (elementWidth-this.transformCanvas.w*(elementHeight/this.transformCanvas.h))*this.renderConfig.dpr;\r\n        } else {\r\n            this.transformCanvas.tx = 0;\r\n        }\r\n        if(yPos === 'YMid' && ((animationRel>elementRel && fillType==='meet') || (animationRel<elementRel && fillType === 'slice'))){\r\n            this.transformCanvas.ty = ((elementHeight-this.transformCanvas.h*(elementWidth/this.transformCanvas.w))/2)*this.renderConfig.dpr;\r\n        } else if(yPos === 'YMax' && ((animationRel>elementRel && fillType==='meet') || (animationRel<elementRel && fillType === 'slice'))){\r\n            this.transformCanvas.ty = ((elementHeight-this.transformCanvas.h*(elementWidth/this.transformCanvas.w)))*this.renderConfig.dpr;\r\n        } else {\r\n            this.transformCanvas.ty = 0;\r\n        }\r\n\r\n    }else if(this.renderConfig.preserveAspectRatio == 'none'){\r\n        this.transformCanvas.sx = elementWidth/(this.transformCanvas.w/this.renderConfig.dpr);\r\n        this.transformCanvas.sy = elementHeight/(this.transformCanvas.h/this.renderConfig.dpr);\r\n        this.transformCanvas.tx = 0;\r\n        this.transformCanvas.ty = 0;\r\n    }else{\r\n        this.transformCanvas.sx = this.renderConfig.dpr;\r\n        this.transformCanvas.sy = this.renderConfig.dpr;\r\n        this.transformCanvas.tx = 0;\r\n        this.transformCanvas.ty = 0;\r\n    }\r\n    this.transformCanvas.props = [this.transformCanvas.sx,0,0,0,0,this.transformCanvas.sy,0,0,0,0,1,0,this.transformCanvas.tx,this.transformCanvas.ty,0,1];\r\n    /*var i, len = this.elements.length;\r\n    for(i=0;i<len;i+=1){\r\n        if(this.elements[i] && this.elements[i].data.ty === 0){\r\n            this.elements[i].resize(this.globalData.transformCanvas);\r\n        }\r\n    }*/\r\n    this.ctxTransform(this.transformCanvas.props);\r\n    this.canvasContext.beginPath();\r\n    this.canvasContext.rect(0,0,this.transformCanvas.w,this.transformCanvas.h);\r\n    this.canvasContext.closePath();\r\n    this.canvasContext.clip();\r\n\r\n    this.renderFrame(this.renderedFrame, true);\r\n};\r\n\r\nCanvasRenderer.prototype.destroy = function () {\r\n    if(this.renderConfig.clearCanvas) {\r\n        this.animationItem.wrapper.innerHTML = '';\r\n    }\r\n    var i, len = this.layers ? this.layers.length : 0;\r\n    for (i = len - 1; i >= 0; i-=1) {\r\n        if(this.elements[i]) {\r\n            this.elements[i].destroy();\r\n        }\r\n    }\r\n    this.elements.length = 0;\r\n    this.globalData.canvasContext = null;\r\n    this.animationItem.container = null;\r\n    this.destroyed = true;\r\n};\r\n\r\nCanvasRenderer.prototype.renderFrame = function(num, forceRender){\r\n    if((this.renderedFrame === num && this.renderConfig.clearCanvas === true && !forceRender) || this.destroyed || num === -1){\r\n        return;\r\n    }\r\n    this.renderedFrame = num;\r\n    this.globalData.frameNum = num - this.animationItem._isFirstFrame;\r\n    this.globalData.frameId += 1;\r\n    this.globalData._mdf = !this.renderConfig.clearCanvas || forceRender;\r\n    this.globalData.projectInterface.currentFrame = num;\r\n\r\n     // console.log('--------');\r\n     // console.log('NEW: ',num);\r\n    var i, len = this.layers.length;\r\n    if(!this.completeLayers){\r\n        this.checkLayers(num);\r\n    }\r\n\r\n    for (i = 0; i < len; i++) {\r\n        if(this.completeLayers || this.elements[i]){\r\n            this.elements[i].prepareFrame(num - this.layers[i].st);\r\n        }\r\n    }\r\n    if(this.globalData._mdf) {\r\n        if(this.renderConfig.clearCanvas === true){\r\n            this.canvasContext.clearRect(0, 0, this.transformCanvas.w, this.transformCanvas.h);\r\n        }else{\r\n            this.save();\r\n        }\r\n        for (i = len - 1; i >= 0; i-=1) {\r\n            if(this.completeLayers || this.elements[i]){\r\n                this.elements[i].renderFrame();\r\n            }\r\n        }\r\n        if(this.renderConfig.clearCanvas !== true){\r\n            this.restore();\r\n        }\r\n    }\r\n};\r\n\r\nCanvasRenderer.prototype.buildItem = function(pos){\r\n    var elements = this.elements;\r\n    if(elements[pos] || this.layers[pos].ty == 99){\r\n        return;\r\n    }\r\n    var element = this.createItem(this.layers[pos], this,this.globalData);\r\n    elements[pos] = element;\r\n    element.initExpressions();\r\n    /*if(this.layers[pos].ty === 0){\r\n        element.resize(this.globalData.transformCanvas);\r\n    }*/\r\n};\r\n\r\nCanvasRenderer.prototype.checkPendingElements  = function(){\r\n    while(this.pendingElements.length){\r\n        var element = this.pendingElements.pop();\r\n        element.checkParenting();\r\n    }\r\n};\r\n\r\nCanvasRenderer.prototype.hide = function(){\r\n    this.animationItem.container.style.display = 'none';\r\n};\r\n\r\nCanvasRenderer.prototype.show = function(){\r\n    this.animationItem.container.style.display = 'block';\r\n};\r\n\r\nfunction HybridRenderer(animationItem, config){\r\n    this.animationItem = animationItem;\r\n    this.layers = null;\r\n    this.renderedFrame = -1;\r\n    this.renderConfig = {\r\n        className: (config && config.className) || '',\r\n        imagePreserveAspectRatio: (config && config.imagePreserveAspectRatio) || 'xMidYMid slice',\r\n        hideOnTransparent: (config && config.hideOnTransparent === false) ? false : true\r\n    };\r\n    this.globalData = {\r\n        _mdf: false,\r\n        frameNum: -1,\r\n        renderConfig: this.renderConfig\r\n    };\r\n    this.pendingElements = [];\r\n    this.elements = [];\r\n    this.threeDElements = [];\r\n    this.destroyed = false;\r\n    this.camera = null;\r\n    this.supports3d = true;\r\n    this.rendererType = 'html';\r\n\r\n}\r\n\r\nextendPrototype([BaseRenderer],HybridRenderer);\r\n\r\nHybridRenderer.prototype.buildItem = SVGRenderer.prototype.buildItem;\r\n\r\nHybridRenderer.prototype.checkPendingElements  = function(){\r\n    while(this.pendingElements.length){\r\n        var element = this.pendingElements.pop();\r\n        element.checkParenting();\r\n    }\r\n};\r\n\r\nHybridRenderer.prototype.appendElementInPos = function(element, pos){\r\n    var newDOMElement = element.getBaseElement();\r\n    if(!newDOMElement){\r\n        return;\r\n    }\r\n    var layer = this.layers[pos];\r\n    if(!layer.ddd || !this.supports3d){\r\n        if(this.threeDElements) {\r\n            this.addTo3dContainer(newDOMElement,pos);\r\n        } else {\r\n            var i = 0;\r\n            var nextDOMElement, nextLayer, tmpDOMElement;\r\n            while(i<pos){\r\n                if(this.elements[i] && this.elements[i]!== true && this.elements[i].getBaseElement){\r\n                    nextLayer = this.elements[i];\r\n                    tmpDOMElement = this.layers[i].ddd ? this.getThreeDContainerByPos(i) : nextLayer.getBaseElement();\r\n                    nextDOMElement = tmpDOMElement || nextDOMElement;\r\n                }\r\n                i += 1;\r\n            }\r\n            if(nextDOMElement){\r\n                if(!layer.ddd || !this.supports3d){\r\n                    this.layerElement.insertBefore(newDOMElement, nextDOMElement);\r\n                }\r\n            } else {\r\n                if(!layer.ddd || !this.supports3d){\r\n                    this.layerElement.appendChild(newDOMElement);\r\n                }\r\n            }\r\n        }\r\n        \r\n    } else {\r\n        this.addTo3dContainer(newDOMElement,pos);\r\n    }\r\n};\r\n\r\nHybridRenderer.prototype.createShape = function (data) {\r\n    if(!this.supports3d){\r\n        return new SVGShapeElement(data, this.globalData, this);\r\n    }\r\n    return new HShapeElement(data, this.globalData, this);\r\n};\r\n\r\nHybridRenderer.prototype.createText = function (data) {\r\n    if(!this.supports3d){\r\n        return new SVGTextElement(data, this.globalData, this);\r\n    }\r\n    return new HTextElement(data, this.globalData, this);\r\n};\r\n\r\nHybridRenderer.prototype.createCamera = function (data) {\r\n    this.camera = new HCameraElement(data, this.globalData, this);\r\n    return this.camera;\r\n};\r\n\r\nHybridRenderer.prototype.createImage = function (data) {\r\n    if(!this.supports3d){\r\n        return new IImageElement(data, this.globalData, this);\r\n    }\r\n    return new HImageElement(data, this.globalData, this);\r\n};\r\n\r\nHybridRenderer.prototype.createComp = function (data) {\r\n    if(!this.supports3d){\r\n        return new SVGCompElement(data, this.globalData, this);\r\n    }\r\n    return new HCompElement(data, this.globalData, this);\r\n\r\n};\r\n\r\nHybridRenderer.prototype.createSolid = function (data) {\r\n    if(!this.supports3d){\r\n        return new ISolidElement(data, this.globalData, this);\r\n    }\r\n    return new HSolidElement(data, this.globalData, this);\r\n};\r\n\r\nHybridRenderer.prototype.createNull = SVGRenderer.prototype.createNull;\r\n\r\nHybridRenderer.prototype.getThreeDContainerByPos = function(pos){\r\n    var i = 0, len = this.threeDElements.length;\r\n    while(i<len) {\r\n        if(this.threeDElements[i].startPos <= pos && this.threeDElements[i].endPos >= pos) {\r\n            return this.threeDElements[i].perspectiveElem;\r\n        }\r\n        i += 1;\r\n    }\r\n};\r\n\r\nHybridRenderer.prototype.createThreeDContainer = function(pos, type){\r\n    var perspectiveElem = createTag('div');\r\n    styleDiv(perspectiveElem);\r\n    var container = createTag('div');\r\n    styleDiv(container);\r\n    if(type === '3d') {\r\n        perspectiveElem.style.width = this.globalData.compSize.w+'px';\r\n        perspectiveElem.style.height = this.globalData.compSize.h+'px';\r\n        perspectiveElem.style.transformOrigin = perspectiveElem.style.mozTransformOrigin = perspectiveElem.style.webkitTransformOrigin = \"50% 50%\";\r\n        container.style.transform = container.style.webkitTransform = 'matrix3d(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1)';\r\n    }\r\n    \r\n    perspectiveElem.appendChild(container);\r\n    //this.resizerElem.appendChild(perspectiveElem);\r\n    var threeDContainerData = {\r\n        container:container,\r\n        perspectiveElem:perspectiveElem,\r\n        startPos: pos,\r\n        endPos: pos,\r\n        type: type\r\n    };\r\n    this.threeDElements.push(threeDContainerData);\r\n    return threeDContainerData;\r\n};\r\n\r\nHybridRenderer.prototype.build3dContainers = function(){\r\n    var i, len = this.layers.length;\r\n    var lastThreeDContainerData;\r\n    var currentContainer = '';\r\n    for(i=0;i<len;i+=1){\r\n        if(this.layers[i].ddd && this.layers[i].ty !== 3){\r\n            if(currentContainer !== '3d'){\r\n                currentContainer = '3d';\r\n                lastThreeDContainerData = this.createThreeDContainer(i,'3d');\r\n            }\r\n            lastThreeDContainerData.endPos = Math.max(lastThreeDContainerData.endPos,i);\r\n        } else {\r\n            if(currentContainer !== '2d'){\r\n                currentContainer = '2d';\r\n                lastThreeDContainerData = this.createThreeDContainer(i,'2d');\r\n            }\r\n            lastThreeDContainerData.endPos = Math.max(lastThreeDContainerData.endPos,i);\r\n        }\r\n    }\r\n    len = this.threeDElements.length;\r\n    for(i = len - 1; i >= 0; i --) {\r\n        this.resizerElem.appendChild(this.threeDElements[i].perspectiveElem);\r\n    }\r\n};\r\n\r\nHybridRenderer.prototype.addTo3dContainer = function(elem,pos){\r\n    var i = 0, len = this.threeDElements.length;\r\n    while(i<len){\r\n        if(pos <= this.threeDElements[i].endPos){\r\n            var j = this.threeDElements[i].startPos;\r\n            var nextElement;\r\n            while(j<pos){\r\n                if(this.elements[j] && this.elements[j].getBaseElement){\r\n                    nextElement = this.elements[j].getBaseElement();\r\n                }\r\n                j += 1;\r\n            }\r\n            if(nextElement){\r\n                this.threeDElements[i].container.insertBefore(elem, nextElement);\r\n            } else {\r\n                this.threeDElements[i].container.appendChild(elem);\r\n            }\r\n            break;\r\n        }\r\n        i += 1;\r\n    }\r\n};\r\n\r\nHybridRenderer.prototype.configAnimation = function(animData){\r\n    var resizerElem = createTag('div');\r\n    var wrapper = this.animationItem.wrapper;\r\n    resizerElem.style.width = animData.w+'px';\r\n    resizerElem.style.height = animData.h+'px';\r\n    this.resizerElem = resizerElem;\r\n    styleDiv(resizerElem);\r\n    resizerElem.style.transformStyle = resizerElem.style.webkitTransformStyle = resizerElem.style.mozTransformStyle = \"flat\";\r\n    if(this.renderConfig.className) {\r\n      resizerElem.setAttribute('class', this.renderConfig.className);\r\n    }\r\n    wrapper.appendChild(resizerElem);\r\n\r\n    resizerElem.style.overflow = 'hidden';\r\n    var svg = createNS('svg');\r\n    svg.setAttribute('width','1');\r\n    svg.setAttribute('height','1');\r\n    styleDiv(svg);\r\n    this.resizerElem.appendChild(svg);\r\n    var defs = createNS('defs');\r\n    svg.appendChild(defs);\r\n    this.data = animData;\r\n    //Mask animation\r\n    this.setupGlobalData(animData, svg);\r\n    this.globalData.defs = defs;\r\n    this.layers = animData.layers;\r\n    this.layerElement = this.resizerElem;\r\n    this.build3dContainers();\r\n    this.updateContainerSize();\r\n};\r\n\r\nHybridRenderer.prototype.destroy = function () {\r\n    this.animationItem.wrapper.innerHTML = '';\r\n    this.animationItem.container = null;\r\n    this.globalData.defs = null;\r\n    var i, len = this.layers ? this.layers.length : 0;\r\n    for (i = 0; i < len; i++) {\r\n        this.elements[i].destroy();\r\n    }\r\n    this.elements.length = 0;\r\n    this.destroyed = true;\r\n    this.animationItem = null;\r\n};\r\n\r\nHybridRenderer.prototype.updateContainerSize = function () {\r\n    var elementWidth = this.animationItem.wrapper.offsetWidth;\r\n    var elementHeight = this.animationItem.wrapper.offsetHeight;\r\n    var elementRel = elementWidth/elementHeight;\r\n    var animationRel = this.globalData.compSize.w/this.globalData.compSize.h;\r\n    var sx,sy,tx,ty;\r\n    if(animationRel>elementRel){\r\n        sx = elementWidth/(this.globalData.compSize.w);\r\n        sy = elementWidth/(this.globalData.compSize.w);\r\n        tx = 0;\r\n        ty = ((elementHeight-this.globalData.compSize.h*(elementWidth/this.globalData.compSize.w))/2);\r\n    }else{\r\n        sx = elementHeight/(this.globalData.compSize.h);\r\n        sy = elementHeight/(this.globalData.compSize.h);\r\n        tx = (elementWidth-this.globalData.compSize.w*(elementHeight/this.globalData.compSize.h))/2;\r\n        ty = 0;\r\n    }\r\n    this.resizerElem.style.transform = this.resizerElem.style.webkitTransform = 'matrix3d(' + sx + ',0,0,0,0,'+sy+',0,0,0,0,1,0,'+tx+','+ty+',0,1)';\r\n};\r\n\r\nHybridRenderer.prototype.renderFrame = SVGRenderer.prototype.renderFrame;\r\n\r\nHybridRenderer.prototype.hide = function(){\r\n    this.resizerElem.style.display = 'none';\r\n};\r\n\r\nHybridRenderer.prototype.show = function(){\r\n    this.resizerElem.style.display = 'block';\r\n};\r\n\r\nHybridRenderer.prototype.initItems = function(){\r\n    this.buildAllItems();\r\n    if(this.camera){\r\n        this.camera.setup();\r\n    } else {\r\n        var cWidth = this.globalData.compSize.w;\r\n        var cHeight = this.globalData.compSize.h;\r\n        var i, len = this.threeDElements.length;\r\n        for(i=0;i<len;i+=1){\r\n            this.threeDElements[i].perspectiveElem.style.perspective = this.threeDElements[i].perspectiveElem.style.webkitPerspective = Math.sqrt(Math.pow(cWidth,2) + Math.pow(cHeight,2)) + 'px';\r\n        }\r\n    }\r\n};\r\n\r\nHybridRenderer.prototype.searchExtraCompositions = function(assets){\r\n    var i, len = assets.length;\r\n    var floatingContainer = createTag('div');\r\n    for(i=0;i<len;i+=1){\r\n        if(assets[i].xt){\r\n            var comp = this.createComp(assets[i],floatingContainer,this.globalData.comp,null);\r\n            comp.initExpressions();\r\n            this.globalData.projectInterface.registerComposition(comp);\r\n        }\r\n    }\r\n};\r\n\r\nfunction MaskElement(data,element,globalData) {\r\n    this.data = data;\r\n    this.element = element;\r\n    this.globalData = globalData;\r\n    this.storedData = [];\r\n    this.masksProperties = this.data.masksProperties || [];\r\n    this.maskElement = null;\r\n    var defs = this.globalData.defs;\r\n    var i, len = this.masksProperties ? this.masksProperties.length : 0;\r\n    this.viewData = createSizedArray(len);\r\n    this.solidPath = '';\r\n\r\n\r\n    var path, properties = this.masksProperties;\r\n    var count = 0;\r\n    var currentMasks = [];\r\n    var j, jLen;\r\n    var layerId = createElementID();\r\n    var rect, expansor, feMorph,x;\r\n    var maskType = 'clipPath', maskRef = 'clip-path';\r\n    for (i = 0; i < len; i++) {\r\n        if((properties[i].mode !== 'a' && properties[i].mode !== 'n')|| properties[i].inv || properties[i].o.k !== 100 || properties[i].o.x){\r\n            maskType = 'mask';\r\n            maskRef = 'mask';\r\n        }\r\n\r\n        if((properties[i].mode == 's' || properties[i].mode == 'i') && count === 0){\r\n            rect = createNS( 'rect');\r\n            rect.setAttribute('fill', '#ffffff');\r\n            rect.setAttribute('width', this.element.comp.data.w || 0);\r\n            rect.setAttribute('height', this.element.comp.data.h || 0);\r\n            currentMasks.push(rect);\r\n        } else {\r\n            rect = null;\r\n        }\r\n\r\n        path = createNS( 'path');\r\n        if(properties[i].mode == 'n') {\r\n            // TODO move this to a factory or to a constructor\r\n            this.viewData[i] = {\r\n                op: PropertyFactory.getProp(this.element,properties[i].o,0,0.01,this.element),\r\n                prop: ShapePropertyFactory.getShapeProp(this.element,properties[i],3),\r\n                elem: path,\r\n                lastPath: ''\r\n            };\r\n            defs.appendChild(path);\r\n            continue;\r\n        }\r\n        count += 1;\r\n\r\n        path.setAttribute('fill', properties[i].mode === 's' ? '#000000':'#ffffff');\r\n        path.setAttribute('clip-rule','nonzero');\r\n        var filterID;\r\n\r\n        if (properties[i].x.k !== 0) {\r\n            maskType = 'mask';\r\n            maskRef = 'mask';\r\n            x = PropertyFactory.getProp(this.element,properties[i].x,0,null,this.element);\r\n            filterID = createElementID();\r\n            expansor = createNS('filter');\r\n            expansor.setAttribute('id',filterID);\r\n            feMorph = createNS('feMorphology');\r\n            feMorph.setAttribute('operator','erode');\r\n            feMorph.setAttribute('in','SourceGraphic');\r\n            feMorph.setAttribute('radius','0');\r\n            expansor.appendChild(feMorph);\r\n            defs.appendChild(expansor);\r\n            path.setAttribute('stroke', properties[i].mode === 's' ? '#000000':'#ffffff');\r\n        } else {\r\n            feMorph = null;\r\n            x = null;\r\n        }\r\n\r\n        // TODO move this to a factory or to a constructor\r\n        this.storedData[i] = {\r\n             elem: path,\r\n             x: x,\r\n             expan: feMorph,\r\n            lastPath: '',\r\n            lastOperator:'',\r\n            filterId:filterID,\r\n            lastRadius:0\r\n        };\r\n        if(properties[i].mode == 'i'){\r\n            jLen = currentMasks.length;\r\n            var g = createNS('g');\r\n            for(j=0;j<jLen;j+=1){\r\n                g.appendChild(currentMasks[j]);\r\n            }\r\n            var mask = createNS('mask');\r\n            mask.setAttribute('mask-type','alpha');\r\n            mask.setAttribute('id',layerId+'_'+count);\r\n            mask.appendChild(path);\r\n            defs.appendChild(mask);\r\n            g.setAttribute('mask','url(' + locationHref + '#'+layerId+'_'+count+')');\r\n\r\n            currentMasks.length = 0;\r\n            currentMasks.push(g);\r\n        }else{\r\n            currentMasks.push(path);\r\n        }\r\n        if(properties[i].inv && !this.solidPath){\r\n            this.solidPath = this.createLayerSolidPath();\r\n        }\r\n        // TODO move this to a factory or to a constructor\r\n        this.viewData[i] = {\r\n            elem: path,\r\n            lastPath: '',\r\n            op: PropertyFactory.getProp(this.element,properties[i].o,0,0.01,this.element),\r\n            prop:ShapePropertyFactory.getShapeProp(this.element,properties[i],3),\r\n            invRect: rect\r\n        };\r\n        if(!this.viewData[i].prop.k){\r\n            this.drawPath(properties[i],this.viewData[i].prop.v,this.viewData[i]);\r\n        }\r\n    }\r\n\r\n    this.maskElement = createNS( maskType);\r\n\r\n    len = currentMasks.length;\r\n    for(i=0;i<len;i+=1){\r\n        this.maskElement.appendChild(currentMasks[i]);\r\n    }\r\n\r\n    if(count > 0){\r\n        this.maskElement.setAttribute('id', layerId);\r\n        this.element.maskedElement.setAttribute(maskRef, \"url(\" + locationHref + \"#\" + layerId + \")\");\r\n        defs.appendChild(this.maskElement);\r\n    }\r\n    if (this.viewData.length) {\r\n        this.element.addRenderableComponent(this);\r\n    }\r\n\r\n}\r\n\r\nMaskElement.prototype.getMaskProperty = function(pos){\r\n    return this.viewData[pos].prop;\r\n};\r\n\r\nMaskElement.prototype.renderFrame = function (isFirstFrame) {\r\n    var finalMat = this.element.finalTransform.mat;\r\n    var i, len = this.masksProperties.length;\r\n    for (i = 0; i < len; i++) {\r\n        if(this.viewData[i].prop._mdf || isFirstFrame){\r\n            this.drawPath(this.masksProperties[i],this.viewData[i].prop.v,this.viewData[i]);\r\n        }\r\n        if(this.viewData[i].op._mdf || isFirstFrame){\r\n            this.viewData[i].elem.setAttribute('fill-opacity',this.viewData[i].op.v);\r\n        }\r\n        if(this.masksProperties[i].mode !== 'n'){\r\n            if(this.viewData[i].invRect && (this.element.finalTransform.mProp._mdf || isFirstFrame)){\r\n                this.viewData[i].invRect.setAttribute('x', -finalMat.props[12]);\r\n                this.viewData[i].invRect.setAttribute('y', -finalMat.props[13]);\r\n            }\r\n            if(this.storedData[i].x && (this.storedData[i].x._mdf || isFirstFrame)){\r\n                var feMorph = this.storedData[i].expan;\r\n                if(this.storedData[i].x.v < 0){\r\n                    if(this.storedData[i].lastOperator !== 'erode'){\r\n                        this.storedData[i].lastOperator = 'erode';\r\n                        this.storedData[i].elem.setAttribute('filter','url(' + locationHref + '#'+this.storedData[i].filterId+')');\r\n                    }\r\n                    feMorph.setAttribute('radius',-this.storedData[i].x.v);\r\n                }else{\r\n                    if(this.storedData[i].lastOperator !== 'dilate'){\r\n                        this.storedData[i].lastOperator = 'dilate';\r\n                        this.storedData[i].elem.setAttribute('filter',null);\r\n                    }\r\n                    this.storedData[i].elem.setAttribute('stroke-width', this.storedData[i].x.v*2);\r\n\r\n                }\r\n            }\r\n        }\r\n    }\r\n};\r\n\r\nMaskElement.prototype.getMaskelement = function () {\r\n    return this.maskElement;\r\n};\r\n\r\nMaskElement.prototype.createLayerSolidPath = function(){\r\n    var path = 'M0,0 ';\r\n    path += ' h' + this.globalData.compSize.w ;\r\n    path += ' v' + this.globalData.compSize.h ;\r\n    path += ' h-' + this.globalData.compSize.w ;\r\n    path += ' v-' + this.globalData.compSize.h + ' ';\r\n    return path;\r\n};\r\n\r\nMaskElement.prototype.drawPath = function(pathData,pathNodes,viewData){\r\n    var pathString = \" M\"+pathNodes.v[0][0]+','+pathNodes.v[0][1];\r\n    var i, len;\r\n    len = pathNodes._length;\r\n    for(i=1;i<len;i+=1){\r\n        //pathString += \" C\"+pathNodes.o[i-1][0]+','+pathNodes.o[i-1][1] + \" \"+pathNodes.i[i][0]+','+pathNodes.i[i][1] + \" \"+pathNodes.v[i][0]+','+pathNodes.v[i][1];\r\n        pathString += \" C\"+pathNodes.o[i-1][0]+','+pathNodes.o[i-1][1] + \" \"+pathNodes.i[i][0]+','+pathNodes.i[i][1] + \" \"+pathNodes.v[i][0]+','+pathNodes.v[i][1];\r\n    }\r\n        //pathString += \" C\"+pathNodes.o[i-1][0]+','+pathNodes.o[i-1][1] + \" \"+pathNodes.i[0][0]+','+pathNodes.i[0][1] + \" \"+pathNodes.v[0][0]+','+pathNodes.v[0][1];\r\n    if(pathNodes.c && len > 1){\r\n        pathString += \" C\"+pathNodes.o[i-1][0]+','+pathNodes.o[i-1][1] + \" \"+pathNodes.i[0][0]+','+pathNodes.i[0][1] + \" \"+pathNodes.v[0][0]+','+pathNodes.v[0][1];\r\n    }\r\n    //pathNodes.__renderedString = pathString;\r\n\r\n    if(viewData.lastPath !== pathString){\r\n        var pathShapeValue = '';\r\n        if(viewData.elem){\r\n            if(pathNodes.c){\r\n                pathShapeValue = pathData.inv ? this.solidPath + pathString : pathString;\r\n            }\r\n            viewData.elem.setAttribute('d',pathShapeValue);\r\n        }\r\n        viewData.lastPath = pathString;\r\n    }\r\n};\r\n\r\nMaskElement.prototype.destroy = function(){\r\n    this.element = null;\r\n    this.globalData = null;\r\n    this.maskElement = null;\r\n    this.data = null;\r\n    this.masksProperties = null;\r\n};\r\n\r\n/**\r\n * @file \r\n * Handles AE's layer parenting property.\r\n *\r\n */\r\n\r\nfunction HierarchyElement(){}\r\n\r\nHierarchyElement.prototype = {\r\n\t/**\r\n     * @function \r\n     * Initializes hierarchy properties\r\n     *\r\n     */\r\n\tinitHierarchy: function() {\r\n\t\t//element's parent list\r\n\t    this.hierarchy = [];\r\n\t    //if element is parent of another layer _isParent will be true\r\n\t    this._isParent = false;\r\n\t    this.checkParenting();\r\n\t},\r\n\t/**\r\n     * @function \r\n     * Sets layer's hierarchy.\r\n     * @param {array} hierarch\r\n     * layer's parent list\r\n     *\r\n     */ \r\n\tsetHierarchy: function(hierarchy){\r\n\t    this.hierarchy = hierarchy;\r\n\t},\r\n\t/**\r\n     * @function \r\n     * Sets layer as parent.\r\n     *\r\n     */ \r\n\tsetAsParent: function() {\r\n\t    this._isParent = true;\r\n\t},\r\n\t/**\r\n     * @function \r\n     * Searches layer's parenting chain\r\n     *\r\n     */ \r\n\tcheckParenting: function(){\r\n\t    if (this.data.parent !== undefined){\r\n\t        this.comp.buildElementParenting(this, this.data.parent, []);\r\n\t    }\r\n\t}\r\n};\r\n/**\r\n * @file \r\n * Handles element's layer frame update.\r\n * Checks layer in point and out point\r\n *\r\n */\r\n\r\nfunction FrameElement(){}\r\n\r\nFrameElement.prototype = {\r\n    /**\r\n     * @function \r\n     * Initializes frame related properties.\r\n     *\r\n     */\r\n    initFrame: function(){\r\n        //set to true when inpoint is rendered\r\n        this._isFirstFrame = false;\r\n        //list of animated properties\r\n        this.dynamicProperties = [];\r\n        // If layer has been modified in current tick this will be true\r\n        this._mdf = false;\r\n    },\r\n    /**\r\n     * @function \r\n     * Calculates all dynamic values\r\n     *\r\n     * @param {number} num\r\n     * current frame number in Layer's time\r\n     * @param {boolean} isVisible\r\n     * if layers is currently in range\r\n     * \r\n     */\r\n    prepareProperties: function(num, isVisible) {\r\n        var i, len = this.dynamicProperties.length;\r\n        for (i = 0;i < len; i += 1) {\r\n            if (isVisible || (this._isParent && this.dynamicProperties[i].propType === 'transform')) {\r\n                this.dynamicProperties[i].getValue();\r\n                if (this.dynamicProperties[i]._mdf) {\r\n                    this.globalData._mdf = true;\r\n                    this._mdf = true;\r\n                }\r\n            }\r\n        }\r\n    },\r\n    addDynamicProperty: function(prop) {\r\n        if(this.dynamicProperties.indexOf(prop) === -1) {\r\n            this.dynamicProperties.push(prop);\r\n        }\r\n    }\r\n};\r\nfunction TransformElement(){}\r\n\r\nTransformElement.prototype = {\r\n    initTransform: function() {\r\n        this.finalTransform = {\r\n            mProp: this.data.ks ? TransformPropertyFactory.getTransformProperty(this, this.data.ks, this) : {o:0},\r\n            _matMdf: false,\r\n            _opMdf: false,\r\n            mat: new Matrix()\r\n        };\r\n        if (this.data.ao) {\r\n            this.finalTransform.mProp.autoOriented = true;\r\n        }\r\n\r\n        //TODO: check TYPE 11: Guided elements\r\n        if (this.data.ty !== 11) {\r\n            //this.createElements();\r\n        }\r\n    },\r\n    renderTransform: function() {\r\n\r\n        this.finalTransform._opMdf = this.finalTransform.mProp.o._mdf || this._isFirstFrame;\r\n        this.finalTransform._matMdf = this.finalTransform.mProp._mdf || this._isFirstFrame;\r\n\r\n        if (this.hierarchy) {\r\n            var mat;\r\n            var finalMat = this.finalTransform.mat;\r\n            var i = 0, len = this.hierarchy.length;\r\n            //Checking if any of the transformation matrices in the hierarchy chain has changed.\r\n            if (!this.finalTransform._matMdf) {\r\n                while (i < len) {\r\n                    if (this.hierarchy[i].finalTransform.mProp._mdf) {\r\n                        this.finalTransform._matMdf = true;\r\n                        break;\r\n                    }\r\n                    i += 1;\r\n                }\r\n            }\r\n            \r\n            if (this.finalTransform._matMdf) {\r\n                mat = this.finalTransform.mProp.v.props;\r\n                finalMat.cloneFromProps(mat);\r\n                for (i = 0; i < len; i += 1) {\r\n                    mat = this.hierarchy[i].finalTransform.mProp.v.props;\r\n                    finalMat.transform(mat[0], mat[1], mat[2], mat[3], mat[4], mat[5], mat[6], mat[7], mat[8], mat[9], mat[10], mat[11], mat[12], mat[13], mat[14], mat[15]);\r\n                }\r\n            }\r\n        }\r\n    },\r\n    globalToLocal: function(pt) {\r\n        var transforms = [];\r\n        transforms.push(this.finalTransform);\r\n        var flag = true;\r\n        var comp = this.comp;\r\n        while (flag) {\r\n            if (comp.finalTransform) {\r\n                if (comp.data.hasMask) {\r\n                    transforms.splice(0, 0, comp.finalTransform);\r\n                }\r\n                comp = comp.comp;\r\n            } else {\r\n                flag = false;\r\n            }\r\n        }\r\n        var i, len = transforms.length,ptNew;\r\n        for (i = 0; i < len; i += 1) {\r\n            ptNew = transforms[i].mat.applyToPointArray(0, 0, 0);\r\n            //ptNew = transforms[i].mat.applyToPointArray(pt[0],pt[1],pt[2]);\r\n            pt = [pt[0] - ptNew[0], pt[1] - ptNew[1], 0];\r\n        }\r\n        return pt;\r\n    },\r\n    mHelper: new Matrix()\r\n};\r\nfunction RenderableElement(){\r\n\r\n}\r\n\r\nRenderableElement.prototype = {\r\n    initRenderable: function() {\r\n        //layer's visibility related to inpoint and outpoint. Rename isVisible to isInRange\r\n        this.isInRange = false;\r\n        //layer's display state\r\n        this.hidden = false;\r\n        // If layer's transparency equals 0, it can be hidden\r\n        this.isTransparent = false;\r\n        //list of animated components\r\n        this.renderableComponents = [];\r\n    },\r\n    addRenderableComponent: function(component) {\r\n        if(this.renderableComponents.indexOf(component) === -1) {\r\n            this.renderableComponents.push(component);\r\n        }\r\n    },\r\n    removeRenderableComponent: function(component) {\r\n        if(this.renderableComponents.indexOf(component) !== -1) {\r\n            this.renderableComponents.splice(this.renderableComponents.indexOf(component), 1);\r\n        }\r\n    },\r\n    prepareRenderableFrame: function(num) {\r\n        this.checkLayerLimits(num);\r\n    },\r\n    checkTransparency: function(){\r\n        if(this.finalTransform.mProp.o.v <= 0) {\r\n            if(!this.isTransparent && this.globalData.renderConfig.hideOnTransparent){\r\n                this.isTransparent = true;\r\n                this.hide();\r\n            }\r\n        } else if(this.isTransparent) {\r\n            this.isTransparent = false;\r\n            this.show();\r\n        }\r\n    },\r\n    /**\r\n     * @function \r\n     * Initializes frame related properties.\r\n     *\r\n     * @param {number} num\r\n     * current frame number in Layer's time\r\n     * \r\n     */\r\n    checkLayerLimits: function(num) {\r\n        if(this.data.ip - this.data.st <= num && this.data.op - this.data.st > num)\r\n        {\r\n            if(this.isInRange !== true){\r\n                this.globalData._mdf = true;\r\n                this._mdf = true;\r\n                this.isInRange = true;\r\n                this.show();\r\n            }\r\n        } else {\r\n            if(this.isInRange !== false){\r\n                this.globalData._mdf = true;\r\n                this.isInRange = false;\r\n                this.hide();\r\n            }\r\n        }\r\n    },\r\n    renderRenderable: function() {\r\n        var i, len = this.renderableComponents.length;\r\n        for(i = 0; i < len; i += 1) {\r\n            this.renderableComponents[i].renderFrame(this._isFirstFrame);\r\n        }\r\n        /*this.maskManager.renderFrame(this.finalTransform.mat);\r\n        this.renderableEffectsManager.renderFrame(this._isFirstFrame);*/\r\n    },\r\n    sourceRectAtTime: function(){\r\n        return {\r\n            top:0,\r\n            left:0,\r\n            width:100,\r\n            height:100\r\n        };\r\n    },\r\n    getLayerSize: function(){\r\n        if(this.data.ty === 5){\r\n            return {w:this.data.textData.width,h:this.data.textData.height};\r\n        }else{\r\n            return {w:this.data.width,h:this.data.height};\r\n        }\r\n    }\r\n};\r\nfunction RenderableDOMElement() {}\r\n\r\n(function(){\r\n    var _prototype = {\r\n        initElement: function(data,globalData,comp) {\r\n            this.initFrame();\r\n            this.initBaseData(data, globalData, comp);\r\n            this.initTransform(data, globalData, comp);\r\n            this.initHierarchy();\r\n            this.initRenderable();\r\n            this.initRendererElement();\r\n            this.createContainerElements();\r\n            this.createRenderableComponents();\r\n            this.createContent();\r\n            this.hide();\r\n        },\r\n        hide: function(){\r\n            if (!this.hidden && (!this.isInRange || this.isTransparent)) {\r\n                var elem = this.baseElement || this.layerElement;\r\n                elem.style.display = 'none';\r\n                this.hidden = true;\r\n            }\r\n        },\r\n        show: function(){\r\n            if (this.isInRange && !this.isTransparent){\r\n                if (!this.data.hd) {\r\n                    var elem = this.baseElement || this.layerElement;\r\n                    elem.style.display = 'block';\r\n                }\r\n                this.hidden = false;\r\n                this._isFirstFrame = true;\r\n            }\r\n        },\r\n        renderFrame: function() {\r\n            //If it is exported as hidden (data.hd === true) no need to render\r\n            //If it is not visible no need to render\r\n            if (this.data.hd || this.hidden) {\r\n                return;\r\n            }\r\n            this.renderTransform();\r\n            this.renderRenderable();\r\n            this.renderElement();\r\n            this.renderInnerContent();\r\n            if (this._isFirstFrame) {\r\n                this._isFirstFrame = false;\r\n            }\r\n        },\r\n        renderInnerContent: function() {},\r\n        prepareFrame: function(num) {\r\n            this._mdf = false;\r\n            this.prepareRenderableFrame(num);\r\n            this.prepareProperties(num, this.isInRange);\r\n            this.checkTransparency();\r\n        },\r\n        destroy: function(){\r\n            this.innerElem =  null;\r\n            this.destroyBaseElement();\r\n        }\r\n    };\r\n    extendPrototype([RenderableElement, createProxyFunction(_prototype)], RenderableDOMElement);\r\n}());\r\nfunction ProcessedElement(element, position) {\r\n\tthis.elem = element;\r\n\tthis.pos = position;\r\n}\r\nfunction SVGStyleData(data, level) {\r\n\tthis.data = data;\r\n\tthis.type = data.ty;\r\n\tthis.d = '';\r\n\tthis.lvl = level;\r\n\tthis._mdf = false;\r\n\tthis.closed = data.hd === true;\r\n\tthis.pElem = createNS('path');\r\n\tthis.msElem = null;\r\n}\r\n\r\nSVGStyleData.prototype.reset = function() {\r\n\tthis.d = '';\r\n\tthis._mdf = false;\r\n};\r\nfunction SVGShapeData(transformers, level, shape) {\r\n    this.caches = [];\r\n    this.styles = [];\r\n    this.transformers = transformers;\r\n    this.lStr = '';\r\n    this.sh = shape;\r\n    this.lvl = level;\r\n    //TODO find if there are some cases where _isAnimated can be false. \r\n    // For now, since shapes add up with other shapes. They have to be calculated every time.\r\n    // One way of finding out is checking if all styles associated to this shape depend only of this shape\r\n    this._isAnimated = !!shape.k;\r\n    // TODO: commenting this for now since all shapes are animated\r\n    var i = 0, len = transformers.length;\r\n    while(i < len) {\r\n    \tif(transformers[i].mProps.dynamicProperties.length) {\r\n    \t\tthis._isAnimated = true;\r\n    \t\tbreak;\r\n    \t}\r\n    \ti += 1;\r\n    }\r\n}\r\n\r\nSVGShapeData.prototype.setAsAnimated = function() {\r\n    this._isAnimated = true;\r\n}\r\nfunction SVGTransformData(mProps, op, container) {\r\n\tthis.transform = {\r\n\t\tmProps: mProps,\r\n\t\top: op,\r\n\t\tcontainer: container\r\n\t};\r\n\tthis.elements = [];\r\n    this._isAnimated = this.transform.mProps.dynamicProperties.length || this.transform.op.effectsSequence.length;\r\n}\r\nfunction SVGStrokeStyleData(elem, data, styleOb){\r\n\tthis.initDynamicPropertyContainer(elem);\r\n\tthis.getValue = this.iterateDynamicProperties;\r\n\tthis.o = PropertyFactory.getProp(elem,data.o,0,0.01,this);\r\n\tthis.w = PropertyFactory.getProp(elem,data.w,0,null,this);\r\n\tthis.d = new DashProperty(elem,data.d||{},'svg',this);\r\n\tthis.c = PropertyFactory.getProp(elem,data.c,1,255,this);\r\n\tthis.style = styleOb;\r\n    this._isAnimated = !!this._isAnimated;\r\n}\r\n\r\nextendPrototype([DynamicPropertyContainer], SVGStrokeStyleData);\r\nfunction SVGFillStyleData(elem, data, styleOb){\r\n\tthis.initDynamicPropertyContainer(elem);\r\n\tthis.getValue = this.iterateDynamicProperties;\r\n\tthis.o = PropertyFactory.getProp(elem,data.o,0,0.01,this);\r\n\tthis.c = PropertyFactory.getProp(elem,data.c,1,255,this);\r\n\tthis.style = styleOb;\r\n}\r\n\r\nextendPrototype([DynamicPropertyContainer], SVGFillStyleData);\r\nfunction SVGGradientFillStyleData(elem, data, styleOb){\r\n    this.initDynamicPropertyContainer(elem);\r\n    this.getValue = this.iterateDynamicProperties;\r\n    this.initGradientData(elem, data, styleOb);\r\n}\r\n\r\nSVGGradientFillStyleData.prototype.initGradientData = function(elem, data, styleOb){\r\n    this.o = PropertyFactory.getProp(elem,data.o,0,0.01,this);\r\n    this.s = PropertyFactory.getProp(elem,data.s,1,null,this);\r\n    this.e = PropertyFactory.getProp(elem,data.e,1,null,this);\r\n    this.h = PropertyFactory.getProp(elem,data.h||{k:0},0,0.01,this);\r\n    this.a = PropertyFactory.getProp(elem,data.a||{k:0},0,degToRads,this);\r\n    this.g = new GradientProperty(elem,data.g,this);\r\n    this.style = styleOb;\r\n    this.stops = [];\r\n    this.setGradientData(styleOb.pElem, data);\r\n    this.setGradientOpacity(data, styleOb);\r\n    this._isAnimated = !!this._isAnimated;\r\n\r\n};\r\n\r\nSVGGradientFillStyleData.prototype.setGradientData = function(pathElement,data){\r\n\r\n    var gradientId = createElementID();\r\n    var gfill = createNS(data.t === 1 ? 'linearGradient' : 'radialGradient');\r\n    gfill.setAttribute('id',gradientId);\r\n    gfill.setAttribute('spreadMethod','pad');\r\n    gfill.setAttribute('gradientUnits','userSpaceOnUse');\r\n    var stops = [];\r\n    var stop, j, jLen;\r\n    jLen = data.g.p*4;\r\n    for(j=0;j<jLen;j+=4){\r\n        stop = createNS('stop');\r\n        gfill.appendChild(stop);\r\n        stops.push(stop);\r\n    }\r\n    pathElement.setAttribute( data.ty === 'gf' ? 'fill':'stroke','url(' + locationHref + '#'+gradientId+')');\r\n    \r\n    this.gf = gfill;\r\n    this.cst = stops;\r\n};\r\n\r\nSVGGradientFillStyleData.prototype.setGradientOpacity = function(data, styleOb){\r\n    if(this.g._hasOpacity && !this.g._collapsable){\r\n        var stop, j, jLen;\r\n        var mask = createNS(\"mask\");\r\n        var maskElement = createNS( 'path');\r\n        mask.appendChild(maskElement);\r\n        var opacityId = createElementID();\r\n        var maskId = createElementID();\r\n        mask.setAttribute('id',maskId);\r\n        var opFill = createNS(data.t === 1 ? 'linearGradient' : 'radialGradient');\r\n        opFill.setAttribute('id',opacityId);\r\n        opFill.setAttribute('spreadMethod','pad');\r\n        opFill.setAttribute('gradientUnits','userSpaceOnUse');\r\n        jLen = data.g.k.k[0].s ? data.g.k.k[0].s.length : data.g.k.k.length;\r\n        var stops = this.stops;\r\n        for(j=data.g.p*4;j<jLen;j+=2){\r\n            stop = createNS('stop');\r\n            stop.setAttribute('stop-color','rgb(255,255,255)');\r\n            opFill.appendChild(stop);\r\n            stops.push(stop);\r\n        }\r\n        maskElement.setAttribute( data.ty === 'gf' ? 'fill':'stroke','url(' + locationHref + '#'+opacityId+')');\r\n        this.of = opFill;\r\n        this.ms = mask;\r\n        this.ost = stops;\r\n        this.maskId = maskId;\r\n        styleOb.msElem = maskElement;\r\n    }\r\n};\r\n\r\nextendPrototype([DynamicPropertyContainer], SVGGradientFillStyleData);\r\nfunction SVGGradientStrokeStyleData(elem, data, styleOb){\r\n\tthis.initDynamicPropertyContainer(elem);\r\n\tthis.getValue = this.iterateDynamicProperties;\r\n\tthis.w = PropertyFactory.getProp(elem,data.w,0,null,this);\r\n\tthis.d = new DashProperty(elem,data.d||{},'svg',this);\r\n    this.initGradientData(elem, data, styleOb);\r\n    this._isAnimated = !!this._isAnimated;\r\n}\r\n\r\nextendPrototype([SVGGradientFillStyleData, DynamicPropertyContainer], SVGGradientStrokeStyleData);\r\nfunction ShapeGroupData() {\r\n\tthis.it = [];\r\n    this.prevViewData = [];\r\n    this.gr = createNS('g');\r\n}\r\nvar SVGElementsRenderer = (function() {\r\n\tvar _identityMatrix = new Matrix();\r\n\tvar _matrixHelper = new Matrix();\r\n\r\n\tvar ob = {\r\n\t\tcreateRenderFunction: createRenderFunction\r\n\t}\r\n\r\n\tfunction createRenderFunction(data) {\r\n\t    var ty = data.ty;\r\n\t    switch(data.ty) {\r\n\t        case 'fl':\r\n\t        return renderFill;\r\n\t        case 'gf':\r\n\t        return renderGradient;\r\n\t        case 'gs':\r\n\t        return renderGradientStroke;\r\n\t        case 'st':\r\n\t        return renderStroke;\r\n\t        case 'sh':\r\n\t        case 'el':\r\n\t        case 'rc':\r\n\t        case 'sr':\r\n\t        return renderPath;\r\n\t        case 'tr':\r\n\t        return renderContentTransform;\r\n\t    }\r\n\t}\r\n\r\n\tfunction renderContentTransform(styleData, itemData, isFirstFrame) {\r\n\t    if(isFirstFrame || itemData.transform.op._mdf){\r\n\t        itemData.transform.container.setAttribute('opacity',itemData.transform.op.v);\r\n\t    }\r\n\t    if(isFirstFrame || itemData.transform.mProps._mdf){\r\n\t        itemData.transform.container.setAttribute('transform',itemData.transform.mProps.v.to2dCSS());\r\n\t    }\r\n\t}\r\n\r\n\tfunction renderPath(styleData, itemData, isFirstFrame) {\r\n\t    var j, jLen,pathStringTransformed,redraw,pathNodes,l, lLen = itemData.styles.length;\r\n\t    var lvl = itemData.lvl;\r\n\t    var paths, mat, props, iterations, k;\r\n\t    for(l=0;l<lLen;l+=1){\r\n\t        redraw = itemData.sh._mdf || isFirstFrame;\r\n\t        if(itemData.styles[l].lvl < lvl){\r\n\t            mat = _matrixHelper.reset();\r\n\t            iterations = lvl - itemData.styles[l].lvl;\r\n\t            k = itemData.transformers.length-1;\r\n\t            while(!redraw && iterations > 0) {\r\n\t                redraw = itemData.transformers[k].mProps._mdf || redraw;\r\n\t                iterations --;\r\n\t                k --;\r\n\t            }\r\n\t            if(redraw) {\r\n\t                iterations = lvl - itemData.styles[l].lvl;\r\n\t                k = itemData.transformers.length-1;\r\n\t                while(iterations > 0) {\r\n\t                    props = itemData.transformers[k].mProps.v.props;\r\n\t                    mat.transform(props[0],props[1],props[2],props[3],props[4],props[5],props[6],props[7],props[8],props[9],props[10],props[11],props[12],props[13],props[14],props[15]);\r\n\t                    iterations --;\r\n\t                    k --;\r\n\t                }\r\n\t            }\r\n\t        } else {\r\n\t            mat = _identityMatrix;\r\n\t        }\r\n\t        paths = itemData.sh.paths;\r\n\t        jLen = paths._length;\r\n\t        if(redraw){\r\n\t            pathStringTransformed = '';\r\n\t            for(j=0;j<jLen;j+=1){\r\n\t                pathNodes = paths.shapes[j];\r\n\t                if(pathNodes && pathNodes._length){\r\n\t                    pathStringTransformed += buildShapeString(pathNodes, pathNodes._length, pathNodes.c, mat);\r\n\t                }\r\n\t            }\r\n\t            itemData.caches[l] = pathStringTransformed;\r\n\t        } else {\r\n\t            pathStringTransformed = itemData.caches[l];\r\n\t        }\r\n\t        itemData.styles[l].d += styleData.hd === true ? '' : pathStringTransformed;\r\n\t        itemData.styles[l]._mdf = redraw || itemData.styles[l]._mdf;\r\n\t    }\r\n\t}\r\n\r\n\tfunction renderFill (styleData,itemData, isFirstFrame){\r\n\t    var styleElem = itemData.style;\r\n\r\n\t    if(itemData.c._mdf || isFirstFrame){\r\n\t        styleElem.pElem.setAttribute('fill','rgb('+bm_floor(itemData.c.v[0])+','+bm_floor(itemData.c.v[1])+','+bm_floor(itemData.c.v[2])+')');\r\n\t    }\r\n\t    if(itemData.o._mdf || isFirstFrame){\r\n\t        styleElem.pElem.setAttribute('fill-opacity',itemData.o.v);\r\n\t    }\r\n\t};\r\n\r\n\tfunction renderGradientStroke (styleData, itemData, isFirstFrame) {\r\n\t    renderGradient(styleData, itemData, isFirstFrame);\r\n\t    renderStroke(styleData, itemData, isFirstFrame);\r\n\t}\r\n\r\n\tfunction renderGradient(styleData, itemData, isFirstFrame) {\r\n\t    var gfill = itemData.gf;\r\n\t    var hasOpacity = itemData.g._hasOpacity;\r\n\t    var pt1 = itemData.s.v, pt2 = itemData.e.v;\r\n\r\n\t    if (itemData.o._mdf || isFirstFrame) {\r\n\t        var attr = styleData.ty === 'gf' ? 'fill-opacity' : 'stroke-opacity';\r\n\t        itemData.style.pElem.setAttribute(attr, itemData.o.v);\r\n\t    }\r\n\t    if (itemData.s._mdf || isFirstFrame) {\r\n\t        var attr1 = styleData.t === 1 ? 'x1' : 'cx';\r\n\t        var attr2 = attr1 === 'x1' ? 'y1' : 'cy';\r\n\t        gfill.setAttribute(attr1, pt1[0]);\r\n\t        gfill.setAttribute(attr2, pt1[1]);\r\n\t        if (hasOpacity && !itemData.g._collapsable) {\r\n\t            itemData.of.setAttribute(attr1, pt1[0]);\r\n\t            itemData.of.setAttribute(attr2, pt1[1]);\r\n\t        }\r\n\t    }\r\n\t    var stops, i, len, stop;\r\n\t    if (itemData.g._cmdf || isFirstFrame) {\r\n\t        stops = itemData.cst;\r\n\t        var cValues = itemData.g.c;\r\n\t        len = stops.length;\r\n\t        for (i = 0; i < len; i += 1){\r\n\t            stop = stops[i];\r\n\t            stop.setAttribute('offset', cValues[i * 4] + '%');\r\n\t            stop.setAttribute('stop-color','rgb('+ cValues[i * 4 + 1] + ',' + cValues[i * 4 + 2] + ','+cValues[i * 4 + 3] + ')');\r\n\t        }\r\n\t    }\r\n\t    if (hasOpacity && (itemData.g._omdf || isFirstFrame)) {\r\n\t        var oValues = itemData.g.o;\r\n\t        if(itemData.g._collapsable) {\r\n\t            stops = itemData.cst;\r\n\t        } else {\r\n\t            stops = itemData.ost;\r\n\t        }\r\n\t        len = stops.length;\r\n\t        for (i = 0; i < len; i += 1) {\r\n\t            stop = stops[i];\r\n\t            if(!itemData.g._collapsable) {\r\n\t                stop.setAttribute('offset', oValues[i * 2] + '%');\r\n\t            }\r\n\t            stop.setAttribute('stop-opacity', oValues[i * 2 + 1]);\r\n\t        }\r\n\t    }\r\n\t    if (styleData.t === 1) {\r\n\t        if (itemData.e._mdf  || isFirstFrame) {\r\n\t            gfill.setAttribute('x2', pt2[0]);\r\n\t            gfill.setAttribute('y2', pt2[1]);\r\n\t            if (hasOpacity && !itemData.g._collapsable) {\r\n\t                itemData.of.setAttribute('x2', pt2[0]);\r\n\t                itemData.of.setAttribute('y2', pt2[1]);\r\n\t            }\r\n\t        }\r\n\t    } else {\r\n\t        var rad;\r\n\t        if (itemData.s._mdf || itemData.e._mdf || isFirstFrame) {\r\n\t            rad = Math.sqrt(Math.pow(pt1[0] - pt2[0], 2) + Math.pow(pt1[1] - pt2[1], 2));\r\n\t            gfill.setAttribute('r', rad);\r\n\t            if(hasOpacity && !itemData.g._collapsable){\r\n\t                itemData.of.setAttribute('r', rad);\r\n\t            }\r\n\t        }\r\n\t        if (itemData.e._mdf || itemData.h._mdf || itemData.a._mdf || isFirstFrame) {\r\n\t            if (!rad) {\r\n\t                rad = Math.sqrt(Math.pow(pt1[0] - pt2[0], 2) + Math.pow(pt1[1] - pt2[1], 2));\r\n\t            }\r\n\t            var ang = Math.atan2(pt2[1] - pt1[1], pt2[0] - pt1[0]);\r\n\r\n\t            var percent = itemData.h.v >= 1 ? 0.99 : itemData.h.v <= -1 ? -0.99: itemData.h.v;\r\n\t            var dist = rad * percent;\r\n\t            var x = Math.cos(ang + itemData.a.v) * dist + pt1[0];\r\n\t            var y = Math.sin(ang + itemData.a.v) * dist + pt1[1];\r\n\t            gfill.setAttribute('fx', x);\r\n\t            gfill.setAttribute('fy', y);\r\n\t            if (hasOpacity && !itemData.g._collapsable) {\r\n\t                itemData.of.setAttribute('fx', x);\r\n\t                itemData.of.setAttribute('fy', y);\r\n\t            }\r\n\t        }\r\n\t        //gfill.setAttribute('fy','200');\r\n\t    }\r\n\t};\r\n\r\n\tfunction renderStroke(styleData, itemData, isFirstFrame) {\r\n\t    var styleElem = itemData.style;\r\n\t    var d = itemData.d;\r\n\t    if (d && (d._mdf || isFirstFrame) && d.dashStr) {\r\n\t        styleElem.pElem.setAttribute('stroke-dasharray', d.dashStr);\r\n\t        styleElem.pElem.setAttribute('stroke-dashoffset', d.dashoffset[0]);\r\n\t    }\r\n\t    if(itemData.c && (itemData.c._mdf || isFirstFrame)){\r\n\t        styleElem.pElem.setAttribute('stroke','rgb(' + bm_floor(itemData.c.v[0]) + ',' + bm_floor(itemData.c.v[1]) + ',' + bm_floor(itemData.c.v[2]) + ')');\r\n\t    }\r\n\t    if(itemData.o._mdf || isFirstFrame){\r\n\t        styleElem.pElem.setAttribute('stroke-opacity', itemData.o.v);\r\n\t    }\r\n\t    if(itemData.w._mdf || isFirstFrame){\r\n\t        styleElem.pElem.setAttribute('stroke-width', itemData.w.v);\r\n\t        if(styleElem.msElem){\r\n\t            styleElem.msElem.setAttribute('stroke-width', itemData.w.v);\r\n\t        }\r\n\t    }\r\n\t};\r\n\r\n\treturn ob;\r\n}())\r\nfunction ShapeTransformManager() {\r\n\tthis.sequences = {};\r\n\tthis.sequenceList = [];\r\n    this.transform_key_count = 0;\r\n}\r\n\r\nShapeTransformManager.prototype = {\r\n\taddTransformSequence: function(transforms) {\r\n\t\tvar i, len = transforms.length;\r\n\t\tvar key = '_';\r\n\t\tfor(i = 0; i < len; i += 1) {\r\n\t\t\tkey += transforms[i].transform.key + '_';\r\n\t\t}\r\n\t\tvar sequence = this.sequences[key];\r\n\t\tif(!sequence) {\r\n\t\t\tsequence = {\r\n\t\t\t\ttransforms: [].concat(transforms),\r\n\t\t\t\tfinalTransform: new Matrix(),\r\n\t\t\t\t_mdf: false\r\n\t\t\t};\r\n\t\t\tthis.sequences[key] = sequence;\r\n\t\t\tthis.sequenceList.push(sequence);\r\n\t\t}\r\n\t\treturn sequence;\r\n\t},\r\n\tprocessSequence: function(sequence, isFirstFrame) {\r\n\t\tvar i = 0, len = sequence.transforms.length, _mdf = isFirstFrame;\r\n\t\twhile (i < len && !isFirstFrame) {\r\n\t\t\tif (sequence.transforms[i].transform.mProps._mdf) {\r\n\t\t\t\t_mdf = true;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\ti += 1\r\n\t\t}\r\n\t\tif (_mdf) {\r\n\t\t\tvar props;\r\n\t\t\tsequence.finalTransform.reset();\r\n\t\t\tfor (i = len - 1; i >= 0; i -= 1) {\r\n\t\t        props = sequence.transforms[i].transform.mProps.v.props;\r\n\t\t        sequence.finalTransform.transform(props[0],props[1],props[2],props[3],props[4],props[5],props[6],props[7],props[8],props[9],props[10],props[11],props[12],props[13],props[14],props[15]);\r\n\t\t\t}\r\n\t\t}\r\n\t\tsequence._mdf = _mdf;\r\n\t\t\r\n\t},\r\n\tprocessSequences: function(isFirstFrame) {\r\n\t\tvar i, len = this.sequenceList.length;\r\n\t\tfor (i = 0; i < len; i += 1) {\r\n\t\t\tthis.processSequence(this.sequenceList[i], isFirstFrame);\r\n\t\t}\r\n\r\n\t},\r\n\tgetNewKey: function() {\r\n\t\treturn '_' + this.transform_key_count++;\r\n\t}\r\n}\r\nfunction CVShapeData(element, data, styles, transformsManager) {\r\n    this.styledShapes = [];\r\n    this.tr = [0,0,0,0,0,0];\r\n    var ty = 4;\r\n    if(data.ty == 'rc'){\r\n        ty = 5;\r\n    }else if(data.ty == 'el'){\r\n        ty = 6;\r\n    }else if(data.ty == 'sr'){\r\n        ty = 7;\r\n    }\r\n    this.sh = ShapePropertyFactory.getShapeProp(element,data,ty,element);\r\n    var i , len = styles.length,styledShape;\r\n    for (i = 0; i < len; i += 1) {\r\n        if (!styles[i].closed) {\r\n            styledShape = {\r\n                transforms: transformsManager.addTransformSequence(styles[i].transforms),\r\n                trNodes: []\r\n            }\r\n            this.styledShapes.push(styledShape);\r\n            styles[i].elements.push(styledShape);\r\n        }\r\n    }\r\n}\r\n\r\nCVShapeData.prototype.setAsAnimated = SVGShapeData.prototype.setAsAnimated;\r\nfunction BaseElement(){\r\n}\r\n\r\nBaseElement.prototype = {\r\n    checkMasks: function(){\r\n        if(!this.data.hasMask){\r\n            return false;\r\n        }\r\n        var i = 0, len = this.data.masksProperties.length;\r\n        while(i<len) {\r\n            if((this.data.masksProperties[i].mode !== 'n' && this.data.masksProperties[i].cl !== false)) {\r\n                return true;\r\n            }\r\n            i += 1;\r\n        }\r\n        return false;\r\n    },\r\n    initExpressions: function(){\r\n        this.layerInterface = LayerExpressionInterface(this);\r\n        if(this.data.hasMask && this.maskManager) {\r\n            this.layerInterface.registerMaskInterface(this.maskManager);\r\n        }\r\n        var effectsInterface = EffectsExpressionInterface.createEffectsInterface(this,this.layerInterface);\r\n        this.layerInterface.registerEffectsInterface(effectsInterface);\r\n\r\n        if(this.data.ty === 0 || this.data.xt){\r\n            this.compInterface = CompExpressionInterface(this);\r\n        } else if(this.data.ty === 4){\r\n            this.layerInterface.shapeInterface = ShapeExpressionInterface(this.shapesData,this.itemsData,this.layerInterface);\r\n            this.layerInterface.content = this.layerInterface.shapeInterface;\r\n        } else if(this.data.ty === 5){\r\n            this.layerInterface.textInterface = TextExpressionInterface(this);\r\n            this.layerInterface.text = this.layerInterface.textInterface;\r\n        }\r\n    },\r\n    setBlendMode: function(){\r\n        var blendModeValue = getBlendMode(this.data.bm);\r\n        var elem = this.baseElement || this.layerElement;\r\n\r\n        elem.style['mix-blend-mode'] = blendModeValue;\r\n    },\r\n    initBaseData: function(data, globalData, comp){\r\n        this.globalData = globalData;\r\n        this.comp = comp;\r\n        this.data = data;\r\n        this.layerId = createElementID();\r\n        \r\n        //Stretch factor for old animations missing this property.\r\n        if(!this.data.sr){\r\n            this.data.sr = 1;\r\n        }\r\n        // effects manager\r\n        this.effectsManager = new EffectsManager(this.data,this,this.dynamicProperties);\r\n        \r\n    },\r\n    getType: function(){\r\n        return this.type;\r\n    }\r\n    ,sourceRectAtTime: function(){}\r\n}\r\nfunction NullElement(data,globalData,comp){\r\n    this.initFrame();\r\n\tthis.initBaseData(data, globalData, comp);\r\n    this.initFrame();\r\n    this.initTransform(data, globalData, comp);\r\n    this.initHierarchy();\r\n}\r\n\r\nNullElement.prototype.prepareFrame = function(num) {\r\n    this.prepareProperties(num, true);\r\n};\r\n\r\nNullElement.prototype.renderFrame = function() {\r\n};\r\n\r\nNullElement.prototype.getBaseElement = function() {\r\n\treturn null;\r\n};\r\n\r\nNullElement.prototype.destroy = function() {\r\n};\r\n\r\nNullElement.prototype.sourceRectAtTime = function() {\r\n};\r\n\r\nNullElement.prototype.hide = function() {\r\n};\r\n\r\nextendPrototype([BaseElement,TransformElement,HierarchyElement,FrameElement], NullElement);\r\n\r\nfunction SVGBaseElement(){\r\n}\r\n\r\nSVGBaseElement.prototype = {\r\n    initRendererElement: function() {\r\n        this.layerElement = createNS('g');\r\n    },\r\n    createContainerElements: function(){\r\n        this.matteElement = createNS('g');\r\n        this.transformedElement = this.layerElement;\r\n        this.maskedElement = this.layerElement;\r\n        this._sizeChanged = false;\r\n        var layerElementParent = null;\r\n        //If this layer acts as a mask for the following layer\r\n        var filId, fil, gg;\r\n        if (this.data.td) {\r\n            if (this.data.td == 3 || this.data.td == 1) {\r\n                var masker = createNS('mask');\r\n                masker.setAttribute('id', this.layerId);\r\n                masker.setAttribute('mask-type', this.data.td == 3 ? 'luminance' : 'alpha');\r\n                masker.appendChild(this.layerElement);\r\n                layerElementParent = masker;\r\n                this.globalData.defs.appendChild(masker);\r\n                // This is only for IE and Edge when mask if of type alpha\r\n                if (!featureSupport.maskType && this.data.td == 1) {\r\n                    masker.setAttribute('mask-type', 'luminance');\r\n                    filId = createElementID();\r\n                    fil = filtersFactory.createFilter(filId);\r\n                    this.globalData.defs.appendChild(fil);\r\n                    fil.appendChild(filtersFactory.createAlphaToLuminanceFilter());\r\n                    gg = createNS('g');\r\n                    gg.appendChild(this.layerElement);\r\n                    layerElementParent = gg;\r\n                    masker.appendChild(gg);\r\n                    gg.setAttribute('filter','url(' + locationHref + '#' + filId + ')');\r\n                }\r\n            } else if(this.data.td == 2) {\r\n                var maskGroup = createNS('mask');\r\n                maskGroup.setAttribute('id', this.layerId);\r\n                maskGroup.setAttribute('mask-type','alpha');\r\n                var maskGrouper = createNS('g');\r\n                maskGroup.appendChild(maskGrouper);\r\n                filId = createElementID();\r\n                fil = filtersFactory.createFilter(filId);\r\n                ////\r\n\r\n                // This solution doesn't work on Android when meta tag with viewport attribute is set\r\n                /*var feColorMatrix = createNS('feColorMatrix');\r\n                feColorMatrix.setAttribute('type', 'matrix');\r\n                feColorMatrix.setAttribute('color-interpolation-filters', 'sRGB');\r\n                feColorMatrix.setAttribute('values','1 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 -1 1');\r\n                fil.appendChild(feColorMatrix);*/\r\n                ////\r\n                var feCTr = createNS('feComponentTransfer');\r\n                feCTr.setAttribute('in','SourceGraphic');\r\n                fil.appendChild(feCTr);\r\n                var feFunc = createNS('feFuncA');\r\n                feFunc.setAttribute('type','table');\r\n                feFunc.setAttribute('tableValues','1.0 0.0');\r\n                feCTr.appendChild(feFunc);\r\n                ////\r\n                this.globalData.defs.appendChild(fil);\r\n                var alphaRect = createNS('rect');\r\n                alphaRect.setAttribute('width',  this.comp.data.w);\r\n                alphaRect.setAttribute('height', this.comp.data.h);\r\n                alphaRect.setAttribute('x','0');\r\n                alphaRect.setAttribute('y','0');\r\n                alphaRect.setAttribute('fill','#ffffff');\r\n                alphaRect.setAttribute('opacity','0');\r\n                maskGrouper.setAttribute('filter', 'url(' + locationHref + '#'+filId+')');\r\n                maskGrouper.appendChild(alphaRect);\r\n                maskGrouper.appendChild(this.layerElement);\r\n                layerElementParent = maskGrouper;\r\n                if (!featureSupport.maskType) {\r\n                    maskGroup.setAttribute('mask-type', 'luminance');\r\n                    fil.appendChild(filtersFactory.createAlphaToLuminanceFilter());\r\n                    gg = createNS('g');\r\n                    maskGrouper.appendChild(alphaRect);\r\n                    gg.appendChild(this.layerElement);\r\n                    layerElementParent = gg;\r\n                    maskGrouper.appendChild(gg);\r\n                }\r\n                this.globalData.defs.appendChild(maskGroup);\r\n            }\r\n        } else if (this.data.tt) {\r\n            this.matteElement.appendChild(this.layerElement);\r\n            layerElementParent = this.matteElement;\r\n            this.baseElement = this.matteElement;\r\n        } else {\r\n            this.baseElement = this.layerElement;\r\n        }\r\n        if (this.data.ln) {\r\n            this.layerElement.setAttribute('id', this.data.ln);\r\n        }\r\n        if (this.data.cl) {\r\n            this.layerElement.setAttribute('class', this.data.cl);\r\n        }\r\n        //Clipping compositions to hide content that exceeds boundaries. If collapsed transformations is on, component should not be clipped\r\n        if (this.data.ty === 0 && !this.data.hd) {\r\n            var cp = createNS( 'clipPath');\r\n            var pt = createNS('path');\r\n            pt.setAttribute('d','M0,0 L' + this.data.w + ',0' + ' L' + this.data.w + ',' + this.data.h + ' L0,' + this.data.h + 'z');\r\n            var clipId = createElementID();\r\n            cp.setAttribute('id',clipId);\r\n            cp.appendChild(pt);\r\n            this.globalData.defs.appendChild(cp);\r\n\r\n            if (this.checkMasks()) {\r\n                var cpGroup = createNS('g');\r\n                cpGroup.setAttribute('clip-path','url(' + locationHref + '#'+clipId + ')');\r\n                cpGroup.appendChild(this.layerElement);\r\n                this.transformedElement = cpGroup;\r\n                if (layerElementParent) {\r\n                    layerElementParent.appendChild(this.transformedElement);\r\n                } else {\r\n                    this.baseElement = this.transformedElement;\r\n                }\r\n            } else {\r\n                this.layerElement.setAttribute('clip-path','url(' + locationHref + '#'+clipId+')');\r\n            }\r\n            \r\n        }\r\n        if (this.data.bm !== 0) {\r\n            this.setBlendMode();\r\n        }\r\n\r\n    },\r\n    renderElement: function() {\r\n        if (this.finalTransform._matMdf) {\r\n            this.transformedElement.setAttribute('transform', this.finalTransform.mat.to2dCSS());\r\n        }\r\n        if (this.finalTransform._opMdf) {\r\n            this.transformedElement.setAttribute('opacity', this.finalTransform.mProp.o.v);\r\n        }\r\n    },\r\n    destroyBaseElement: function() {\r\n        this.layerElement = null;\r\n        this.matteElement = null;\r\n        this.maskManager.destroy();\r\n    },\r\n    getBaseElement: function() {\r\n        if (this.data.hd) {\r\n            return null;\r\n        }\r\n        return this.baseElement;\r\n    },\r\n    createRenderableComponents: function() {\r\n        this.maskManager = new MaskElement(this.data, this, this.globalData);\r\n        this.renderableEffectsManager = new SVGEffects(this);\r\n    },\r\n    setMatte: function(id) {\r\n        if (!this.matteElement) {\r\n            return;\r\n        }\r\n        this.matteElement.setAttribute(\"mask\", \"url(\" + locationHref + \"#\" + id + \")\");\r\n    }\r\n};\r\nfunction IShapeElement(){\r\n}\r\n\r\nIShapeElement.prototype = {\r\n    addShapeToModifiers: function(data) {\r\n        var i, len = this.shapeModifiers.length;\r\n        for(i=0;i<len;i+=1){\r\n            this.shapeModifiers[i].addShape(data);\r\n        }\r\n    },\r\n    isShapeInAnimatedModifiers: function(data) {\r\n        var i = 0, len = this.shapeModifiers.length;\r\n        while(i < len) {\r\n            if(this.shapeModifiers[i].isAnimatedWithShape(data)) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    },\r\n    renderModifiers: function() {\r\n        if(!this.shapeModifiers.length){\r\n            return;\r\n        }\r\n        var i, len = this.shapes.length;\r\n        for(i=0;i<len;i+=1){\r\n            this.shapes[i].sh.reset();\r\n        }\r\n\r\n        len = this.shapeModifiers.length;\r\n        for(i=len-1;i>=0;i-=1){\r\n            this.shapeModifiers[i].processShapes(this._isFirstFrame);\r\n        }\r\n    },\r\n    lcEnum: {\r\n        '1': 'butt',\r\n        '2': 'round',\r\n        '3': 'square'\r\n    },\r\n    ljEnum: {\r\n        '1': 'miter',\r\n        '2': 'round',\r\n        '3': 'bevel'\r\n    },\r\n    searchProcessedElement: function(elem){\r\n        var elements = this.processedElements;\r\n        var i = 0, len = elements.length;\r\n        while (i < len) {\r\n            if (elements[i].elem === elem) {\r\n                return elements[i].pos;\r\n            }\r\n            i += 1;\r\n        }\r\n        return 0;\r\n    },\r\n    addProcessedElement: function(elem, pos){\r\n        var elements = this.processedElements;\r\n        var i = elements.length;\r\n        while(i) {\r\n            i -= 1;\r\n            if (elements[i].elem === elem) {\r\n                elements[i].pos = pos;\r\n                return;\r\n            }\r\n        }\r\n        elements.push(new ProcessedElement(elem, pos));\r\n    },\r\n    prepareFrame: function(num) {\r\n        this.prepareRenderableFrame(num);\r\n        this.prepareProperties(num, this.isInRange);\r\n    }\r\n};\r\nfunction ITextElement(){\r\n}\r\n\r\nITextElement.prototype.initElement = function(data,globalData,comp){\r\n    this.lettersChangedFlag = true;\r\n    this.initFrame();\r\n    this.initBaseData(data, globalData, comp);\r\n    this.textProperty = new TextProperty(this, data.t, this.dynamicProperties);\r\n    this.textAnimator = new TextAnimatorProperty(data.t, this.renderType, this);\r\n    this.initTransform(data, globalData, comp);\r\n    this.initHierarchy();\r\n    this.initRenderable();\r\n    this.initRendererElement();\r\n    this.createContainerElements();\r\n    this.createRenderableComponents();\r\n    this.createContent();\r\n    this.hide();\r\n    this.textAnimator.searchProperties(this.dynamicProperties);\r\n};\r\n\r\nITextElement.prototype.prepareFrame = function(num) {\r\n    this._mdf = false;\r\n    this.prepareRenderableFrame(num);\r\n    this.prepareProperties(num, this.isInRange);\r\n    if(this.textProperty._mdf || this.textProperty._isFirstFrame) {\r\n        this.buildNewText();\r\n        this.textProperty._isFirstFrame = false;\r\n        this.textProperty._mdf = false;\r\n    }\r\n};\r\n\r\nITextElement.prototype.createPathShape = function(matrixHelper, shapes) {\r\n    var j,jLen = shapes.length;\r\n    var k, kLen, pathNodes;\r\n    var shapeStr = '';\r\n    for(j=0;j<jLen;j+=1){\r\n        pathNodes = shapes[j].ks.k;\r\n        shapeStr += buildShapeString(pathNodes, pathNodes.i.length, true, matrixHelper);\r\n    }\r\n    return shapeStr;\r\n};\r\n\r\nITextElement.prototype.updateDocumentData = function(newData, index) {\r\n    this.textProperty.updateDocumentData(newData, index);\r\n};\r\n\r\nITextElement.prototype.canResizeFont = function(_canResize) {\r\n    this.textProperty.canResizeFont(_canResize);\r\n};\r\n\r\nITextElement.prototype.setMinimumFontSize = function(_fontSize) {\r\n    this.textProperty.setMinimumFontSize(_fontSize);\r\n};\r\n\r\nITextElement.prototype.applyTextPropertiesToMatrix = function(documentData, matrixHelper, lineNumber, xPos, yPos) {\r\n    if(documentData.ps){\r\n        matrixHelper.translate(documentData.ps[0],documentData.ps[1] + documentData.ascent,0);\r\n    }\r\n    matrixHelper.translate(0,-documentData.ls,0);\r\n    switch(documentData.j){\r\n        case 1:\r\n            matrixHelper.translate(documentData.justifyOffset + (documentData.boxWidth - documentData.lineWidths[lineNumber]),0,0);\r\n            break;\r\n        case 2:\r\n            matrixHelper.translate(documentData.justifyOffset + (documentData.boxWidth - documentData.lineWidths[lineNumber] )/2,0,0);\r\n            break;\r\n    }\r\n    matrixHelper.translate(xPos, yPos, 0);\r\n};\r\n\r\n\r\nITextElement.prototype.buildColor = function(colorData) {\r\n    return 'rgb(' + Math.round(colorData[0]*255) + ',' + Math.round(colorData[1]*255) + ',' + Math.round(colorData[2]*255) + ')';\r\n};\r\n\r\nITextElement.prototype.emptyProp = new LetterProps();\r\n\r\nITextElement.prototype.destroy = function(){\r\n    \r\n};\r\nfunction ICompElement(){}\r\n\r\nextendPrototype([BaseElement, TransformElement, HierarchyElement, FrameElement, RenderableDOMElement], ICompElement);\r\n\r\nICompElement.prototype.initElement = function(data,globalData,comp) {\r\n    this.initFrame();\r\n    this.initBaseData(data, globalData, comp);\r\n    this.initTransform(data, globalData, comp);\r\n    this.initRenderable();\r\n    this.initHierarchy();\r\n    this.initRendererElement();\r\n    this.createContainerElements();\r\n    this.createRenderableComponents();\r\n    if(this.data.xt || !globalData.progressiveLoad){\r\n        this.buildAllItems();\r\n    }\r\n    this.hide();\r\n};\r\n\r\n/*ICompElement.prototype.hide = function(){\r\n    if(!this.hidden){\r\n        this.hideElement();\r\n        var i,len = this.elements.length;\r\n        for( i = 0; i < len; i+=1 ){\r\n            if(this.elements[i]){\r\n                this.elements[i].hide();\r\n            }\r\n        }\r\n    }\r\n};*/\r\n\r\nICompElement.prototype.prepareFrame = function(num){\r\n    this._mdf = false;\r\n    this.prepareRenderableFrame(num);\r\n    this.prepareProperties(num, this.isInRange);\r\n    if(!this.isInRange && !this.data.xt){\r\n        return;\r\n    }\r\n\r\n    if (!this.tm._placeholder) {\r\n        var timeRemapped = this.tm.v;\r\n        if(timeRemapped === this.data.op){\r\n            timeRemapped = this.data.op - 1;\r\n        }\r\n        this.renderedFrame = timeRemapped;\r\n    } else {\r\n        this.renderedFrame = num/this.data.sr;\r\n    }\r\n    var i,len = this.elements.length;\r\n    if(!this.completeLayers){\r\n        this.checkLayers(this.renderedFrame);\r\n    }\r\n    //This iteration needs to be backwards because of how expressions connect between each other\r\n    for( i = len - 1; i >= 0; i -= 1 ){\r\n        if(this.completeLayers || this.elements[i]){\r\n            this.elements[i].prepareFrame(this.renderedFrame - this.layers[i].st);\r\n            if(this.elements[i]._mdf) {\r\n                this._mdf = true;\r\n            }\r\n        }\r\n    }\r\n};\r\n\r\nICompElement.prototype.renderInnerContent = function() {\r\n    var i,len = this.layers.length;\r\n    for( i = 0; i < len; i += 1 ){\r\n        if(this.completeLayers || this.elements[i]){\r\n            this.elements[i].renderFrame();\r\n        }\r\n    }\r\n};\r\n\r\nICompElement.prototype.setElements = function(elems){\r\n    this.elements = elems;\r\n};\r\n\r\nICompElement.prototype.getElements = function(){\r\n    return this.elements;\r\n};\r\n\r\nICompElement.prototype.destroyElements = function(){\r\n    var i,len = this.layers.length;\r\n    for( i = 0; i < len; i+=1 ){\r\n        if(this.elements[i]){\r\n            this.elements[i].destroy();\r\n        }\r\n    }\r\n};\r\n\r\nICompElement.prototype.destroy = function(){\r\n    this.destroyElements();\r\n    this.destroyBaseElement();\r\n};\r\n\r\nfunction IImageElement(data,globalData,comp){\r\n    this.assetData = globalData.getAssetData(data.refId);\r\n    this.initElement(data,globalData,comp);\r\n    this.sourceRect = {top:0,left:0,width:this.assetData.w,height:this.assetData.h};\r\n}\r\n\r\nextendPrototype([BaseElement,TransformElement,SVGBaseElement,HierarchyElement,FrameElement,RenderableDOMElement], IImageElement);\r\n\r\nIImageElement.prototype.createContent = function(){\r\n\r\n    var assetPath = this.globalData.getAssetsPath(this.assetData);\r\n\r\n    this.innerElem = createNS('image');\r\n    this.innerElem.setAttribute('width',this.assetData.w+\"px\");\r\n    this.innerElem.setAttribute('height',this.assetData.h+\"px\");\r\n    this.innerElem.setAttribute('preserveAspectRatio',this.assetData.pr || this.globalData.renderConfig.imagePreserveAspectRatio);\r\n    this.innerElem.setAttributeNS('http://www.w3.org/1999/xlink','href',assetPath);\r\n    \r\n    this.layerElement.appendChild(this.innerElem);\r\n};\r\n\r\nIImageElement.prototype.sourceRectAtTime = function() {\r\n\treturn this.sourceRect;\r\n}\r\nfunction ISolidElement(data,globalData,comp){\r\n    this.initElement(data,globalData,comp);\r\n}\r\nextendPrototype([IImageElement], ISolidElement);\r\n\r\nISolidElement.prototype.createContent = function(){\r\n\r\n    var rect = createNS('rect');\r\n    ////rect.style.width = this.data.sw;\r\n    ////rect.style.height = this.data.sh;\r\n    ////rect.style.fill = this.data.sc;\r\n    rect.setAttribute('width',this.data.sw);\r\n    rect.setAttribute('height',this.data.sh);\r\n    rect.setAttribute('fill',this.data.sc);\r\n    this.layerElement.appendChild(rect);\r\n};\r\nfunction SVGCompElement(data,globalData,comp){\r\n    this.layers = data.layers;\r\n    this.supports3d = true;\r\n    this.completeLayers = false;\r\n    this.pendingElements = [];\r\n    this.elements = this.layers ? createSizedArray(this.layers.length) : [];\r\n    //this.layerElement = createNS('g');\r\n    this.initElement(data,globalData,comp);\r\n    this.tm = data.tm ? PropertyFactory.getProp(this,data.tm,0,globalData.frameRate,this) : {_placeholder:true};\r\n}\r\n\r\nextendPrototype([SVGRenderer, ICompElement, SVGBaseElement], SVGCompElement);\r\nfunction SVGTextElement(data,globalData,comp){\r\n    this.textSpans = [];\r\n    this.renderType = 'svg';\r\n    this.initElement(data,globalData,comp);\r\n}\r\n\r\nextendPrototype([BaseElement,TransformElement,SVGBaseElement,HierarchyElement,FrameElement,RenderableDOMElement,ITextElement], SVGTextElement);\r\n\r\nSVGTextElement.prototype.createContent = function(){\r\n\r\n    if (this.data.singleShape && !this.globalData.fontManager.chars) {\r\n        this.textContainer = createNS('text');\r\n    }\r\n};\r\n\r\nSVGTextElement.prototype.buildTextContents = function(textArray) {\r\n    var i = 0, len = textArray.length;\r\n    var textContents = [], currentTextContent = '';\r\n    while (i < len) {\r\n        if(textArray[i] === String.fromCharCode(13) || textArray[i] === String.fromCharCode(3)) {\r\n            textContents.push(currentTextContent);\r\n            currentTextContent = '';\r\n        } else {\r\n            currentTextContent += textArray[i];\r\n        }\r\n        i += 1;\r\n    }\r\n    textContents.push(currentTextContent);\r\n    return textContents;\r\n}\r\n\r\nSVGTextElement.prototype.buildNewText = function(){\r\n    var i, len;\r\n\r\n    var documentData = this.textProperty.currentData;\r\n    this.renderedLetters = createSizedArray(documentData ? documentData.l.length : 0);\r\n    if(documentData.fc) {\r\n        this.layerElement.setAttribute('fill', this.buildColor(documentData.fc));\r\n    }else{\r\n        this.layerElement.setAttribute('fill', 'rgba(0,0,0,0)');\r\n    }\r\n    if(documentData.sc){\r\n        this.layerElement.setAttribute('stroke', this.buildColor(documentData.sc));\r\n        this.layerElement.setAttribute('stroke-width', documentData.sw);\r\n    }\r\n    this.layerElement.setAttribute('font-size', documentData.finalSize);\r\n    var fontData = this.globalData.fontManager.getFontByName(documentData.f);\r\n    if(fontData.fClass){\r\n        this.layerElement.setAttribute('class',fontData.fClass);\r\n    } else {\r\n        this.layerElement.setAttribute('font-family', fontData.fFamily);\r\n        var fWeight = documentData.fWeight, fStyle = documentData.fStyle;\r\n        this.layerElement.setAttribute('font-style', fStyle);\r\n        this.layerElement.setAttribute('font-weight', fWeight);\r\n    }\r\n    this.layerElement.setAttribute('arial-label', documentData.t);\r\n\r\n    var letters = documentData.l || [];\r\n    var usesGlyphs = !!this.globalData.fontManager.chars;\r\n    len = letters.length;\r\n\r\n    var tSpan;\r\n    var matrixHelper = this.mHelper;\r\n    var shapes, shapeStr = '', singleShape = this.data.singleShape;\r\n    var xPos = 0, yPos = 0, firstLine = true;\r\n    var trackingOffset = documentData.tr/1000*documentData.finalSize;\r\n    if(singleShape && !usesGlyphs && !documentData.sz) {\r\n        var tElement = this.textContainer;\r\n        var justify = 'start';\r\n        switch(documentData.j) {\r\n            case 1:\r\n                justify = 'end';\r\n                break;\r\n            case 2:\r\n                justify = 'middle';\r\n                break;\r\n        }\r\n        tElement.setAttribute('text-anchor',justify);\r\n        tElement.setAttribute('letter-spacing',trackingOffset);\r\n        var textContent = this.buildTextContents(documentData.finalText);\r\n        len = textContent.length;\r\n        yPos = documentData.ps ? documentData.ps[1] + documentData.ascent : 0;\r\n        for ( i = 0; i < len; i += 1) {\r\n            tSpan = this.textSpans[i] || createNS('tspan');\r\n            tSpan.textContent = textContent[i];\r\n            tSpan.setAttribute('x', 0);\r\n            tSpan.setAttribute('y', yPos);\r\n            tSpan.style.display = 'inherit';\r\n            tElement.appendChild(tSpan);\r\n            this.textSpans[i] = tSpan;\r\n            yPos += documentData.finalLineHeight;\r\n        }\r\n        \r\n        this.layerElement.appendChild(tElement);\r\n    } else {\r\n        var cachedSpansLength = this.textSpans.length;\r\n        var shapeData, charData;\r\n        for (i = 0; i < len; i += 1) {\r\n            if(!usesGlyphs || !singleShape || i === 0){\r\n                tSpan = cachedSpansLength > i ? this.textSpans[i] : createNS(usesGlyphs?'path':'text');\r\n                if (cachedSpansLength <= i) {\r\n                    tSpan.setAttribute('stroke-linecap', 'butt');\r\n                    tSpan.setAttribute('stroke-linejoin','round');\r\n                    tSpan.setAttribute('stroke-miterlimit','4');\r\n                    this.textSpans[i] = tSpan;\r\n                    this.layerElement.appendChild(tSpan);\r\n                }\r\n                tSpan.style.display = 'inherit';\r\n            }\r\n            \r\n            matrixHelper.reset();\r\n            matrixHelper.scale(documentData.finalSize / 100, documentData.finalSize / 100);\r\n            if (singleShape) {\r\n                if(letters[i].n) {\r\n                    xPos = -trackingOffset;\r\n                    yPos += documentData.yOffset;\r\n                    yPos += firstLine ? 1 : 0;\r\n                    firstLine = false;\r\n                }\r\n                this.applyTextPropertiesToMatrix(documentData, matrixHelper, letters[i].line, xPos, yPos);\r\n                xPos += letters[i].l || 0;\r\n                //xPos += letters[i].val === ' ' ? 0 : trackingOffset;\r\n                xPos += trackingOffset;\r\n            }\r\n            if(usesGlyphs) {\r\n                charData = this.globalData.fontManager.getCharData(documentData.finalText[i], fontData.fStyle, this.globalData.fontManager.getFontByName(documentData.f).fFamily);\r\n                shapeData = charData && charData.data || {};\r\n                shapes = shapeData.shapes ? shapeData.shapes[0].it : [];\r\n                if(!singleShape){\r\n                    tSpan.setAttribute('d',this.createPathShape(matrixHelper,shapes));\r\n                } else {\r\n                    shapeStr += this.createPathShape(matrixHelper,shapes);\r\n                }\r\n            } else {\r\n                if(singleShape) {\r\n                    tSpan.setAttribute(\"transform\", \"translate(\" + matrixHelper.props[12] + \",\" + matrixHelper.props[13] + \")\");\r\n                }\r\n                tSpan.textContent = letters[i].val;\r\n                tSpan.setAttributeNS(\"http://www.w3.org/XML/1998/namespace\", \"xml:space\",\"preserve\");\r\n            }\r\n            //\r\n        }\r\n        if (singleShape && tSpan) {\r\n            tSpan.setAttribute('d',shapeStr);\r\n        }\r\n    }\r\n    while (i < this.textSpans.length){\r\n        this.textSpans[i].style.display = 'none';\r\n        i += 1;\r\n    }\r\n    \r\n    this._sizeChanged = true;\r\n};\r\n\r\nSVGTextElement.prototype.sourceRectAtTime = function(time){\r\n    this.prepareFrame(this.comp.renderedFrame - this.data.st);\r\n    this.renderInnerContent();\r\n    if(this._sizeChanged){\r\n        this._sizeChanged = false;\r\n        var textBox = this.layerElement.getBBox();\r\n        this.bbox = {\r\n            top: textBox.y,\r\n            left: textBox.x,\r\n            width: textBox.width,\r\n            height: textBox.height\r\n        };\r\n    }\r\n    return this.bbox;\r\n};\r\n\r\nSVGTextElement.prototype.renderInnerContent = function(){\r\n\r\n    if(!this.data.singleShape){\r\n        this.textAnimator.getMeasures(this.textProperty.currentData, this.lettersChangedFlag);\r\n        if(this.lettersChangedFlag || this.textAnimator.lettersChangedFlag){\r\n            this._sizeChanged = true;\r\n            var  i,len;\r\n            var renderedLetters = this.textAnimator.renderedLetters;\r\n\r\n            var letters = this.textProperty.currentData.l;\r\n\r\n            len = letters.length;\r\n            var renderedLetter, textSpan;\r\n            for(i=0;i<len;i+=1){\r\n                if(letters[i].n){\r\n                    continue;\r\n                }\r\n                renderedLetter = renderedLetters[i];\r\n                textSpan = this.textSpans[i];\r\n                if(renderedLetter._mdf.m) {\r\n                    textSpan.setAttribute('transform',renderedLetter.m);\r\n                }\r\n                if(renderedLetter._mdf.o) {\r\n                    textSpan.setAttribute('opacity',renderedLetter.o);\r\n                }\r\n                if(renderedLetter._mdf.sw){\r\n                    textSpan.setAttribute('stroke-width',renderedLetter.sw);\r\n                }\r\n                if(renderedLetter._mdf.sc){\r\n                    textSpan.setAttribute('stroke',renderedLetter.sc);\r\n                }\r\n                if(renderedLetter._mdf.fc){\r\n                    textSpan.setAttribute('fill',renderedLetter.fc);\r\n                }\r\n            }\r\n        }\r\n    }\r\n};\r\nfunction SVGShapeElement(data,globalData,comp){\r\n    //List of drawable elements\r\n    this.shapes = [];\r\n    // Full shape data\r\n    this.shapesData = data.shapes;\r\n    //List of styles that will be applied to shapes\r\n    this.stylesList = [];\r\n    //List of modifiers that will be applied to shapes\r\n    this.shapeModifiers = [];\r\n    //List of items in shape tree\r\n    this.itemsData = [];\r\n    //List of items in previous shape tree\r\n    this.processedElements = [];\r\n    // List of animated components\r\n    this.animatedContents = [];\r\n    this.initElement(data,globalData,comp);\r\n    //Moving any property that doesn't get too much access after initialization because of v8 way of handling more than 10 properties.\r\n    // List of elements that have been created\r\n    this.prevViewData = [];\r\n    //Moving any property that doesn't get too much access after initialization because of v8 way of handling more than 10 properties.\r\n}\r\n\r\nextendPrototype([BaseElement,TransformElement,SVGBaseElement,IShapeElement,HierarchyElement,FrameElement,RenderableDOMElement], SVGShapeElement);\r\n\r\nSVGShapeElement.prototype.initSecondaryElement = function() {\r\n};\r\n\r\nSVGShapeElement.prototype.identityMatrix = new Matrix();\r\n\r\nSVGShapeElement.prototype.buildExpressionInterface = function(){};\r\n\r\nSVGShapeElement.prototype.createContent = function(){\r\n    this.searchShapes(this.shapesData,this.itemsData,this.prevViewData,this.layerElement, 0, [], true);\r\n    this.filterUniqueShapes();\r\n};\r\n\r\n/*\r\nThis method searches for multiple shapes that affect a single element and one of them is animated\r\n*/\r\nSVGShapeElement.prototype.filterUniqueShapes = function(){\r\n    var i, len = this.shapes.length, shape;\r\n    var j, jLen = this.stylesList.length;\r\n    var style, count = 0;\r\n    var tempShapes = [];\r\n    var areAnimated = false;\r\n    for(j = 0; j < jLen; j += 1) {\r\n        style = this.stylesList[j];\r\n        areAnimated = false;\r\n        tempShapes.length = 0;\r\n        for(i = 0; i < len; i += 1) {\r\n            shape = this.shapes[i];\r\n            if(shape.styles.indexOf(style) !== -1) {\r\n                tempShapes.push(shape);\r\n                areAnimated = shape._isAnimated || areAnimated;\r\n            }\r\n        }\r\n        if(tempShapes.length > 1 && areAnimated) {\r\n            this.setShapesAsAnimated(tempShapes);\r\n        }\r\n    }\r\n}\r\n\r\nSVGShapeElement.prototype.setShapesAsAnimated = function(shapes){\r\n    var i, len = shapes.length;\r\n    for(i = 0; i < len; i += 1) {\r\n        shapes[i].setAsAnimated();\r\n    }\r\n}\r\n\r\nSVGShapeElement.prototype.createStyleElement = function(data, level){\r\n    //TODO: prevent drawing of hidden styles\r\n    var elementData;\r\n    var styleOb = new SVGStyleData(data, level);\r\n\r\n    var pathElement = styleOb.pElem;\r\n    if(data.ty === 'st') {\r\n        elementData = new SVGStrokeStyleData(this, data, styleOb);\r\n    } else if(data.ty === 'fl') {\r\n        elementData = new SVGFillStyleData(this, data, styleOb);\r\n    } else if(data.ty === 'gf' || data.ty === 'gs') {\r\n        var gradientConstructor = data.ty === 'gf' ? SVGGradientFillStyleData : SVGGradientStrokeStyleData;\r\n        elementData = new gradientConstructor(this, data, styleOb);\r\n        this.globalData.defs.appendChild(elementData.gf);\r\n        if (elementData.maskId) {\r\n            this.globalData.defs.appendChild(elementData.ms);\r\n            this.globalData.defs.appendChild(elementData.of);\r\n            pathElement.setAttribute('mask','url(' + locationHref + '#' + elementData.maskId + ')');\r\n        }\r\n    }\r\n    \r\n    if(data.ty === 'st' || data.ty === 'gs') {\r\n        pathElement.setAttribute('stroke-linecap', this.lcEnum[data.lc] || 'round');\r\n        pathElement.setAttribute('stroke-linejoin',this.ljEnum[data.lj] || 'round');\r\n        pathElement.setAttribute('fill-opacity','0');\r\n        if(data.lj === 1) {\r\n            pathElement.setAttribute('stroke-miterlimit',data.ml);\r\n        }\r\n    }\r\n\r\n    if(data.r === 2) {\r\n        pathElement.setAttribute('fill-rule', 'evenodd');\r\n    }\r\n\r\n    if(data.ln){\r\n        pathElement.setAttribute('id',data.ln);\r\n    }\r\n    if(data.cl){\r\n        pathElement.setAttribute('class',data.cl);\r\n    }\r\n    if(data.bm){\r\n        pathElement.style['mix-blend-mode'] = getBlendMode(data.bm);\r\n    }\r\n    this.stylesList.push(styleOb);\r\n    this.addToAnimatedContents(data, elementData);\r\n    return elementData;\r\n};\r\n\r\nSVGShapeElement.prototype.createGroupElement = function(data) {\r\n    var elementData = new ShapeGroupData();\r\n    if(data.ln){\r\n        elementData.gr.setAttribute('id',data.ln);\r\n    }\r\n    if(data.cl){\r\n        elementData.gr.setAttribute('class',data.cl);\r\n    }\r\n    if(data.bm){\r\n        elementData.gr.style['mix-blend-mode'] = getBlendMode(data.bm);\r\n    }\r\n    return elementData;\r\n};\r\n\r\nSVGShapeElement.prototype.createTransformElement = function(data, container) {\r\n    var transformProperty = TransformPropertyFactory.getTransformProperty(this,data,this);\r\n    var elementData = new SVGTransformData(transformProperty, transformProperty.o, container);\r\n    this.addToAnimatedContents(data, elementData);\r\n    return elementData;\r\n};\r\n\r\nSVGShapeElement.prototype.createShapeElement = function(data, ownTransformers, level) {\r\n    var ty = 4;\r\n    if(data.ty === 'rc'){\r\n        ty = 5;\r\n    }else if(data.ty === 'el'){\r\n        ty = 6;\r\n    }else if(data.ty === 'sr'){\r\n        ty = 7;\r\n    }\r\n    var shapeProperty = ShapePropertyFactory.getShapeProp(this,data,ty,this);\r\n    var elementData = new SVGShapeData(ownTransformers, level, shapeProperty);\r\n    this.shapes.push(elementData);\r\n    this.addShapeToModifiers(elementData);\r\n    this.addToAnimatedContents(data, elementData);\r\n    return elementData;\r\n};\r\n\r\nSVGShapeElement.prototype.addToAnimatedContents = function(data, element) {\r\n    var i = 0, len = this.animatedContents.length;\r\n    while(i < len) {\r\n        if(this.animatedContents[i].element === element) {\r\n            return;\r\n        }\r\n        i += 1;\r\n    }\r\n    this.animatedContents.push({\r\n        fn: SVGElementsRenderer.createRenderFunction(data),\r\n        element: element,\r\n        data: data\r\n    });\r\n};\r\n\r\nSVGShapeElement.prototype.setElementStyles = function(elementData){\r\n    var arr = elementData.styles;\r\n    var j, jLen = this.stylesList.length;\r\n    for (j = 0; j < jLen; j += 1) {\r\n        if (!this.stylesList[j].closed) {\r\n            arr.push(this.stylesList[j]);\r\n        }\r\n    }\r\n};\r\n\r\nSVGShapeElement.prototype.reloadShapes = function(){\r\n    this._isFirstFrame = true;\r\n    var i, len = this.itemsData.length;\r\n    for( i = 0; i < len; i += 1) {\r\n        this.prevViewData[i] = this.itemsData[i];\r\n    }\r\n    this.searchShapes(this.shapesData,this.itemsData,this.prevViewData,this.layerElement, 0, [], true);\r\n    this.filterUniqueShapes();\r\n    len = this.dynamicProperties.length;\r\n    for(i = 0; i < len; i += 1) {\r\n        this.dynamicProperties[i].getValue();\r\n    }\r\n    this.renderModifiers();\r\n};\r\n\r\nSVGShapeElement.prototype.searchShapes = function(arr,itemsData,prevViewData,container, level, transformers, render){\r\n    var ownTransformers = [].concat(transformers);\r\n    var i, len = arr.length - 1;\r\n    var j, jLen;\r\n    var ownStyles = [], ownModifiers = [], styleOb, currentTransform, modifier, processedPos;\r\n    for(i=len;i>=0;i-=1){\r\n        processedPos = this.searchProcessedElement(arr[i]);\r\n        if(!processedPos){\r\n            arr[i]._render = render;\r\n        } else {\r\n            itemsData[i] = prevViewData[processedPos - 1];\r\n        }\r\n        if(arr[i].ty == 'fl' || arr[i].ty == 'st' || arr[i].ty == 'gf' || arr[i].ty == 'gs'){\r\n            if(!processedPos){\r\n                itemsData[i] = this.createStyleElement(arr[i], level);\r\n            } else {\r\n                itemsData[i].style.closed = false;\r\n            }\r\n            if(arr[i]._render){\r\n                container.appendChild(itemsData[i].style.pElem);\r\n            }\r\n            ownStyles.push(itemsData[i].style);\r\n        }else if(arr[i].ty == 'gr'){\r\n            if(!processedPos){\r\n                itemsData[i] = this.createGroupElement(arr[i]);\r\n            } else {\r\n                jLen = itemsData[i].it.length;\r\n                for(j=0;j<jLen;j+=1){\r\n                    itemsData[i].prevViewData[j] = itemsData[i].it[j];\r\n                }\r\n            }\r\n            this.searchShapes(arr[i].it,itemsData[i].it,itemsData[i].prevViewData,itemsData[i].gr, level + 1, ownTransformers, render);\r\n            if(arr[i]._render){\r\n                container.appendChild(itemsData[i].gr);\r\n            }\r\n        }else if(arr[i].ty == 'tr'){\r\n            if(!processedPos){\r\n                itemsData[i] = this.createTransformElement(arr[i], container);\r\n            }\r\n            currentTransform = itemsData[i].transform;\r\n            ownTransformers.push(currentTransform);\r\n        }else if(arr[i].ty == 'sh' || arr[i].ty == 'rc' || arr[i].ty == 'el' || arr[i].ty == 'sr'){\r\n            if(!processedPos){\r\n                itemsData[i] = this.createShapeElement(arr[i], ownTransformers, level);\r\n            }\r\n            this.setElementStyles(itemsData[i]);\r\n\r\n        }else if(arr[i].ty == 'tm' || arr[i].ty == 'rd' || arr[i].ty == 'ms'){\r\n            if(!processedPos){\r\n                modifier = ShapeModifiers.getModifier(arr[i].ty);\r\n                modifier.init(this,arr[i]);\r\n                itemsData[i] = modifier;\r\n                this.shapeModifiers.push(modifier);\r\n            } else {\r\n                modifier = itemsData[i];\r\n                modifier.closed = false;\r\n            }\r\n            ownModifiers.push(modifier);\r\n        }else if(arr[i].ty == 'rp'){\r\n            if(!processedPos){\r\n                modifier = ShapeModifiers.getModifier(arr[i].ty);\r\n                itemsData[i] = modifier;\r\n                modifier.init(this,arr,i,itemsData);\r\n                this.shapeModifiers.push(modifier);\r\n                render = false;\r\n            }else{\r\n                modifier = itemsData[i];\r\n                modifier.closed = true;\r\n            }\r\n            ownModifiers.push(modifier);\r\n        }\r\n        this.addProcessedElement(arr[i], i + 1);\r\n    }\r\n    len = ownStyles.length;\r\n    for(i=0;i<len;i+=1){\r\n        ownStyles[i].closed = true;\r\n    }\r\n    len = ownModifiers.length;\r\n    for(i=0;i<len;i+=1){\r\n        ownModifiers[i].closed = true;\r\n    }\r\n};\r\n\r\nSVGShapeElement.prototype.renderInnerContent = function() {\r\n    this.renderModifiers();\r\n    var i, len = this.stylesList.length;\r\n    for(i=0;i<len;i+=1){\r\n        this.stylesList[i].reset();\r\n    }\r\n    this.renderShape();\r\n\r\n    for (i = 0; i < len; i += 1) {\r\n        if (this.stylesList[i]._mdf || this._isFirstFrame) {\r\n            if(this.stylesList[i].msElem){\r\n                this.stylesList[i].msElem.setAttribute('d', this.stylesList[i].d);\r\n                //Adding M0 0 fixes same mask bug on all browsers\r\n                this.stylesList[i].d = 'M0 0' + this.stylesList[i].d;\r\n            }\r\n            this.stylesList[i].pElem.setAttribute('d', this.stylesList[i].d || 'M0 0');\r\n        }\r\n    }\r\n};\r\n\r\nSVGShapeElement.prototype.renderShape = function() {\r\n    var i, len = this.animatedContents.length;\r\n    var animatedContent;\r\n    for(i = 0; i < len; i += 1) {\r\n        animatedContent = this.animatedContents[i];\r\n        if((this._isFirstFrame || animatedContent.element._isAnimated) && animatedContent.data !== true) {\r\n            animatedContent.fn(animatedContent.data, animatedContent.element, this._isFirstFrame);\r\n        }\r\n    }\r\n}\r\n\r\nSVGShapeElement.prototype.destroy = function(){\r\n    this.destroyBaseElement();\r\n    this.shapesData = null;\r\n    this.itemsData = null;\r\n};\r\n\r\nfunction SVGTintFilter(filter, filterManager){\r\n    this.filterManager = filterManager;\r\n    var feColorMatrix = createNS('feColorMatrix');\r\n    feColorMatrix.setAttribute('type','matrix');\r\n    feColorMatrix.setAttribute('color-interpolation-filters','linearRGB');\r\n    feColorMatrix.setAttribute('values','0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0 0 0 1 0');\r\n    feColorMatrix.setAttribute('result','f1');\r\n    filter.appendChild(feColorMatrix);\r\n    feColorMatrix = createNS('feColorMatrix');\r\n    feColorMatrix.setAttribute('type','matrix');\r\n    feColorMatrix.setAttribute('color-interpolation-filters','sRGB');\r\n    feColorMatrix.setAttribute('values','1 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 1 0');\r\n    feColorMatrix.setAttribute('result','f2');\r\n    filter.appendChild(feColorMatrix);\r\n    this.matrixFilter = feColorMatrix;\r\n    if(filterManager.effectElements[2].p.v !== 100 || filterManager.effectElements[2].p.k){\r\n        var feMerge = createNS('feMerge');\r\n        filter.appendChild(feMerge);\r\n        var feMergeNode;\r\n        feMergeNode = createNS('feMergeNode');\r\n        feMergeNode.setAttribute('in','SourceGraphic');\r\n        feMerge.appendChild(feMergeNode);\r\n        feMergeNode = createNS('feMergeNode');\r\n        feMergeNode.setAttribute('in','f2');\r\n        feMerge.appendChild(feMergeNode);\r\n    }\r\n}\r\n\r\nSVGTintFilter.prototype.renderFrame = function(forceRender){\r\n    if(forceRender || this.filterManager._mdf){\r\n        var colorBlack = this.filterManager.effectElements[0].p.v;\r\n        var colorWhite = this.filterManager.effectElements[1].p.v;\r\n        var opacity = this.filterManager.effectElements[2].p.v/100;\r\n        this.matrixFilter.setAttribute('values',(colorWhite[0]- colorBlack[0])+' 0 0 0 '+ colorBlack[0] +' '+ (colorWhite[1]- colorBlack[1]) +' 0 0 0 '+ colorBlack[1] +' '+ (colorWhite[2]- colorBlack[2]) +' 0 0 0 '+ colorBlack[2] +' 0 0 0 ' + opacity + ' 0');\r\n    }\r\n};\r\nfunction SVGFillFilter(filter, filterManager){\r\n    this.filterManager = filterManager;\r\n    var feColorMatrix = createNS('feColorMatrix');\r\n    feColorMatrix.setAttribute('type','matrix');\r\n    feColorMatrix.setAttribute('color-interpolation-filters','sRGB');\r\n    feColorMatrix.setAttribute('values','1 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 1 0');\r\n    filter.appendChild(feColorMatrix);\r\n    this.matrixFilter = feColorMatrix;\r\n}\r\nSVGFillFilter.prototype.renderFrame = function(forceRender){\r\n    if(forceRender || this.filterManager._mdf){\r\n        var color = this.filterManager.effectElements[2].p.v;\r\n        var opacity = this.filterManager.effectElements[6].p.v;\r\n        this.matrixFilter.setAttribute('values','0 0 0 0 '+color[0]+' 0 0 0 0 '+color[1]+' 0 0 0 0 '+color[2]+' 0 0 0 '+opacity+' 0');\r\n    }\r\n};\r\nfunction SVGGaussianBlurEffect(filter, filterManager){\r\n    // Outset the filter region by 100% on all sides to accommodate blur expansion.\r\n    filter.setAttribute('x','-100%');\r\n    filter.setAttribute('y','-100%');\r\n    filter.setAttribute('width','300%');\r\n    filter.setAttribute('height','300%');\r\n\r\n    this.filterManager = filterManager;\r\n    var feGaussianBlur = createNS('feGaussianBlur');\r\n    filter.appendChild(feGaussianBlur);\r\n    this.feGaussianBlur = feGaussianBlur;\r\n}\r\n\r\nSVGGaussianBlurEffect.prototype.renderFrame = function(forceRender){\r\n    if(forceRender || this.filterManager._mdf){\r\n        // Empirical value, matching AE's blur appearance.\r\n        var kBlurrinessToSigma = 0.3;\r\n        var sigma = this.filterManager.effectElements[0].p.v * kBlurrinessToSigma;\r\n\r\n        // Dimensions mapping:\r\n        //\r\n        //   1 -> horizontal & vertical\r\n        //   2 -> horizontal only\r\n        //   3 -> vertical only\r\n        //\r\n        var dimensions = this.filterManager.effectElements[1].p.v;\r\n        var sigmaX = (dimensions == 3) ? 0 : sigma;\r\n        var sigmaY = (dimensions == 2) ? 0 : sigma;\r\n\r\n        this.feGaussianBlur.setAttribute('stdDeviation', sigmaX + \" \" + sigmaY);\r\n\r\n        // Repeat edges mapping:\r\n        //\r\n        //   0 -> off -> duplicate\r\n        //   1 -> on  -> wrap\r\n        var edgeMode = (this.filterManager.effectElements[2].p.v == 1) ? 'wrap' : 'duplicate';\r\n        this.feGaussianBlur.setAttribute('edgeMode', edgeMode);\r\n    }\r\n}\r\nfunction SVGStrokeEffect(elem, filterManager){\r\n    this.initialized = false;\r\n    this.filterManager = filterManager;\r\n    this.elem = elem;\r\n    this.paths = [];\r\n}\r\n\r\nSVGStrokeEffect.prototype.initialize = function(){\r\n\r\n    var elemChildren = this.elem.layerElement.children || this.elem.layerElement.childNodes;\r\n    var path,groupPath, i, len;\r\n    if(this.filterManager.effectElements[1].p.v === 1){\r\n        len = this.elem.maskManager.masksProperties.length;\r\n        i = 0;\r\n    } else {\r\n        i = this.filterManager.effectElements[0].p.v - 1;\r\n        len = i + 1;\r\n    }\r\n    groupPath = createNS('g'); \r\n    groupPath.setAttribute('fill','none');\r\n    groupPath.setAttribute('stroke-linecap','round');\r\n    groupPath.setAttribute('stroke-dashoffset',1);\r\n    for(i;i<len;i+=1){\r\n        path = createNS('path');\r\n        groupPath.appendChild(path);\r\n        this.paths.push({p:path,m:i});\r\n    }\r\n    if(this.filterManager.effectElements[10].p.v === 3){\r\n        var mask = createNS('mask');\r\n        var id = createElementID();\r\n        mask.setAttribute('id',id);\r\n        mask.setAttribute('mask-type','alpha');\r\n        mask.appendChild(groupPath);\r\n        this.elem.globalData.defs.appendChild(mask);\r\n        var g = createNS('g');\r\n        g.setAttribute('mask','url(' + locationHref + '#'+id+')');\r\n        while (elemChildren[0]) {\r\n            g.appendChild(elemChildren[0]);\r\n        }\r\n        this.elem.layerElement.appendChild(g);\r\n        this.masker = mask;\r\n        groupPath.setAttribute('stroke','#fff');\r\n    } else if(this.filterManager.effectElements[10].p.v === 1 || this.filterManager.effectElements[10].p.v === 2){\r\n        if(this.filterManager.effectElements[10].p.v === 2){\r\n            elemChildren = this.elem.layerElement.children || this.elem.layerElement.childNodes;\r\n            while(elemChildren.length){\r\n                this.elem.layerElement.removeChild(elemChildren[0]);\r\n            }\r\n        }\r\n        this.elem.layerElement.appendChild(groupPath);\r\n        this.elem.layerElement.removeAttribute('mask');\r\n        groupPath.setAttribute('stroke','#fff');\r\n    }\r\n    this.initialized = true;\r\n    this.pathMasker = groupPath;\r\n};\r\n\r\nSVGStrokeEffect.prototype.renderFrame = function(forceRender){\r\n    if(!this.initialized){\r\n        this.initialize();\r\n    }\r\n    var i, len = this.paths.length;\r\n    var mask, path;\r\n    for(i=0;i<len;i+=1){\r\n        if(this.paths[i].m === -1) {\r\n            continue;\r\n        }\r\n        mask = this.elem.maskManager.viewData[this.paths[i].m];\r\n        path = this.paths[i].p;\r\n        if(forceRender || this.filterManager._mdf || mask.prop._mdf){\r\n            path.setAttribute('d',mask.lastPath);\r\n        }\r\n        if(forceRender || this.filterManager.effectElements[9].p._mdf || this.filterManager.effectElements[4].p._mdf || this.filterManager.effectElements[7].p._mdf || this.filterManager.effectElements[8].p._mdf || mask.prop._mdf){\r\n            var dasharrayValue;\r\n            if(this.filterManager.effectElements[7].p.v !== 0 || this.filterManager.effectElements[8].p.v !== 100){\r\n                var s = Math.min(this.filterManager.effectElements[7].p.v,this.filterManager.effectElements[8].p.v)/100;\r\n                var e = Math.max(this.filterManager.effectElements[7].p.v,this.filterManager.effectElements[8].p.v)/100;\r\n                var l = path.getTotalLength();\r\n                dasharrayValue = '0 0 0 ' + l*s + ' ';\r\n                var lineLength = l*(e-s);\r\n                var segment = 1+this.filterManager.effectElements[4].p.v*2*this.filterManager.effectElements[9].p.v/100;\r\n                var units = Math.floor(lineLength/segment);\r\n                var j;\r\n                for(j=0;j<units;j+=1){\r\n                    dasharrayValue += '1 ' + this.filterManager.effectElements[4].p.v*2*this.filterManager.effectElements[9].p.v/100 + ' ';\r\n                }\r\n                dasharrayValue += '0 ' + l*10 + ' 0 0';\r\n            } else {\r\n                dasharrayValue = '1 ' + this.filterManager.effectElements[4].p.v*2*this.filterManager.effectElements[9].p.v/100;\r\n            }\r\n            path.setAttribute('stroke-dasharray',dasharrayValue);\r\n        }\r\n    }\r\n    if(forceRender || this.filterManager.effectElements[4].p._mdf){\r\n        this.pathMasker.setAttribute('stroke-width',this.filterManager.effectElements[4].p.v*2);\r\n    }\r\n    \r\n    if(forceRender || this.filterManager.effectElements[6].p._mdf){\r\n        this.pathMasker.setAttribute('opacity',this.filterManager.effectElements[6].p.v);\r\n    }\r\n    if(this.filterManager.effectElements[10].p.v === 1 || this.filterManager.effectElements[10].p.v === 2){\r\n        if(forceRender || this.filterManager.effectElements[3].p._mdf){\r\n            var color = this.filterManager.effectElements[3].p.v;\r\n            this.pathMasker.setAttribute('stroke','rgb('+bm_floor(color[0]*255)+','+bm_floor(color[1]*255)+','+bm_floor(color[2]*255)+')');\r\n        }\r\n    }\r\n};\r\nfunction SVGTritoneFilter(filter, filterManager){\r\n    this.filterManager = filterManager;\r\n    var feColorMatrix = createNS('feColorMatrix');\r\n    feColorMatrix.setAttribute('type','matrix');\r\n    feColorMatrix.setAttribute('color-interpolation-filters','linearRGB');\r\n    feColorMatrix.setAttribute('values','0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0 0 0 1 0');\r\n    feColorMatrix.setAttribute('result','f1');\r\n    filter.appendChild(feColorMatrix);\r\n    var feComponentTransfer = createNS('feComponentTransfer');\r\n    feComponentTransfer.setAttribute('color-interpolation-filters','sRGB');\r\n    filter.appendChild(feComponentTransfer);\r\n    this.matrixFilter = feComponentTransfer;\r\n    var feFuncR = createNS('feFuncR');\r\n    feFuncR.setAttribute('type','table');\r\n    feComponentTransfer.appendChild(feFuncR);\r\n    this.feFuncR = feFuncR;\r\n    var feFuncG = createNS('feFuncG');\r\n    feFuncG.setAttribute('type','table');\r\n    feComponentTransfer.appendChild(feFuncG);\r\n    this.feFuncG = feFuncG;\r\n    var feFuncB = createNS('feFuncB');\r\n    feFuncB.setAttribute('type','table');\r\n    feComponentTransfer.appendChild(feFuncB);\r\n    this.feFuncB = feFuncB;\r\n}\r\n\r\nSVGTritoneFilter.prototype.renderFrame = function(forceRender){\r\n    if(forceRender || this.filterManager._mdf){\r\n        var color1 = this.filterManager.effectElements[0].p.v;\r\n        var color2 = this.filterManager.effectElements[1].p.v;\r\n        var color3 = this.filterManager.effectElements[2].p.v;\r\n        var tableR = color3[0] + ' ' + color2[0] + ' ' + color1[0];\r\n        var tableG = color3[1] + ' ' + color2[1] + ' ' + color1[1];\r\n        var tableB = color3[2] + ' ' + color2[2] + ' ' + color1[2];\r\n        this.feFuncR.setAttribute('tableValues', tableR);\r\n        this.feFuncG.setAttribute('tableValues', tableG);\r\n        this.feFuncB.setAttribute('tableValues', tableB);\r\n        //var opacity = this.filterManager.effectElements[2].p.v/100;\r\n        //this.matrixFilter.setAttribute('values',(colorWhite[0]- colorBlack[0])+' 0 0 0 '+ colorBlack[0] +' '+ (colorWhite[1]- colorBlack[1]) +' 0 0 0 '+ colorBlack[1] +' '+ (colorWhite[2]- colorBlack[2]) +' 0 0 0 '+ colorBlack[2] +' 0 0 0 ' + opacity + ' 0');\r\n    }\r\n};\r\nfunction SVGProLevelsFilter(filter, filterManager){\r\n    this.filterManager = filterManager;\r\n    var effectElements = this.filterManager.effectElements;\r\n    var feComponentTransfer = createNS('feComponentTransfer');\r\n    var feFuncR, feFuncG, feFuncB;\r\n    \r\n    if(effectElements[10].p.k || effectElements[10].p.v !== 0 || effectElements[11].p.k || effectElements[11].p.v !== 1 || effectElements[12].p.k || effectElements[12].p.v !== 1 || effectElements[13].p.k || effectElements[13].p.v !== 0 || effectElements[14].p.k || effectElements[14].p.v !== 1){\r\n        this.feFuncR = this.createFeFunc('feFuncR', feComponentTransfer);\r\n    }\r\n    if(effectElements[17].p.k || effectElements[17].p.v !== 0 || effectElements[18].p.k || effectElements[18].p.v !== 1 || effectElements[19].p.k || effectElements[19].p.v !== 1 || effectElements[20].p.k || effectElements[20].p.v !== 0 || effectElements[21].p.k || effectElements[21].p.v !== 1){\r\n        this.feFuncG = this.createFeFunc('feFuncG', feComponentTransfer);\r\n    }\r\n    if(effectElements[24].p.k || effectElements[24].p.v !== 0 || effectElements[25].p.k || effectElements[25].p.v !== 1 || effectElements[26].p.k || effectElements[26].p.v !== 1 || effectElements[27].p.k || effectElements[27].p.v !== 0 || effectElements[28].p.k || effectElements[28].p.v !== 1){\r\n        this.feFuncB = this.createFeFunc('feFuncB', feComponentTransfer);\r\n    }\r\n    if(effectElements[31].p.k || effectElements[31].p.v !== 0 || effectElements[32].p.k || effectElements[32].p.v !== 1 || effectElements[33].p.k || effectElements[33].p.v !== 1 || effectElements[34].p.k || effectElements[34].p.v !== 0 || effectElements[35].p.k || effectElements[35].p.v !== 1){\r\n        this.feFuncA = this.createFeFunc('feFuncA', feComponentTransfer);\r\n    }\r\n    \r\n    if(this.feFuncR || this.feFuncG || this.feFuncB || this.feFuncA){\r\n        feComponentTransfer.setAttribute('color-interpolation-filters','sRGB');\r\n        filter.appendChild(feComponentTransfer);\r\n        feComponentTransfer = createNS('feComponentTransfer');\r\n    }\r\n\r\n    if(effectElements[3].p.k || effectElements[3].p.v !== 0 || effectElements[4].p.k || effectElements[4].p.v !== 1 || effectElements[5].p.k || effectElements[5].p.v !== 1 || effectElements[6].p.k || effectElements[6].p.v !== 0 || effectElements[7].p.k || effectElements[7].p.v !== 1){\r\n\r\n        feComponentTransfer.setAttribute('color-interpolation-filters','sRGB');\r\n        filter.appendChild(feComponentTransfer);\r\n        this.feFuncRComposed = this.createFeFunc('feFuncR', feComponentTransfer);\r\n        this.feFuncGComposed = this.createFeFunc('feFuncG', feComponentTransfer);\r\n        this.feFuncBComposed = this.createFeFunc('feFuncB', feComponentTransfer);\r\n    }\r\n}\r\n\r\nSVGProLevelsFilter.prototype.createFeFunc = function(type, feComponentTransfer) {\r\n    var feFunc = createNS(type);\r\n    feFunc.setAttribute('type','table');\r\n    feComponentTransfer.appendChild(feFunc);\r\n    return feFunc;\r\n};\r\n\r\nSVGProLevelsFilter.prototype.getTableValue = function(inputBlack, inputWhite, gamma, outputBlack, outputWhite) {\r\n    var cnt = 0;\r\n    var segments = 256;\r\n    var perc;\r\n    var min = Math.min(inputBlack, inputWhite);\r\n    var max = Math.max(inputBlack, inputWhite);\r\n    var table = Array.call(null,{length:segments});\r\n    var colorValue;\r\n    var pos = 0;\r\n    var outputDelta = outputWhite - outputBlack; \r\n    var inputDelta = inputWhite - inputBlack; \r\n    while(cnt <= 256) {\r\n        perc = cnt/256;\r\n        if(perc <= min){\r\n            colorValue = inputDelta < 0 ? outputWhite : outputBlack;\r\n        } else if(perc >= max){\r\n            colorValue = inputDelta < 0 ? outputBlack : outputWhite;\r\n        } else {\r\n            colorValue = (outputBlack + outputDelta * Math.pow((perc - inputBlack) / inputDelta, 1 / gamma));\r\n        }\r\n        table[pos++] = colorValue;\r\n        cnt += 256/(segments-1);\r\n    }\r\n    return table.join(' ');\r\n};\r\n\r\nSVGProLevelsFilter.prototype.renderFrame = function(forceRender){\r\n    if(forceRender || this.filterManager._mdf){\r\n        var val, cnt, perc, bezier;\r\n        var effectElements = this.filterManager.effectElements;\r\n        if(this.feFuncRComposed && (forceRender || effectElements[3].p._mdf || effectElements[4].p._mdf || effectElements[5].p._mdf || effectElements[6].p._mdf || effectElements[7].p._mdf)){\r\n            val = this.getTableValue(effectElements[3].p.v,effectElements[4].p.v,effectElements[5].p.v,effectElements[6].p.v,effectElements[7].p.v);\r\n            this.feFuncRComposed.setAttribute('tableValues',val);\r\n            this.feFuncGComposed.setAttribute('tableValues',val);\r\n            this.feFuncBComposed.setAttribute('tableValues',val);\r\n        }\r\n\r\n\r\n        if(this.feFuncR && (forceRender || effectElements[10].p._mdf || effectElements[11].p._mdf || effectElements[12].p._mdf || effectElements[13].p._mdf || effectElements[14].p._mdf)){\r\n            val = this.getTableValue(effectElements[10].p.v,effectElements[11].p.v,effectElements[12].p.v,effectElements[13].p.v,effectElements[14].p.v);\r\n            this.feFuncR.setAttribute('tableValues',val);\r\n        }\r\n\r\n        if(this.feFuncG && (forceRender || effectElements[17].p._mdf || effectElements[18].p._mdf || effectElements[19].p._mdf || effectElements[20].p._mdf || effectElements[21].p._mdf)){\r\n            val = this.getTableValue(effectElements[17].p.v,effectElements[18].p.v,effectElements[19].p.v,effectElements[20].p.v,effectElements[21].p.v);\r\n            this.feFuncG.setAttribute('tableValues',val);\r\n        }\r\n\r\n        if(this.feFuncB && (forceRender || effectElements[24].p._mdf || effectElements[25].p._mdf || effectElements[26].p._mdf || effectElements[27].p._mdf || effectElements[28].p._mdf)){\r\n            val = this.getTableValue(effectElements[24].p.v,effectElements[25].p.v,effectElements[26].p.v,effectElements[27].p.v,effectElements[28].p.v);\r\n            this.feFuncB.setAttribute('tableValues',val);\r\n        }\r\n\r\n        if(this.feFuncA && (forceRender || effectElements[31].p._mdf || effectElements[32].p._mdf || effectElements[33].p._mdf || effectElements[34].p._mdf || effectElements[35].p._mdf)){\r\n            val = this.getTableValue(effectElements[31].p.v,effectElements[32].p.v,effectElements[33].p.v,effectElements[34].p.v,effectElements[35].p.v);\r\n            this.feFuncA.setAttribute('tableValues',val);\r\n        }\r\n        \r\n    }\r\n};\r\nfunction SVGDropShadowEffect(filter, filterManager){\r\n    filter.setAttribute('x','-100%');\r\n    filter.setAttribute('y','-100%');\r\n    filter.setAttribute('width','400%');\r\n    filter.setAttribute('height','400%');\r\n    this.filterManager = filterManager;\r\n\r\n    var feGaussianBlur = createNS('feGaussianBlur');\r\n    feGaussianBlur.setAttribute('in','SourceAlpha');\r\n    feGaussianBlur.setAttribute('result','drop_shadow_1');\r\n    feGaussianBlur.setAttribute('stdDeviation','0');\r\n    this.feGaussianBlur = feGaussianBlur;\r\n    filter.appendChild(feGaussianBlur);\r\n\r\n    var feOffset = createNS('feOffset');\r\n    feOffset.setAttribute('dx','25');\r\n    feOffset.setAttribute('dy','0');\r\n    feOffset.setAttribute('in','drop_shadow_1');\r\n    feOffset.setAttribute('result','drop_shadow_2');\r\n    this.feOffset = feOffset;\r\n    filter.appendChild(feOffset);\r\n    var feFlood = createNS('feFlood');\r\n    feFlood.setAttribute('flood-color','#00ff00');\r\n    feFlood.setAttribute('flood-opacity','1');\r\n    feFlood.setAttribute('result','drop_shadow_3');\r\n    this.feFlood = feFlood;\r\n    filter.appendChild(feFlood);\r\n\r\n    var feComposite = createNS('feComposite');\r\n    feComposite.setAttribute('in','drop_shadow_3');\r\n    feComposite.setAttribute('in2','drop_shadow_2');\r\n    feComposite.setAttribute('operator','in');\r\n    feComposite.setAttribute('result','drop_shadow_4');\r\n    filter.appendChild(feComposite);\r\n\r\n\r\n    var feMerge = createNS('feMerge');\r\n    filter.appendChild(feMerge);\r\n    var feMergeNode;\r\n    feMergeNode = createNS('feMergeNode');\r\n    feMerge.appendChild(feMergeNode);\r\n    feMergeNode = createNS('feMergeNode');\r\n    feMergeNode.setAttribute('in','SourceGraphic');\r\n    this.feMergeNode = feMergeNode;\r\n    this.feMerge = feMerge;\r\n    this.originalNodeAdded = false;\r\n    feMerge.appendChild(feMergeNode);\r\n}\r\n\r\nSVGDropShadowEffect.prototype.renderFrame = function(forceRender){\r\n    if(forceRender || this.filterManager._mdf){\r\n        if(forceRender || this.filterManager.effectElements[4].p._mdf){\r\n            this.feGaussianBlur.setAttribute('stdDeviation', this.filterManager.effectElements[4].p.v / 4);\r\n        }\r\n        if(forceRender || this.filterManager.effectElements[0].p._mdf){\r\n            var col = this.filterManager.effectElements[0].p.v;\r\n            this.feFlood.setAttribute('flood-color',rgbToHex(Math.round(col[0]*255),Math.round(col[1]*255),Math.round(col[2]*255)));\r\n        }\r\n        if(forceRender || this.filterManager.effectElements[1].p._mdf){\r\n            this.feFlood.setAttribute('flood-opacity',this.filterManager.effectElements[1].p.v/255);\r\n        }\r\n        if(forceRender || this.filterManager.effectElements[2].p._mdf || this.filterManager.effectElements[3].p._mdf){\r\n            var distance = this.filterManager.effectElements[3].p.v;\r\n            var angle = (this.filterManager.effectElements[2].p.v - 90) * degToRads;\r\n            var x = distance * Math.cos(angle);\r\n            var y = distance * Math.sin(angle);\r\n            this.feOffset.setAttribute('dx', x);\r\n            this.feOffset.setAttribute('dy', y);\r\n        }\r\n        /*if(forceRender || this.filterManager.effectElements[5].p._mdf){\r\n            if(this.filterManager.effectElements[5].p.v === 1 && this.originalNodeAdded) {\r\n                this.feMerge.removeChild(this.feMergeNode);\r\n                this.originalNodeAdded = false;\r\n            } else if(this.filterManager.effectElements[5].p.v === 0 && !this.originalNodeAdded) {\r\n                this.feMerge.appendChild(this.feMergeNode);\r\n                this.originalNodeAdded = true;\r\n            }\r\n        }*/\r\n    }\r\n};\r\nvar _svgMatteSymbols = [];\r\n\r\nfunction SVGMatte3Effect(filterElem, filterManager, elem){\r\n    this.initialized = false;\r\n    this.filterManager = filterManager;\r\n    this.filterElem = filterElem;\r\n    this.elem = elem;\r\n    elem.matteElement = createNS('g');\r\n    elem.matteElement.appendChild(elem.layerElement);\r\n    elem.matteElement.appendChild(elem.transformedElement);\r\n    elem.baseElement = elem.matteElement;\r\n}\r\n\r\nSVGMatte3Effect.prototype.findSymbol = function(mask) {\r\n    var i = 0, len = _svgMatteSymbols.length;\r\n    while(i < len) {\r\n        if(_svgMatteSymbols[i] === mask) {\r\n            return _svgMatteSymbols[i];\r\n        }\r\n        i += 1;\r\n    }\r\n    return null;\r\n};\r\n\r\nSVGMatte3Effect.prototype.replaceInParent = function(mask, symbolId) {\r\n    var parentNode = mask.layerElement.parentNode;\r\n    if(!parentNode) {\r\n        return;\r\n    }\r\n    var children = parentNode.children;\r\n    var i = 0, len = children.length;\r\n    while (i < len) {\r\n        if (children[i] === mask.layerElement) {\r\n            break;\r\n        }\r\n        i += 1;\r\n    }\r\n    var nextChild;\r\n    if (i <= len - 2) {\r\n        nextChild = children[i + 1];\r\n    }\r\n    var useElem = createNS('use');\r\n    useElem.setAttribute('href', '#' + symbolId);\r\n    if(nextChild) {\r\n        parentNode.insertBefore(useElem, nextChild);\r\n    } else {\r\n        parentNode.appendChild(useElem);\r\n    }\r\n};\r\n\r\nSVGMatte3Effect.prototype.setElementAsMask = function(elem, mask) {\r\n    if(!this.findSymbol(mask)) {\r\n        var symbolId = createElementID();\r\n        var masker = createNS('mask');\r\n        masker.setAttribute('id', mask.layerId);\r\n        masker.setAttribute('mask-type', 'alpha');\r\n        _svgMatteSymbols.push(mask);\r\n        var defs = elem.globalData.defs;\r\n        defs.appendChild(masker);\r\n        var symbol = createNS('symbol');\r\n        symbol.setAttribute('id', symbolId);\r\n        this.replaceInParent(mask, symbolId);\r\n        symbol.appendChild(mask.layerElement);\r\n        defs.appendChild(symbol);\r\n        var useElem = createNS('use');\r\n        useElem.setAttribute('href', '#' + symbolId);\r\n        masker.appendChild(useElem);\r\n        mask.data.hd = false;\r\n        mask.show();\r\n    }\r\n    elem.setMatte(mask.layerId);\r\n};\r\n\r\nSVGMatte3Effect.prototype.initialize = function() {\r\n    var ind = this.filterManager.effectElements[0].p.v;\r\n    var elements = this.elem.comp.elements;\r\n    var i = 0, len = elements.length;\r\n    while (i < len) {\r\n    \tif (elements[i] && elements[i].data.ind === ind) {\r\n    \t\tthis.setElementAsMask(this.elem, elements[i]);\r\n    \t}\r\n    \ti += 1;\r\n    }\r\n    this.initialized = true;\r\n};\r\n\r\nSVGMatte3Effect.prototype.renderFrame = function() {\r\n\tif(!this.initialized) {\r\n\t\tthis.initialize();\r\n\t}\r\n};\r\nfunction SVGEffects(elem){\r\n    var i, len = elem.data.ef ? elem.data.ef.length : 0;\r\n    var filId = createElementID();\r\n    var fil = filtersFactory.createFilter(filId);\r\n    var count = 0;\r\n    this.filters = [];\r\n    var filterManager;\r\n    for(i=0;i<len;i+=1){\r\n        filterManager = null;\r\n        if(elem.data.ef[i].ty === 20){\r\n            count += 1;\r\n            filterManager = new SVGTintFilter(fil, elem.effectsManager.effectElements[i]);\r\n        }else if(elem.data.ef[i].ty === 21){\r\n            count += 1;\r\n            filterManager = new SVGFillFilter(fil, elem.effectsManager.effectElements[i]);\r\n        }else if(elem.data.ef[i].ty === 22){\r\n            filterManager = new SVGStrokeEffect(elem, elem.effectsManager.effectElements[i]);\r\n        }else if(elem.data.ef[i].ty === 23){\r\n            count += 1;\r\n            filterManager = new SVGTritoneFilter(fil, elem.effectsManager.effectElements[i]);\r\n        }else if(elem.data.ef[i].ty === 24){\r\n            count += 1;\r\n            filterManager = new SVGProLevelsFilter(fil, elem.effectsManager.effectElements[i]);\r\n        }else if(elem.data.ef[i].ty === 25){\r\n            count += 1;\r\n            filterManager = new SVGDropShadowEffect(fil, elem.effectsManager.effectElements[i]);\r\n        }else if(elem.data.ef[i].ty === 28){\r\n            //count += 1;\r\n            filterManager = new SVGMatte3Effect(fil, elem.effectsManager.effectElements[i], elem);\r\n        }else if(elem.data.ef[i].ty === 29){\r\n            count += 1;\r\n            filterManager = new SVGGaussianBlurEffect(fil, elem.effectsManager.effectElements[i]);\r\n        }\r\n        if(filterManager) {\r\n            this.filters.push(filterManager);\r\n        }\r\n    }\r\n    if(count){\r\n        elem.globalData.defs.appendChild(fil);\r\n        elem.layerElement.setAttribute('filter','url(' + locationHref + '#'+filId+')');\r\n    }\r\n    if (this.filters.length) {\r\n        elem.addRenderableComponent(this);\r\n    }\r\n}\r\n\r\nSVGEffects.prototype.renderFrame = function(_isFirstFrame){\r\n    var i, len = this.filters.length;\r\n    for(i=0;i<len;i+=1){\r\n        this.filters[i].renderFrame(_isFirstFrame);\r\n    }\r\n};\r\nfunction CVContextData() {\r\n\tthis.saved = [];\r\n    this.cArrPos = 0;\r\n    this.cTr = new Matrix();\r\n    this.cO = 1;\r\n    var i, len = 15;\r\n    this.savedOp = createTypedArray('float32', len);\r\n    for(i=0;i<len;i+=1){\r\n        this.saved[i] = createTypedArray('float32', 16);\r\n    }\r\n    this._length = len;\r\n}\r\n\r\nCVContextData.prototype.duplicate = function() {\r\n\tvar newLength = this._length * 2;\r\n\tvar currentSavedOp = this.savedOp;\r\n    this.savedOp = createTypedArray('float32', newLength);\r\n    this.savedOp.set(currentSavedOp);\r\n    var i = 0;\r\n    for(i = this._length; i < newLength; i += 1) {\r\n        this.saved[i] = createTypedArray('float32', 16);\r\n    }\r\n    this._length = newLength;\r\n};\r\n\r\nCVContextData.prototype.reset = function() {\r\n\tthis.cArrPos = 0;\r\n\tthis.cTr.reset();\r\n    this.cO = 1;\r\n};\r\nfunction CVBaseElement(){\r\n}\r\n\r\nCVBaseElement.prototype = {\r\n    createElements: function(){},\r\n    initRendererElement: function(){},\r\n    createContainerElements: function(){\r\n        this.canvasContext = this.globalData.canvasContext;\r\n        this.renderableEffectsManager = new CVEffects(this);\r\n    },\r\n    createContent: function(){},\r\n    setBlendMode: function(){\r\n        var globalData = this.globalData;\r\n        if(globalData.blendMode !== this.data.bm) {\r\n            globalData.blendMode = this.data.bm;\r\n            var blendModeValue = getBlendMode(this.data.bm);\r\n            globalData.canvasContext.globalCompositeOperation = blendModeValue;\r\n        }\r\n    },\r\n    createRenderableComponents: function(){\r\n        this.maskManager = new CVMaskElement(this.data, this);\r\n    },\r\n    hideElement: function(){\r\n        if (!this.hidden && (!this.isInRange || this.isTransparent)) {\r\n            this.hidden = true;\r\n        }\r\n    },\r\n    showElement: function(){\r\n        if (this.isInRange && !this.isTransparent){\r\n            this.hidden = false;\r\n            this._isFirstFrame = true;\r\n            this.maskManager._isFirstFrame = true;\r\n        }\r\n    },\r\n    renderFrame: function() {\r\n        if (this.hidden || this.data.hd) {\r\n            return;\r\n        }\r\n        this.renderTransform();\r\n        this.renderRenderable();\r\n        this.setBlendMode();\r\n        this.globalData.renderer.save();\r\n        this.globalData.renderer.ctxTransform(this.finalTransform.mat.props);\r\n        this.globalData.renderer.ctxOpacity(this.finalTransform.mProp.o.v);\r\n        this.renderInnerContent();\r\n        this.globalData.renderer.restore();\r\n        if(this.maskManager.hasMasks) {\r\n            this.globalData.renderer.restore(true);\r\n        }\r\n        if (this._isFirstFrame) {\r\n            this._isFirstFrame = false;\r\n        }\r\n    },\r\n    destroy: function(){\r\n        this.canvasContext = null;\r\n        this.data = null;\r\n        this.globalData = null;\r\n        this.maskManager.destroy();\r\n    },\r\n    mHelper: new Matrix()\r\n};\r\nCVBaseElement.prototype.hide = CVBaseElement.prototype.hideElement;\r\nCVBaseElement.prototype.show = CVBaseElement.prototype.showElement;\r\n\r\nfunction CVImageElement(data, globalData, comp){\r\n    this.assetData = globalData.getAssetData(data.refId);\r\n    this.img = globalData.imageLoader.getImage(this.assetData);\r\n    this.initElement(data,globalData,comp);\r\n}\r\nextendPrototype([BaseElement, TransformElement, CVBaseElement, HierarchyElement, FrameElement, RenderableElement], CVImageElement);\r\n\r\nCVImageElement.prototype.initElement = SVGShapeElement.prototype.initElement;\r\nCVImageElement.prototype.prepareFrame = IImageElement.prototype.prepareFrame;\r\n\r\nCVImageElement.prototype.createContent = function(){\r\n\r\n    if (this.img.width && (this.assetData.w !== this.img.width || this.assetData.h !== this.img.height)) {\r\n        var canvas = createTag('canvas');\r\n        canvas.width = this.assetData.w;\r\n        canvas.height = this.assetData.h;\r\n        var ctx = canvas.getContext('2d');\r\n\r\n        var imgW = this.img.width;\r\n        var imgH = this.img.height;\r\n        var imgRel = imgW / imgH;\r\n        var canvasRel = this.assetData.w/this.assetData.h;\r\n        var widthCrop, heightCrop;\r\n        var par = this.assetData.pr || this.globalData.renderConfig.imagePreserveAspectRatio;\r\n        if((imgRel > canvasRel && par === 'xMidYMid slice') || (imgRel < canvasRel && par !== 'xMidYMid slice')) {\r\n            heightCrop = imgH;\r\n            widthCrop = heightCrop*canvasRel;\r\n        } else {\r\n            widthCrop = imgW;\r\n            heightCrop = widthCrop/canvasRel;\r\n        }\r\n        ctx.drawImage(this.img,(imgW-widthCrop)/2,(imgH-heightCrop)/2,widthCrop,heightCrop,0,0,this.assetData.w,this.assetData.h);\r\n        this.img = canvas;\r\n    }\r\n\r\n};\r\n\r\nCVImageElement.prototype.renderInnerContent = function(parentMatrix){\r\n    this.canvasContext.drawImage(this.img, 0, 0);\r\n};\r\n\r\nCVImageElement.prototype.destroy = function(){\r\n    this.img = null;\r\n};\r\nfunction CVCompElement(data, globalData, comp) {\r\n    this.completeLayers = false;\r\n    this.layers = data.layers;\r\n    this.pendingElements = [];\r\n    this.elements = createSizedArray(this.layers.length);\r\n    this.initElement(data, globalData, comp);\r\n    this.tm = data.tm ? PropertyFactory.getProp(this,data.tm,0,globalData.frameRate, this) : {_placeholder:true};\r\n}\r\n\r\nextendPrototype([CanvasRenderer, ICompElement, CVBaseElement], CVCompElement);\r\n\r\nCVCompElement.prototype.renderInnerContent = function() {\r\n    var i,len = this.layers.length;\r\n    for( i = len - 1; i >= 0; i -= 1 ){\r\n        if(this.completeLayers || this.elements[i]){\r\n            this.elements[i].renderFrame();\r\n        }\r\n    }\r\n};\r\n\r\nCVCompElement.prototype.destroy = function(){\r\n    var i,len = this.layers.length;\r\n    for( i = len - 1; i >= 0; i -= 1 ){\r\n        if(this.elements[i]) {\r\n            this.elements[i].destroy();\r\n        }\r\n    }\r\n    this.layers = null;\r\n    this.elements = null;\r\n};\r\n\r\nfunction CVMaskElement(data,element){\r\n    this.data = data;\r\n    this.element = element;\r\n    this.masksProperties = this.data.masksProperties || [];\r\n    this.viewData = createSizedArray(this.masksProperties.length);\r\n    var i, len = this.masksProperties.length, hasMasks = false;\r\n    for (i = 0; i < len; i++) {\r\n        if(this.masksProperties[i].mode !== 'n'){\r\n            hasMasks = true;\r\n        }\r\n        this.viewData[i] = ShapePropertyFactory.getShapeProp(this.element,this.masksProperties[i],3);\r\n    }\r\n    this.hasMasks = hasMasks;\r\n    if(hasMasks) {\r\n        this.element.addRenderableComponent(this);\r\n    }\r\n}\r\n\r\nCVMaskElement.prototype.renderFrame = function () {\r\n    if(!this.hasMasks){\r\n        return;\r\n    }\r\n    var transform = this.element.finalTransform.mat;\r\n    var ctx = this.element.canvasContext;\r\n    var i, len = this.masksProperties.length;\r\n    var pt,pts,data;\r\n    ctx.beginPath();\r\n    for (i = 0; i < len; i++) {\r\n        if(this.masksProperties[i].mode !== 'n'){\r\n            if (this.masksProperties[i].inv) {\r\n                ctx.moveTo(0, 0);\r\n                ctx.lineTo(this.element.globalData.compSize.w, 0);\r\n                ctx.lineTo(this.element.globalData.compSize.w, this.element.globalData.compSize.h);\r\n                ctx.lineTo(0, this.element.globalData.compSize.h);\r\n                ctx.lineTo(0, 0);\r\n            }\r\n            data = this.viewData[i].v;\r\n            pt = transform.applyToPointArray(data.v[0][0],data.v[0][1],0);\r\n            ctx.moveTo(pt[0], pt[1]);\r\n            var j, jLen = data._length;\r\n            for (j = 1; j < jLen; j++) {\r\n                pts = transform.applyToTriplePoints(data.o[j - 1], data.i[j], data.v[j]);\r\n                ctx.bezierCurveTo(pts[0], pts[1], pts[2], pts[3], pts[4], pts[5]);\r\n            }\r\n            pts = transform.applyToTriplePoints(data.o[j - 1], data.i[0], data.v[0]);\r\n            ctx.bezierCurveTo(pts[0], pts[1], pts[2], pts[3], pts[4], pts[5]);\r\n        }\r\n    }\r\n    this.element.globalData.renderer.save(true);\r\n    ctx.clip();\r\n};\r\n\r\nCVMaskElement.prototype.getMaskProperty = MaskElement.prototype.getMaskProperty;\r\n\r\nCVMaskElement.prototype.destroy = function(){\r\n    this.element = null;\r\n};\r\nfunction CVShapeElement(data, globalData, comp) {\r\n    this.shapes = [];\r\n    this.shapesData = data.shapes;\r\n    this.stylesList = [];\r\n    this.itemsData = [];\r\n    this.prevViewData = [];\r\n    this.shapeModifiers = [];\r\n    this.processedElements = [];\r\n    this.transformsManager = new ShapeTransformManager();\r\n    this.initElement(data, globalData, comp);\r\n}\r\n\r\nextendPrototype([BaseElement,TransformElement,CVBaseElement,IShapeElement,HierarchyElement,FrameElement,RenderableElement], CVShapeElement);\r\n\r\nCVShapeElement.prototype.initElement = RenderableDOMElement.prototype.initElement;\r\n\r\nCVShapeElement.prototype.transformHelper = {opacity:1,_opMdf:false};\r\n\r\nCVShapeElement.prototype.dashResetter = [];\r\n\r\nCVShapeElement.prototype.createContent = function(){\r\n    this.searchShapes(this.shapesData,this.itemsData,this.prevViewData, true, []);\r\n};\r\n\r\nCVShapeElement.prototype.createStyleElement = function(data, transforms) {\r\n    var styleElem = {\r\n        data: data,\r\n        type: data.ty,\r\n        preTransforms: this.transformsManager.addTransformSequence(transforms),\r\n        transforms: [],\r\n        elements: [],\r\n        closed: data.hd === true\r\n    };\r\n    var elementData = {};\r\n    if(data.ty == 'fl' || data.ty == 'st'){\r\n        elementData.c = PropertyFactory.getProp(this,data.c,1,255,this);\r\n        if(!elementData.c.k){\r\n            styleElem.co = 'rgb('+bm_floor(elementData.c.v[0])+','+bm_floor(elementData.c.v[1])+','+bm_floor(elementData.c.v[2])+')';\r\n        }\r\n    } else if (data.ty === 'gf' || data.ty === 'gs') {\r\n        elementData.s = PropertyFactory.getProp(this,data.s,1,null,this);\r\n        elementData.e = PropertyFactory.getProp(this,data.e,1,null,this);\r\n        elementData.h = PropertyFactory.getProp(this,data.h||{k:0},0,0.01,this);\r\n        elementData.a = PropertyFactory.getProp(this,data.a||{k:0},0,degToRads,this);\r\n        elementData.g = new GradientProperty(this,data.g,this);\r\n    }\r\n    elementData.o = PropertyFactory.getProp(this,data.o,0,0.01,this);\r\n    if(data.ty == 'st' || data.ty == 'gs') {\r\n        styleElem.lc = this.lcEnum[data.lc] || 'round';\r\n        styleElem.lj = this.ljEnum[data.lj] || 'round';\r\n        if(data.lj == 1) {\r\n            styleElem.ml = data.ml;\r\n        }\r\n        elementData.w = PropertyFactory.getProp(this,data.w,0,null,this);\r\n        if(!elementData.w.k){\r\n            styleElem.wi = elementData.w.v;\r\n        }\r\n        if(data.d){\r\n            var d = new DashProperty(this,data.d,'canvas', this);\r\n            elementData.d = d;\r\n            if(!elementData.d.k){\r\n                styleElem.da = elementData.d.dashArray;\r\n                styleElem.do = elementData.d.dashoffset[0];\r\n            }\r\n        }\r\n    } else {\r\n        styleElem.r = data.r === 2 ? 'evenodd' : 'nonzero';\r\n    }\r\n    this.stylesList.push(styleElem);\r\n    elementData.style = styleElem;\r\n    return elementData;\r\n};\r\n\r\nCVShapeElement.prototype.createGroupElement = function(data) {\r\n    var elementData = {\r\n        it: [],\r\n        prevViewData: []\r\n    };\r\n    return elementData;\r\n};\r\n\r\nCVShapeElement.prototype.createTransformElement = function(data) {\r\n    var elementData = {\r\n        transform : {\r\n            opacity: 1,\r\n            _opMdf:false,\r\n            key: this.transformsManager.getNewKey(),\r\n            op: PropertyFactory.getProp(this,data.o,0,0.01,this),\r\n            mProps: TransformPropertyFactory.getTransformProperty(this,data,this)\r\n        }\r\n    };\r\n    return elementData;\r\n};\r\n\r\nCVShapeElement.prototype.createShapeElement = function(data) {\r\n    var elementData = new CVShapeData(this, data, this.stylesList, this.transformsManager);\r\n    \r\n    this.shapes.push(elementData);\r\n    this.addShapeToModifiers(elementData);\r\n    return elementData;\r\n};\r\n\r\nCVShapeElement.prototype.reloadShapes = function() {\r\n    this._isFirstFrame = true;\r\n    var i, len = this.itemsData.length;\r\n    for (i = 0; i < len; i += 1) {\r\n        this.prevViewData[i] = this.itemsData[i];\r\n    }\r\n    this.searchShapes(this.shapesData,this.itemsData,this.prevViewData, true, []);\r\n    len = this.dynamicProperties.length;\r\n    for (i = 0; i < len; i += 1) {\r\n        this.dynamicProperties[i].getValue();\r\n    }\r\n    this.renderModifiers();\r\n    this.transformsManager.processSequences(this._isFirstFrame);\r\n};\r\n\r\nCVShapeElement.prototype.addTransformToStyleList = function(transform) {\r\n    var i, len = this.stylesList.length;\r\n    for (i = 0; i < len; i += 1) {\r\n        if(!this.stylesList[i].closed) {\r\n            this.stylesList[i].transforms.push(transform);\r\n        }\r\n    }\r\n}\r\n\r\nCVShapeElement.prototype.removeTransformFromStyleList = function() {\r\n    var i, len = this.stylesList.length;\r\n    for (i = 0; i < len; i += 1) {\r\n        if(!this.stylesList[i].closed) {\r\n            this.stylesList[i].transforms.pop();\r\n        }\r\n    }\r\n}\r\n\r\nCVShapeElement.prototype.closeStyles = function(styles) {\r\n    var i, len = styles.length, j, jLen;\r\n    for (i = 0; i < len; i += 1) {\r\n        styles[i].closed = true;\r\n    }\r\n}\r\n\r\nCVShapeElement.prototype.searchShapes = function(arr,itemsData, prevViewData, shouldRender, transforms){\r\n    var i, len = arr.length - 1;\r\n    var j, jLen;\r\n    var ownStyles = [], ownModifiers = [], processedPos, modifier, currentTransform;\r\n    var ownTransforms = [].concat(transforms);\r\n    for(i=len;i>=0;i-=1){\r\n        processedPos = this.searchProcessedElement(arr[i]);\r\n        if(!processedPos){\r\n            arr[i]._shouldRender = shouldRender;\r\n        } else {\r\n            itemsData[i] = prevViewData[processedPos - 1];\r\n        }\r\n        if(arr[i].ty == 'fl' || arr[i].ty == 'st'|| arr[i].ty == 'gf'|| arr[i].ty == 'gs'){\r\n            if(!processedPos){\r\n                itemsData[i] = this.createStyleElement(arr[i], ownTransforms);\r\n            } else {\r\n                itemsData[i].style.closed = false;\r\n            }\r\n            \r\n            ownStyles.push(itemsData[i].style);\r\n        }else if(arr[i].ty == 'gr'){\r\n            if(!processedPos){\r\n                itemsData[i] = this.createGroupElement(arr[i]);\r\n            } else {\r\n                jLen = itemsData[i].it.length;\r\n                for(j=0;j<jLen;j+=1){\r\n                    itemsData[i].prevViewData[j] = itemsData[i].it[j];\r\n                }\r\n            }\r\n            this.searchShapes(arr[i].it,itemsData[i].it,itemsData[i].prevViewData, shouldRender, ownTransforms);\r\n        }else if(arr[i].ty == 'tr'){\r\n            if(!processedPos){\r\n                currentTransform = this.createTransformElement(arr[i]);\r\n                itemsData[i] = currentTransform;\r\n            }\r\n            ownTransforms.push(itemsData[i]);\r\n            this.addTransformToStyleList(itemsData[i]);\r\n        }else if(arr[i].ty == 'sh' || arr[i].ty == 'rc' || arr[i].ty == 'el' || arr[i].ty == 'sr'){\r\n            if(!processedPos){\r\n                itemsData[i] = this.createShapeElement(arr[i]);\r\n            }\r\n            \r\n        }else if(arr[i].ty == 'tm' || arr[i].ty == 'rd'){\r\n            if(!processedPos){\r\n                modifier = ShapeModifiers.getModifier(arr[i].ty);\r\n                modifier.init(this,arr[i]);\r\n                itemsData[i] = modifier;\r\n                this.shapeModifiers.push(modifier);\r\n            } else {\r\n                modifier = itemsData[i];\r\n                modifier.closed = false;\r\n            }\r\n            ownModifiers.push(modifier);\r\n        } else if(arr[i].ty == 'rp'){\r\n            if(!processedPos){\r\n                modifier = ShapeModifiers.getModifier(arr[i].ty);\r\n                itemsData[i] = modifier;\r\n                modifier.init(this,arr,i,itemsData);\r\n                this.shapeModifiers.push(modifier);\r\n                shouldRender = false;\r\n            }else{\r\n                modifier = itemsData[i];\r\n                modifier.closed = true;\r\n            }\r\n            ownModifiers.push(modifier);\r\n        }\r\n        this.addProcessedElement(arr[i], i + 1);\r\n    }\r\n    this.removeTransformFromStyleList();\r\n    this.closeStyles(ownStyles);\r\n    len = ownModifiers.length;\r\n    for(i=0;i<len;i+=1){\r\n        ownModifiers[i].closed = true;\r\n    }\r\n};\r\n\r\nCVShapeElement.prototype.renderInnerContent = function() {\r\n    this.transformHelper.opacity = 1;\r\n    this.transformHelper._opMdf = false;\r\n    this.renderModifiers();\r\n    this.transformsManager.processSequences(this._isFirstFrame);\r\n    this.renderShape(this.transformHelper,this.shapesData,this.itemsData,true);\r\n};\r\n\r\nCVShapeElement.prototype.renderShapeTransform = function(parentTransform, groupTransform) {\r\n    var props, groupMatrix;\r\n    if(parentTransform._opMdf || groupTransform.op._mdf || this._isFirstFrame) {\r\n        groupTransform.opacity = parentTransform.opacity;\r\n        groupTransform.opacity *= groupTransform.op.v;\r\n        groupTransform._opMdf = true;\r\n    }\r\n};\r\n\r\nCVShapeElement.prototype.drawLayer = function() {\r\n    var i, len = this.stylesList.length;\r\n    var j, jLen, k, kLen,elems,nodes, renderer = this.globalData.renderer, ctx = this.globalData.canvasContext, type, currentStyle;\r\n    for(i=0;i<len;i+=1){\r\n        currentStyle = this.stylesList[i];\r\n        type = currentStyle.type;\r\n\r\n        //Skipping style when\r\n        //Stroke width equals 0\r\n        //style should not be rendered (extra unused repeaters)\r\n        //current opacity equals 0\r\n        //global opacity equals 0\r\n        if(((type === 'st' || type === 'gs') && currentStyle.wi === 0) || !currentStyle.data._shouldRender || currentStyle.coOp === 0 || this.globalData.currentGlobalAlpha === 0){\r\n            continue;\r\n        }\r\n        renderer.save();\r\n        elems = currentStyle.elements;\r\n        if(type === 'st' || type === 'gs'){\r\n            ctx.strokeStyle = type === 'st' ? currentStyle.co : currentStyle.grd;\r\n            ctx.lineWidth = currentStyle.wi;\r\n            ctx.lineCap = currentStyle.lc;\r\n            ctx.lineJoin = currentStyle.lj;\r\n            ctx.miterLimit = currentStyle.ml || 0;\r\n        } else {\r\n            ctx.fillStyle = type === 'fl' ? currentStyle.co : currentStyle.grd;\r\n        }\r\n        renderer.ctxOpacity(currentStyle.coOp);\r\n        if(type !== 'st' && type !== 'gs'){\r\n            ctx.beginPath();\r\n        }\r\n        renderer.ctxTransform(currentStyle.preTransforms.finalTransform.props);\r\n        jLen = elems.length;\r\n        for(j=0;j<jLen;j+=1){\r\n            if(type === 'st' || type === 'gs'){\r\n                ctx.beginPath();\r\n                if(currentStyle.da){\r\n                    ctx.setLineDash(currentStyle.da);\r\n                    ctx.lineDashOffset = currentStyle.do;\r\n                }\r\n            }\r\n            nodes = elems[j].trNodes;\r\n            kLen = nodes.length;\r\n\r\n            for(k=0;k<kLen;k+=1){\r\n                if(nodes[k].t == 'm'){\r\n                    ctx.moveTo(nodes[k].p[0],nodes[k].p[1]);\r\n                }else if(nodes[k].t == 'c'){\r\n                    ctx.bezierCurveTo(nodes[k].pts[0],nodes[k].pts[1],nodes[k].pts[2],nodes[k].pts[3],nodes[k].pts[4],nodes[k].pts[5]);\r\n                }else{\r\n                    ctx.closePath();\r\n                }\r\n            }\r\n            if(type === 'st' || type === 'gs'){\r\n                ctx.stroke();\r\n                if(currentStyle.da){\r\n                    ctx.setLineDash(this.dashResetter);\r\n                }\r\n            }\r\n        }\r\n        if(type !== 'st' && type !== 'gs'){\r\n            ctx.fill(currentStyle.r);\r\n        }\r\n        renderer.restore();\r\n    }\r\n};\r\n\r\nCVShapeElement.prototype.renderShape = function(parentTransform,items,data,isMain){\r\n    var i, len = items.length - 1;\r\n    var groupTransform;\r\n    groupTransform = parentTransform;\r\n    for(i=len;i>=0;i-=1){\r\n        if(items[i].ty == 'tr'){\r\n            groupTransform = data[i].transform;\r\n            this.renderShapeTransform(parentTransform, groupTransform);\r\n        }else if(items[i].ty == 'sh' || items[i].ty == 'el' || items[i].ty == 'rc' || items[i].ty == 'sr'){\r\n            this.renderPath(items[i],data[i]);\r\n        }else if(items[i].ty == 'fl'){\r\n            this.renderFill(items[i],data[i],groupTransform);\r\n        }else if(items[i].ty == 'st'){\r\n            this.renderStroke(items[i],data[i],groupTransform);\r\n        }else if(items[i].ty == 'gf' || items[i].ty == 'gs'){\r\n            this.renderGradientFill(items[i],data[i],groupTransform);\r\n        }else if(items[i].ty == 'gr'){\r\n            this.renderShape(groupTransform,items[i].it,data[i].it);\r\n        }else if(items[i].ty == 'tm'){\r\n            //\r\n        }\r\n    }\r\n    if(isMain){\r\n        this.drawLayer();\r\n    }\r\n    \r\n};\r\n\r\nCVShapeElement.prototype.renderStyledShape = function(styledShape, shape){\r\n    if(this._isFirstFrame || shape._mdf || styledShape.transforms._mdf) {\r\n        var shapeNodes = styledShape.trNodes;\r\n        var paths = shape.paths;\r\n        var i, len, j, jLen = paths._length;\r\n        shapeNodes.length = 0;\r\n        var groupTransformMat = styledShape.transforms.finalTransform;\r\n        for (j = 0; j < jLen; j += 1) {\r\n            var pathNodes = paths.shapes[j];\r\n            if(pathNodes && pathNodes.v){\r\n                len = pathNodes._length;\r\n                for (i = 1; i < len; i += 1) {\r\n                    if (i === 1) {\r\n                        shapeNodes.push({\r\n                            t: 'm',\r\n                            p: groupTransformMat.applyToPointArray(pathNodes.v[0][0], pathNodes.v[0][1], 0)\r\n                        });\r\n                    }\r\n                    shapeNodes.push({\r\n                        t: 'c',\r\n                        pts: groupTransformMat.applyToTriplePoints(pathNodes.o[i - 1], pathNodes.i[i], pathNodes.v[i])\r\n                    });\r\n                }\r\n                if (len === 1) {\r\n                    shapeNodes.push({\r\n                        t: 'm',\r\n                        p: groupTransformMat.applyToPointArray(pathNodes.v[0][0], pathNodes.v[0][1], 0)\r\n                    });\r\n                }\r\n                if (pathNodes.c && len) {\r\n                    shapeNodes.push({\r\n                        t: 'c',\r\n                        pts: groupTransformMat.applyToTriplePoints(pathNodes.o[i - 1], pathNodes.i[0], pathNodes.v[0])\r\n                    });\r\n                    shapeNodes.push({\r\n                        t: 'z'\r\n                    });\r\n                }\r\n            }\r\n        }\r\n        styledShape.trNodes = shapeNodes;\r\n    }\r\n}\r\n\r\nCVShapeElement.prototype.renderPath = function(pathData,itemData){\r\n    if(pathData.hd !== true && pathData._shouldRender) {\r\n        var i, len = itemData.styledShapes.length;\r\n        for (i = 0; i < len; i += 1) {\r\n            this.renderStyledShape(itemData.styledShapes[i], itemData.sh);\r\n        }\r\n    }\r\n};\r\n\r\nCVShapeElement.prototype.renderFill = function(styleData,itemData, groupTransform){\r\n    var styleElem = itemData.style;\r\n\r\n    if (itemData.c._mdf || this._isFirstFrame) {\r\n        styleElem.co = 'rgb(' \r\n        + bm_floor(itemData.c.v[0]) + ',' \r\n        + bm_floor(itemData.c.v[1]) + ',' \r\n        + bm_floor(itemData.c.v[2]) + ')';\r\n    }\r\n    if (itemData.o._mdf || groupTransform._opMdf || this._isFirstFrame) {\r\n        styleElem.coOp = itemData.o.v * groupTransform.opacity;\r\n    }\r\n};\r\n\r\nCVShapeElement.prototype.renderGradientFill = function(styleData,itemData, groupTransform){\r\n    var styleElem = itemData.style;\r\n    if(!styleElem.grd || itemData.g._mdf || itemData.s._mdf || itemData.e._mdf || (styleData.t !== 1 && (itemData.h._mdf || itemData.a._mdf))) {\r\n        var ctx = this.globalData.canvasContext;\r\n        var grd;\r\n        var pt1 = itemData.s.v, pt2 = itemData.e.v;\r\n        if (styleData.t === 1) {\r\n            grd = ctx.createLinearGradient(pt1[0], pt1[1], pt2[0], pt2[1]);\r\n        } else {\r\n            var rad = Math.sqrt(Math.pow(pt1[0] - pt2[0], 2) + Math.pow(pt1[1] - pt2[1], 2));\r\n            var ang = Math.atan2(pt2[1] - pt1[1], pt2[0] - pt1[0]);\r\n\r\n            var percent = itemData.h.v >= 1 ? 0.99 : itemData.h.v <= -1 ? -0.99: itemData.h.v;\r\n            var dist = rad * percent;\r\n            var x = Math.cos(ang + itemData.a.v) * dist + pt1[0];\r\n            var y = Math.sin(ang + itemData.a.v) * dist + pt1[1];\r\n            var grd = ctx.createRadialGradient(x, y, 0, pt1[0], pt1[1], rad);\r\n        }\r\n\r\n        var i, len = styleData.g.p;\r\n        var cValues = itemData.g.c;\r\n        var opacity = 1;\r\n\r\n        for (i = 0; i < len; i += 1){\r\n            if(itemData.g._hasOpacity && itemData.g._collapsable) {\r\n                opacity = itemData.g.o[i*2 + 1];\r\n            }\r\n            grd.addColorStop(cValues[i * 4] / 100,'rgba('+ cValues[i * 4 + 1] + ',' + cValues[i * 4 + 2] + ','+cValues[i * 4 + 3] + ',' + opacity + ')');\r\n        }\r\n        styleElem.grd = grd;\r\n    }\r\n    styleElem.coOp = itemData.o.v*groupTransform.opacity;\r\n    \r\n};\r\n\r\nCVShapeElement.prototype.renderStroke = function(styleData,itemData, groupTransform){\r\n    var styleElem = itemData.style;\r\n    var d = itemData.d;\r\n    if(d && (d._mdf  || this._isFirstFrame)){\r\n        styleElem.da = d.dashArray;\r\n        styleElem.do = d.dashoffset[0];\r\n    }\r\n    if(itemData.c._mdf || this._isFirstFrame){\r\n        styleElem.co = 'rgb('+bm_floor(itemData.c.v[0])+','+bm_floor(itemData.c.v[1])+','+bm_floor(itemData.c.v[2])+')';\r\n    }\r\n    if(itemData.o._mdf || groupTransform._opMdf || this._isFirstFrame){\r\n        styleElem.coOp = itemData.o.v*groupTransform.opacity;\r\n    }\r\n    if(itemData.w._mdf || this._isFirstFrame){\r\n        styleElem.wi = itemData.w.v;\r\n    }\r\n};\r\n\r\n\r\nCVShapeElement.prototype.destroy = function(){\r\n    this.shapesData = null;\r\n    this.globalData = null;\r\n    this.canvasContext = null;\r\n    this.stylesList.length = 0;\r\n    this.itemsData.length = 0;\r\n};\r\n\r\n\r\nfunction CVSolidElement(data, globalData, comp) {\r\n    this.initElement(data,globalData,comp);\r\n}\r\nextendPrototype([BaseElement, TransformElement, CVBaseElement, HierarchyElement, FrameElement, RenderableElement], CVSolidElement);\r\n\r\nCVSolidElement.prototype.initElement = SVGShapeElement.prototype.initElement;\r\nCVSolidElement.prototype.prepareFrame = IImageElement.prototype.prepareFrame;\r\n\r\nCVSolidElement.prototype.renderInnerContent = function() {\r\n    var ctx = this.canvasContext;\r\n    ctx.fillStyle = this.data.sc;\r\n    ctx.fillRect(0, 0, this.data.sw, this.data.sh);\r\n    //\r\n};\r\nfunction CVTextElement(data, globalData, comp){\r\n    this.textSpans = [];\r\n    this.yOffset = 0;\r\n    this.fillColorAnim = false;\r\n    this.strokeColorAnim = false;\r\n    this.strokeWidthAnim = false;\r\n    this.stroke = false;\r\n    this.fill = false;\r\n    this.justifyOffset = 0;\r\n    this.currentRender = null;\r\n    this.renderType = 'canvas';\r\n    this.values = {\r\n        fill: 'rgba(0,0,0,0)',\r\n        stroke: 'rgba(0,0,0,0)',\r\n        sWidth: 0,\r\n        fValue: ''\r\n    };\r\n    this.initElement(data,globalData,comp);\r\n}\r\nextendPrototype([BaseElement,TransformElement,CVBaseElement,HierarchyElement,FrameElement,RenderableElement,ITextElement], CVTextElement);\r\n\r\nCVTextElement.prototype.tHelper = createTag('canvas').getContext('2d');\r\n\r\nCVTextElement.prototype.buildNewText = function(){\r\n    var documentData = this.textProperty.currentData;\r\n    this.renderedLetters = createSizedArray(documentData.l ? documentData.l.length : 0);\r\n\r\n    var hasFill = false;\r\n    if(documentData.fc) {\r\n        hasFill = true;\r\n        this.values.fill = this.buildColor(documentData.fc);\r\n    }else{\r\n        this.values.fill = 'rgba(0,0,0,0)';\r\n    }\r\n    this.fill = hasFill;\r\n    var hasStroke = false;\r\n    if(documentData.sc){\r\n        hasStroke = true;\r\n        this.values.stroke = this.buildColor(documentData.sc);\r\n        this.values.sWidth = documentData.sw;\r\n    }\r\n    var fontData = this.globalData.fontManager.getFontByName(documentData.f);\r\n    var i, len;\r\n    var letters = documentData.l;\r\n    var matrixHelper = this.mHelper;\r\n    this.stroke = hasStroke;\r\n    this.values.fValue = documentData.finalSize + 'px '+ this.globalData.fontManager.getFontByName(documentData.f).fFamily;\r\n    len = documentData.finalText.length;\r\n    //this.tHelper.font = this.values.fValue;\r\n    var charData, shapeData, k, kLen, shapes, j, jLen, pathNodes, commands, pathArr, singleShape = this.data.singleShape;\r\n    var trackingOffset = documentData.tr/1000*documentData.finalSize;\r\n    var xPos = 0, yPos = 0, firstLine = true;\r\n    var cnt = 0;\r\n    for (i = 0; i < len; i += 1) {\r\n        charData = this.globalData.fontManager.getCharData(documentData.finalText[i], fontData.fStyle, this.globalData.fontManager.getFontByName(documentData.f).fFamily);\r\n        shapeData = charData && charData.data || {};\r\n        matrixHelper.reset();\r\n        if(singleShape && letters[i].n) {\r\n            xPos = -trackingOffset;\r\n            yPos += documentData.yOffset;\r\n            yPos += firstLine ? 1 : 0;\r\n            firstLine = false;\r\n        }\r\n\r\n        shapes = shapeData.shapes ? shapeData.shapes[0].it : [];\r\n        jLen = shapes.length;\r\n        matrixHelper.scale(documentData.finalSize/100,documentData.finalSize/100);\r\n        if(singleShape){\r\n            this.applyTextPropertiesToMatrix(documentData, matrixHelper, letters[i].line, xPos, yPos);\r\n        }\r\n        commands = createSizedArray(jLen);\r\n        for(j=0;j<jLen;j+=1){\r\n            kLen = shapes[j].ks.k.i.length;\r\n            pathNodes = shapes[j].ks.k;\r\n            pathArr = [];\r\n            for(k=1;k<kLen;k+=1){\r\n                if(k==1){\r\n                    pathArr.push(matrixHelper.applyToX(pathNodes.v[0][0],pathNodes.v[0][1],0),matrixHelper.applyToY(pathNodes.v[0][0],pathNodes.v[0][1],0));\r\n                }\r\n                pathArr.push(matrixHelper.applyToX(pathNodes.o[k-1][0],pathNodes.o[k-1][1],0),matrixHelper.applyToY(pathNodes.o[k-1][0],pathNodes.o[k-1][1],0),matrixHelper.applyToX(pathNodes.i[k][0],pathNodes.i[k][1],0),matrixHelper.applyToY(pathNodes.i[k][0],pathNodes.i[k][1],0),matrixHelper.applyToX(pathNodes.v[k][0],pathNodes.v[k][1],0),matrixHelper.applyToY(pathNodes.v[k][0],pathNodes.v[k][1],0));\r\n            }\r\n            pathArr.push(matrixHelper.applyToX(pathNodes.o[k-1][0],pathNodes.o[k-1][1],0),matrixHelper.applyToY(pathNodes.o[k-1][0],pathNodes.o[k-1][1],0),matrixHelper.applyToX(pathNodes.i[0][0],pathNodes.i[0][1],0),matrixHelper.applyToY(pathNodes.i[0][0],pathNodes.i[0][1],0),matrixHelper.applyToX(pathNodes.v[0][0],pathNodes.v[0][1],0),matrixHelper.applyToY(pathNodes.v[0][0],pathNodes.v[0][1],0));\r\n            commands[j] = pathArr;\r\n        }\r\n        if(singleShape){\r\n            xPos += letters[i].l;\r\n            xPos += trackingOffset;\r\n        }\r\n        if(this.textSpans[cnt]){\r\n            this.textSpans[cnt].elem = commands;\r\n        } else {\r\n            this.textSpans[cnt] = {elem: commands};\r\n        }\r\n        cnt +=1;\r\n    }\r\n};\r\n\r\nCVTextElement.prototype.renderInnerContent = function(){\r\n    var ctx = this.canvasContext;\r\n    var finalMat = this.finalTransform.mat.props;\r\n    ctx.font = this.values.fValue;\r\n    ctx.lineCap = 'butt';\r\n    ctx.lineJoin = 'miter';\r\n    ctx.miterLimit = 4;\r\n\r\n    if(!this.data.singleShape){\r\n        this.textAnimator.getMeasures(this.textProperty.currentData, this.lettersChangedFlag);\r\n    }\r\n\r\n    var  i,len, j, jLen, k, kLen;\r\n    var renderedLetters = this.textAnimator.renderedLetters;\r\n\r\n    var letters = this.textProperty.currentData.l;\r\n\r\n    len = letters.length;\r\n    var renderedLetter;\r\n    var lastFill = null, lastStroke = null, lastStrokeW = null, commands, pathArr;\r\n    for(i=0;i<len;i+=1){\r\n        if(letters[i].n){\r\n            continue;\r\n        }\r\n        renderedLetter = renderedLetters[i];\r\n        if(renderedLetter){\r\n            this.globalData.renderer.save();\r\n            this.globalData.renderer.ctxTransform(renderedLetter.p);\r\n            this.globalData.renderer.ctxOpacity(renderedLetter.o);\r\n        }\r\n        if(this.fill){\r\n            if(renderedLetter && renderedLetter.fc){\r\n                if(lastFill !== renderedLetter.fc){\r\n                    lastFill = renderedLetter.fc;\r\n                    ctx.fillStyle = renderedLetter.fc;\r\n                }\r\n            }else if(lastFill !== this.values.fill){\r\n                lastFill = this.values.fill;\r\n                ctx.fillStyle = this.values.fill;\r\n            }\r\n            commands = this.textSpans[i].elem;\r\n            jLen = commands.length;\r\n            this.globalData.canvasContext.beginPath();\r\n            for(j=0;j<jLen;j+=1) {\r\n                pathArr = commands[j];\r\n                kLen = pathArr.length;\r\n                this.globalData.canvasContext.moveTo(pathArr[0], pathArr[1]);\r\n                for (k = 2; k < kLen; k += 6) {\r\n                    this.globalData.canvasContext.bezierCurveTo(pathArr[k], pathArr[k + 1], pathArr[k + 2], pathArr[k + 3], pathArr[k + 4], pathArr[k + 5]);\r\n                }\r\n            }\r\n            this.globalData.canvasContext.closePath();\r\n            this.globalData.canvasContext.fill();\r\n            ///ctx.fillText(this.textSpans[i].val,0,0);\r\n        }\r\n        if(this.stroke){\r\n            if(renderedLetter && renderedLetter.sw){\r\n                if(lastStrokeW !== renderedLetter.sw){\r\n                    lastStrokeW = renderedLetter.sw;\r\n                    ctx.lineWidth = renderedLetter.sw;\r\n                }\r\n            }else if(lastStrokeW !== this.values.sWidth){\r\n                lastStrokeW = this.values.sWidth;\r\n                ctx.lineWidth = this.values.sWidth;\r\n            }\r\n            if(renderedLetter && renderedLetter.sc){\r\n                if(lastStroke !== renderedLetter.sc){\r\n                    lastStroke = renderedLetter.sc;\r\n                    ctx.strokeStyle = renderedLetter.sc;\r\n                }\r\n            }else if(lastStroke !== this.values.stroke){\r\n                lastStroke = this.values.stroke;\r\n                ctx.strokeStyle = this.values.stroke;\r\n            }\r\n            commands = this.textSpans[i].elem;\r\n            jLen = commands.length;\r\n            this.globalData.canvasContext.beginPath();\r\n            for(j=0;j<jLen;j+=1) {\r\n                pathArr = commands[j];\r\n                kLen = pathArr.length;\r\n                this.globalData.canvasContext.moveTo(pathArr[0], pathArr[1]);\r\n                for (k = 2; k < kLen; k += 6) {\r\n                    this.globalData.canvasContext.bezierCurveTo(pathArr[k], pathArr[k + 1], pathArr[k + 2], pathArr[k + 3], pathArr[k + 4], pathArr[k + 5]);\r\n                }\r\n            }\r\n            this.globalData.canvasContext.closePath();\r\n            this.globalData.canvasContext.stroke();\r\n            ///ctx.strokeText(letters[i].val,0,0);\r\n        }\r\n        if(renderedLetter) {\r\n            this.globalData.renderer.restore();\r\n        }\r\n    }\r\n};\r\nfunction CVEffects() {\r\n\r\n}\r\nCVEffects.prototype.renderFrame = function(){};\r\nfunction HBaseElement(data,globalData,comp){}\r\nHBaseElement.prototype = {\r\n    checkBlendMode: function(){},\r\n    initRendererElement: function(){\r\n        this.baseElement = createTag(this.data.tg || 'div');\r\n        if(this.data.hasMask) {\r\n            this.svgElement = createNS('svg');\r\n            this.layerElement = createNS('g');\r\n            this.maskedElement = this.layerElement;\r\n            this.svgElement.appendChild(this.layerElement);\r\n            this.baseElement.appendChild(this.svgElement);\r\n        } else {\r\n            this.layerElement = this.baseElement;\r\n        }\r\n        styleDiv(this.baseElement);\r\n    },\r\n    createContainerElements: function(){\r\n        this.renderableEffectsManager = new CVEffects(this);\r\n        this.transformedElement = this.baseElement;\r\n        this.maskedElement = this.layerElement;\r\n        if (this.data.ln) {\r\n            this.layerElement.setAttribute('id',this.data.ln);\r\n        }\r\n        if (this.data.cl) {\r\n            this.layerElement.setAttribute('class', this.data.cl);\r\n        }\r\n        if (this.data.bm !== 0) {\r\n            this.setBlendMode();\r\n        }\r\n    },\r\n    renderElement: function() {\r\n        if(this.finalTransform._matMdf){\r\n            this.transformedElement.style.transform = this.transformedElement.style.webkitTransform = this.finalTransform.mat.toCSS();\r\n        }\r\n        if(this.finalTransform._opMdf){\r\n            this.transformedElement.style.opacity = this.finalTransform.mProp.o.v;\r\n        }\r\n    },\r\n    renderFrame: function() {\r\n        //If it is exported as hidden (data.hd === true) no need to render\r\n        //If it is not visible no need to render\r\n        if (this.data.hd || this.hidden) {\r\n            return;\r\n        }\r\n        this.renderTransform();\r\n        this.renderRenderable();\r\n        this.renderElement();\r\n        this.renderInnerContent();\r\n        if (this._isFirstFrame) {\r\n            this._isFirstFrame = false;\r\n        }\r\n    },\r\n    destroy: function(){\r\n        this.layerElement = null;\r\n        this.transformedElement = null;\r\n        if(this.matteElement) {\r\n            this.matteElement = null;\r\n        }\r\n        if(this.maskManager) {\r\n            this.maskManager.destroy();\r\n            this.maskManager = null;\r\n        }\r\n    },\r\n    createRenderableComponents: function(){\r\n        this.maskManager = new MaskElement(this.data, this, this.globalData);\r\n    },\r\n    addEffects: function(){\r\n    },\r\n    setMatte: function(){}\r\n};\r\nHBaseElement.prototype.getBaseElement = SVGBaseElement.prototype.getBaseElement;\r\nHBaseElement.prototype.destroyBaseElement = HBaseElement.prototype.destroy;\r\nHBaseElement.prototype.buildElementParenting = HybridRenderer.prototype.buildElementParenting;\r\nfunction HSolidElement(data,globalData,comp){\r\n    this.initElement(data,globalData,comp);\r\n}\r\nextendPrototype([BaseElement,TransformElement,HBaseElement,HierarchyElement,FrameElement,RenderableDOMElement], HSolidElement);\r\n\r\nHSolidElement.prototype.createContent = function(){\r\n    var rect;\r\n    if(this.data.hasMask){\r\n        rect = createNS('rect');\r\n        rect.setAttribute('width',this.data.sw);\r\n        rect.setAttribute('height',this.data.sh);\r\n        rect.setAttribute('fill',this.data.sc);\r\n        this.svgElement.setAttribute('width',this.data.sw);\r\n        this.svgElement.setAttribute('height',this.data.sh);\r\n    } else {\r\n        rect = createTag('div');\r\n        rect.style.width = this.data.sw + 'px';\r\n        rect.style.height = this.data.sh + 'px';\r\n        rect.style.backgroundColor = this.data.sc;\r\n    }\r\n    this.layerElement.appendChild(rect);\r\n};\r\n\r\nfunction HCompElement(data,globalData,comp){\r\n    this.layers = data.layers;\r\n    this.supports3d = !data.hasMask;\r\n    this.completeLayers = false;\r\n    this.pendingElements = [];\r\n    this.elements = this.layers ? createSizedArray(this.layers.length) : [];\r\n    this.initElement(data,globalData,comp);\r\n    this.tm = data.tm ? PropertyFactory.getProp(this,data.tm,0,globalData.frameRate,this) : {_placeholder:true};\r\n}\r\n\r\nextendPrototype([HybridRenderer, ICompElement, HBaseElement], HCompElement);\r\nHCompElement.prototype._createBaseContainerElements = HCompElement.prototype.createContainerElements;\r\n\r\nHCompElement.prototype.createContainerElements = function(){\r\n    this._createBaseContainerElements();\r\n    //divElement.style.clip = 'rect(0px, '+this.data.w+'px, '+this.data.h+'px, 0px)';\r\n    if(this.data.hasMask){\r\n        this.svgElement.setAttribute('width',this.data.w);\r\n        this.svgElement.setAttribute('height',this.data.h);\r\n        this.transformedElement = this.baseElement;\r\n    } else {\r\n        this.transformedElement = this.layerElement;\r\n    }\r\n};\r\n\r\nHCompElement.prototype.addTo3dContainer = function(elem,pos) {\r\n    var j = 0;\r\n    var nextElement;\r\n    while(j<pos){\r\n        if(this.elements[j] && this.elements[j].getBaseElement){\r\n            nextElement = this.elements[j].getBaseElement();\r\n        }\r\n        j += 1;\r\n    }\r\n    if(nextElement){\r\n        this.layerElement.insertBefore(elem, nextElement);\r\n    } else {\r\n        this.layerElement.appendChild(elem);\r\n    }\r\n}\r\n\r\nfunction HShapeElement(data,globalData,comp){\r\n    //List of drawable elements\r\n    this.shapes = [];\r\n    // Full shape data\r\n    this.shapesData = data.shapes;\r\n    //List of styles that will be applied to shapes\r\n    this.stylesList = [];\r\n    //List of modifiers that will be applied to shapes\r\n    this.shapeModifiers = [];\r\n    //List of items in shape tree\r\n    this.itemsData = [];\r\n    //List of items in previous shape tree\r\n    this.processedElements = [];\r\n    // List of animated components\r\n    this.animatedContents = [];\r\n    this.shapesContainer = createNS('g');\r\n    this.initElement(data,globalData,comp);\r\n    //Moving any property that doesn't get too much access after initialization because of v8 way of handling more than 10 properties.\r\n    // List of elements that have been created\r\n    this.prevViewData = [];\r\n    this.currentBBox = {\r\n        x:999999,\r\n        y: -999999,\r\n        h: 0,\r\n        w: 0\r\n    };\r\n}\r\nextendPrototype([BaseElement,TransformElement,HSolidElement,SVGShapeElement,HBaseElement,HierarchyElement,FrameElement,RenderableElement], HShapeElement);\r\nHShapeElement.prototype._renderShapeFrame = HShapeElement.prototype.renderInnerContent;\r\n\r\nHShapeElement.prototype.createContent = function(){\r\n    var cont;\r\n    this.baseElement.style.fontSize = 0;\r\n    if (this.data.hasMask) {\r\n        this.layerElement.appendChild(this.shapesContainer);\r\n        cont = this.svgElement;\r\n    } else {\r\n        cont = createNS('svg');\r\n        var size = this.comp.data ? this.comp.data : this.globalData.compSize;\r\n        cont.setAttribute('width',size.w);\r\n        cont.setAttribute('height',size.h);\r\n        cont.appendChild(this.shapesContainer);\r\n        this.layerElement.appendChild(cont);\r\n    }\r\n\r\n    this.searchShapes(this.shapesData,this.itemsData,this.prevViewData,this.shapesContainer,0, [], true);\r\n    this.filterUniqueShapes();\r\n    this.shapeCont = cont;\r\n};\r\n\r\nHShapeElement.prototype.getTransformedPoint = function(transformers, point) {\r\n    var i, len = transformers.length;\r\n    for(i = 0; i < len; i += 1) {\r\n        point = transformers[i].mProps.v.applyToPointArray(point[0], point[1], 0);\r\n    }\r\n    return point;\r\n}\r\n\r\nHShapeElement.prototype.calculateShapeBoundingBox = function(item, boundingBox) {\r\n    var shape = item.sh.v;\r\n    var transformers = item.transformers;\r\n    var i, len = shape._length, vPoint, oPoint, nextIPoint, nextVPoint, bounds;\r\n    if (len <= 1) {\r\n        return;\r\n    }\r\n    for (i = 0; i < len - 1; i += 1) {\r\n        vPoint = this.getTransformedPoint(transformers, shape.v[i]);\r\n        oPoint = this.getTransformedPoint(transformers, shape.o[i]);\r\n        nextIPoint = this.getTransformedPoint(transformers, shape.i[i + 1]);\r\n        nextVPoint = this.getTransformedPoint(transformers, shape.v[i + 1]);\r\n        this.checkBounds(vPoint, oPoint, nextIPoint, nextVPoint, boundingBox);\r\n    }\r\n    if(shape.c) {\r\n        vPoint = this.getTransformedPoint(transformers, shape.v[i]);\r\n        oPoint = this.getTransformedPoint(transformers, shape.o[i]);\r\n        nextIPoint = this.getTransformedPoint(transformers, shape.i[0]);\r\n        nextVPoint = this.getTransformedPoint(transformers, shape.v[0]);\r\n        this.checkBounds(vPoint, oPoint, nextIPoint, nextVPoint, boundingBox);\r\n    }\r\n}\r\n\r\nHShapeElement.prototype.checkBounds = function(vPoint, oPoint, nextIPoint, nextVPoint, boundingBox) {\r\n    this.getBoundsOfCurve(vPoint, oPoint, nextIPoint, nextVPoint);\r\n    var bounds = this.shapeBoundingBox;\r\n    boundingBox.x = bm_min(bounds.left, boundingBox.x);\r\n    boundingBox.xMax = bm_max(bounds.right, boundingBox.xMax);\r\n    boundingBox.y = bm_min(bounds.top, boundingBox.y);\r\n    boundingBox.yMax = bm_max(bounds.bottom, boundingBox.yMax);\r\n}\r\n\r\nHShapeElement.prototype.shapeBoundingBox = {\r\n    left:0,\r\n    right:0,\r\n    top:0,\r\n    bottom:0,\r\n}\r\n\r\nHShapeElement.prototype.tempBoundingBox = {\r\n    x:0,\r\n    xMax:0,\r\n    y:0,\r\n    yMax:0,\r\n    width:0,\r\n    height:0\r\n}\r\n\r\nHShapeElement.prototype.getBoundsOfCurve = function(p0, p1, p2, p3) {\r\n\r\n    var bounds = [[p0[0],p3[0]], [p0[1],p3[1]]];\r\n\r\n    for (var a, b, c, t, b2ac, t1, t2, i = 0; i < 2; ++i) {\r\n\r\n      b = 6 * p0[i] - 12 * p1[i] + 6 * p2[i];\r\n      a = -3 * p0[i] + 9 * p1[i] - 9 * p2[i] + 3 * p3[i];\r\n      c = 3 * p1[i] - 3 * p0[i];\r\n\r\n      b = b | 0;\r\n      a = a | 0;\r\n      c = c | 0;\r\n\r\n      if (a === 0) {\r\n\r\n        if (b === 0) {\r\n          continue;\r\n        }\r\n\r\n        t = -c / b;\r\n\r\n        if (0 < t && t < 1) {\r\n          bounds[i].push(this.calculateF(t,p0,p1,p2,p3,i));\r\n        }\r\n        continue;\r\n      }\r\n\r\n      b2ac = b * b - 4 * c * a;\r\n\r\n      if (b2ac < 0) {\r\n        continue;\r\n      }\r\n\r\n      t1 = (-b + bm_sqrt(b2ac))/(2 * a);\r\n      if (0 < t1 && t1 < 1) bounds[i].push(this.calculateF(t1,p0,p1,p2,p3,i));\r\n\r\n      t2 = (-b - bm_sqrt(b2ac))/(2 * a);\r\n      if (0 < t2 && t2 < 1) bounds[i].push(this.calculateF(t2,p0,p1,p2,p3,i));\r\n\r\n    }\r\n\r\n    this.shapeBoundingBox.left = bm_min.apply(null, bounds[0]);\r\n    this.shapeBoundingBox.top = bm_min.apply(null, bounds[1]);\r\n    this.shapeBoundingBox.right = bm_max.apply(null, bounds[0]);\r\n    this.shapeBoundingBox.bottom = bm_max.apply(null, bounds[1]);\r\n  };\r\n\r\n  HShapeElement.prototype.calculateF = function(t, p0, p1, p2, p3, i) {\r\n    return bm_pow(1-t, 3) * p0[i]\r\n        + 3 * bm_pow(1-t, 2) * t * p1[i]\r\n        + 3 * (1-t) * bm_pow(t, 2) * p2[i]\r\n        + bm_pow(t, 3) * p3[i];\r\n  }\r\n\r\nHShapeElement.prototype.calculateBoundingBox = function(itemsData, boundingBox) {\r\n    var i, len = itemsData.length, path;\r\n    for(i = 0; i < len; i += 1) {\r\n        if(itemsData[i] && itemsData[i].sh) {\r\n            this.calculateShapeBoundingBox(itemsData[i], boundingBox)\r\n        } else if(itemsData[i] && itemsData[i].it) {\r\n            this.calculateBoundingBox(itemsData[i].it, boundingBox)\r\n        }\r\n    }\r\n}\r\n\r\nHShapeElement.prototype.currentBoxContains = function(box) {\r\n    return this.currentBBox.x <= box.x \r\n    && this.currentBBox.y <= box.y \r\n    && this.currentBBox.width + this.currentBBox.x >= box.x + box.width\r\n    && this.currentBBox.height + this.currentBBox.y >= box.y + box.height\r\n}\r\n\r\nHShapeElement.prototype.renderInnerContent = function() {\r\n    this._renderShapeFrame();\r\n\r\n    if(!this.hidden && (this._isFirstFrame || this._mdf)) {\r\n        var tempBoundingBox = this.tempBoundingBox;\r\n        var max = 999999;\r\n        tempBoundingBox.x = max;\r\n        tempBoundingBox.xMax = -max;\r\n        tempBoundingBox.y = max;\r\n        tempBoundingBox.yMax = -max;\r\n        this.calculateBoundingBox(this.itemsData, tempBoundingBox);\r\n        tempBoundingBox.width = tempBoundingBox.xMax < tempBoundingBox.x ? 0 : tempBoundingBox.xMax - tempBoundingBox.x;\r\n        tempBoundingBox.height = tempBoundingBox.yMax < tempBoundingBox.y ? 0 : tempBoundingBox.yMax - tempBoundingBox.y;\r\n        //var tempBoundingBox = this.shapeCont.getBBox();\r\n        if(this.currentBoxContains(tempBoundingBox)) {\r\n            return;\r\n        }\r\n        var changed = false;\r\n        if(this.currentBBox.w !== tempBoundingBox.width){\r\n            this.currentBBox.w = tempBoundingBox.width;\r\n            this.shapeCont.setAttribute('width',tempBoundingBox.width);\r\n            changed = true;\r\n        }\r\n        if(this.currentBBox.h !== tempBoundingBox.height){\r\n            this.currentBBox.h = tempBoundingBox.height;\r\n            this.shapeCont.setAttribute('height',tempBoundingBox.height);\r\n            changed = true;\r\n        }\r\n        if(changed  || this.currentBBox.x !== tempBoundingBox.x  || this.currentBBox.y !== tempBoundingBox.y){\r\n            this.currentBBox.w = tempBoundingBox.width;\r\n            this.currentBBox.h = tempBoundingBox.height;\r\n            this.currentBBox.x = tempBoundingBox.x;\r\n            this.currentBBox.y = tempBoundingBox.y;\r\n\r\n            this.shapeCont.setAttribute('viewBox',this.currentBBox.x+' '+this.currentBBox.y+' '+this.currentBBox.w+' '+this.currentBBox.h);\r\n            this.shapeCont.style.transform = this.shapeCont.style.webkitTransform = 'translate(' + this.currentBBox.x + 'px,' + this.currentBBox.y + 'px)';\r\n        }\r\n    }\r\n\r\n};\r\nfunction HTextElement(data,globalData,comp){\r\n    this.textSpans = [];\r\n    this.textPaths = [];\r\n    this.currentBBox = {\r\n        x:999999,\r\n        y: -999999,\r\n        h: 0,\r\n        w: 0\r\n    };\r\n    this.renderType = 'svg';\r\n    this.isMasked = false;\r\n    this.initElement(data,globalData,comp);\r\n\r\n}\r\nextendPrototype([BaseElement,TransformElement,HBaseElement,HierarchyElement,FrameElement,RenderableDOMElement,ITextElement], HTextElement);\r\n\r\nHTextElement.prototype.createContent = function(){\r\n    this.isMasked = this.checkMasks();\r\n    if(this.isMasked){\r\n        this.renderType = 'svg';\r\n        this.compW = this.comp.data.w;\r\n        this.compH = this.comp.data.h;\r\n        this.svgElement.setAttribute('width',this.compW);\r\n        this.svgElement.setAttribute('height',this.compH);\r\n        var g = createNS('g');\r\n        this.maskedElement.appendChild(g);\r\n        this.innerElem = g;\r\n    } else {\r\n        this.renderType = 'html';\r\n        this.innerElem = this.layerElement;\r\n    }\r\n\r\n    this.checkParenting();\r\n\r\n};\r\n\r\nHTextElement.prototype.buildNewText = function(){\r\n    var documentData = this.textProperty.currentData;\r\n    this.renderedLetters = createSizedArray(documentData.l ? documentData.l.length : 0);\r\n    var innerElemStyle = this.innerElem.style;\r\n    innerElemStyle.color = innerElemStyle.fill = documentData.fc ? this.buildColor(documentData.fc) : 'rgba(0,0,0,0)';\r\n    if(documentData.sc){\r\n        innerElemStyle.stroke = this.buildColor(documentData.sc);\r\n        innerElemStyle.strokeWidth = documentData.sw+'px';\r\n    }\r\n    var fontData = this.globalData.fontManager.getFontByName(documentData.f);\r\n    if(!this.globalData.fontManager.chars){\r\n        innerElemStyle.fontSize = documentData.finalSize+'px';\r\n        innerElemStyle.lineHeight = documentData.finalSize+'px';\r\n        if(fontData.fClass){\r\n            this.innerElem.className = fontData.fClass;\r\n        } else {\r\n            innerElemStyle.fontFamily = fontData.fFamily;\r\n            var fWeight = documentData.fWeight, fStyle = documentData.fStyle;\r\n            innerElemStyle.fontStyle = fStyle;\r\n            innerElemStyle.fontWeight = fWeight;\r\n        }\r\n    }\r\n    var i, len;\r\n\r\n    var letters = documentData.l;\r\n    len = letters.length;\r\n    var tSpan,tParent,tCont;\r\n    var matrixHelper = this.mHelper;\r\n    var shapes, shapeStr = '';\r\n    var cnt = 0;\r\n    for (i = 0;i < len ;i += 1) {\r\n        if(this.globalData.fontManager.chars){\r\n            if(!this.textPaths[cnt]){\r\n                tSpan = createNS('path');\r\n                tSpan.setAttribute('stroke-linecap', 'butt');\r\n                tSpan.setAttribute('stroke-linejoin','round');\r\n                tSpan.setAttribute('stroke-miterlimit','4');\r\n            } else {\r\n                tSpan = this.textPaths[cnt];\r\n            }\r\n            if(!this.isMasked){\r\n                if(this.textSpans[cnt]){\r\n                    tParent = this.textSpans[cnt];\r\n                    tCont = tParent.children[0];\r\n                } else {\r\n\r\n                    tParent = createTag('div');\r\n                    tParent.style.lineHeight = 0;\r\n                    tCont = createNS('svg');\r\n                    tCont.appendChild(tSpan);\r\n                    styleDiv(tParent);\r\n                }\r\n            }\r\n        }else{\r\n            if(!this.isMasked){\r\n                if(this.textSpans[cnt]){\r\n                    tParent = this.textSpans[cnt];\r\n                    tSpan = this.textPaths[cnt];\r\n                } else {\r\n                    tParent = createTag('span');\r\n                    styleDiv(tParent);\r\n                    tSpan = createTag('span');\r\n                    styleDiv(tSpan);\r\n                    tParent.appendChild(tSpan);\r\n                }\r\n            } else {\r\n                tSpan = this.textPaths[cnt] ? this.textPaths[cnt] : createNS('text');\r\n            }\r\n        }\r\n        //tSpan.setAttribute('visibility', 'hidden');\r\n        if(this.globalData.fontManager.chars){\r\n            var charData = this.globalData.fontManager.getCharData(documentData.finalText[i], fontData.fStyle, this.globalData.fontManager.getFontByName(documentData.f).fFamily);\r\n            var shapeData;\r\n            if(charData){\r\n                shapeData = charData.data;\r\n            } else {\r\n                shapeData = null;\r\n            }\r\n            matrixHelper.reset();\r\n            if(shapeData && shapeData.shapes){\r\n                shapes = shapeData.shapes[0].it;\r\n                matrixHelper.scale(documentData.finalSize/100,documentData.finalSize/100);\r\n                shapeStr = this.createPathShape(matrixHelper,shapes);\r\n                tSpan.setAttribute('d',shapeStr);\r\n            }\r\n            if(!this.isMasked){\r\n                this.innerElem.appendChild(tParent);\r\n                if(shapeData && shapeData.shapes){\r\n\r\n                    //document.body.appendChild is needed to get exact measure of shape\r\n                    document.body.appendChild(tCont);\r\n                    var boundingBox = tCont.getBBox();\r\n                    tCont.setAttribute('width',boundingBox.width + 2);\r\n                    tCont.setAttribute('height',boundingBox.height + 2);\r\n                    tCont.setAttribute('viewBox',(boundingBox.x-1)+' '+ (boundingBox.y-1)+' '+ (boundingBox.width+2)+' '+ (boundingBox.height+2));\r\n                    tCont.style.transform = tCont.style.webkitTransform = 'translate(' + (boundingBox.x-1) + 'px,' + (boundingBox.y-1) + 'px)';\r\n\r\n                    letters[i].yOffset = boundingBox.y-1;\r\n\r\n                } else{\r\n                    tCont.setAttribute('width',1);\r\n                    tCont.setAttribute('height',1);\r\n                }\r\n                    tParent.appendChild(tCont);\r\n            }else{\r\n                this.innerElem.appendChild(tSpan);\r\n            }\r\n        }else{\r\n            tSpan.textContent = letters[i].val;\r\n            tSpan.setAttributeNS(\"http://www.w3.org/XML/1998/namespace\", \"xml:space\",\"preserve\");\r\n            if(!this.isMasked){\r\n                this.innerElem.appendChild(tParent);\r\n                //\r\n                tSpan.style.transform = tSpan.style.webkitTransform = 'translate3d(0,'+ -documentData.finalSize/1.2+'px,0)';\r\n            } else {\r\n                this.innerElem.appendChild(tSpan);\r\n            }\r\n        }\r\n        //\r\n        if(!this.isMasked){\r\n            this.textSpans[cnt] = tParent;\r\n        }else{\r\n            this.textSpans[cnt] = tSpan;\r\n        }\r\n        this.textSpans[cnt].style.display = 'block';\r\n        this.textPaths[cnt] = tSpan;\r\n        cnt += 1;\r\n    }\r\n    while(cnt < this.textSpans.length){\r\n        this.textSpans[cnt].style.display = 'none';\r\n        cnt += 1;\r\n    }\r\n};\r\n\r\nHTextElement.prototype.renderInnerContent = function() {\r\n\r\n    if(this.data.singleShape){\r\n        if(!this._isFirstFrame && !this.lettersChangedFlag){\r\n            return;\r\n        } else {\r\n            // Todo Benchmark if using this is better than getBBox\r\n             if(this.isMasked && this.finalTransform._matMdf){\r\n                 this.svgElement.setAttribute('viewBox',-this.finalTransform.mProp.p.v[0]+' '+ -this.finalTransform.mProp.p.v[1]+' '+this.compW+' '+this.compH);\r\n                this.svgElement.style.transform = this.svgElement.style.webkitTransform = 'translate(' + -this.finalTransform.mProp.p.v[0] + 'px,' + -this.finalTransform.mProp.p.v[1] + 'px)';\r\n             }\r\n        }\r\n    }\r\n\r\n    this.textAnimator.getMeasures(this.textProperty.currentData, this.lettersChangedFlag);\r\n    if(!this.lettersChangedFlag && !this.textAnimator.lettersChangedFlag){\r\n        return;\r\n    }\r\n    var  i,len, count = 0;\r\n    var renderedLetters = this.textAnimator.renderedLetters;\r\n\r\n    var letters = this.textProperty.currentData.l;\r\n\r\n    len = letters.length;\r\n    var renderedLetter, textSpan, textPath;\r\n    for(i=0;i<len;i+=1){\r\n        if(letters[i].n){\r\n            count += 1;\r\n            continue;\r\n        }\r\n        textSpan = this.textSpans[i];\r\n        textPath = this.textPaths[i];\r\n        renderedLetter = renderedLetters[count];\r\n        count += 1;\r\n        if(renderedLetter._mdf.m) {\r\n            if(!this.isMasked){\r\n                textSpan.style.transform = textSpan.style.webkitTransform = renderedLetter.m;\r\n            }else{\r\n                textSpan.setAttribute('transform',renderedLetter.m);\r\n            }\r\n        }\r\n        ////textSpan.setAttribute('opacity',renderedLetter.o);\r\n        textSpan.style.opacity = renderedLetter.o;\r\n        if(renderedLetter.sw && renderedLetter._mdf.sw){\r\n            textPath.setAttribute('stroke-width',renderedLetter.sw);\r\n        }\r\n        if(renderedLetter.sc && renderedLetter._mdf.sc){\r\n            textPath.setAttribute('stroke',renderedLetter.sc);\r\n        }\r\n        if(renderedLetter.fc && renderedLetter._mdf.fc){\r\n            textPath.setAttribute('fill',renderedLetter.fc);\r\n            textPath.style.color = renderedLetter.fc;\r\n        }\r\n    }\r\n\r\n    if(this.innerElem.getBBox && !this.hidden && (this._isFirstFrame || this._mdf)){\r\n        var boundingBox = this.innerElem.getBBox();\r\n\r\n        if(this.currentBBox.w !== boundingBox.width){\r\n            this.currentBBox.w = boundingBox.width;\r\n            this.svgElement.setAttribute('width',boundingBox.width);\r\n        }\r\n        if(this.currentBBox.h !== boundingBox.height){\r\n            this.currentBBox.h = boundingBox.height;\r\n            this.svgElement.setAttribute('height',boundingBox.height);\r\n        }\r\n\r\n        var margin = 1;\r\n        if(this.currentBBox.w !== (boundingBox.width + margin*2) || this.currentBBox.h !== (boundingBox.height + margin*2)  || this.currentBBox.x !== (boundingBox.x - margin)  || this.currentBBox.y !== (boundingBox.y - margin)){\r\n            this.currentBBox.w = boundingBox.width + margin*2;\r\n            this.currentBBox.h = boundingBox.height + margin*2;\r\n            this.currentBBox.x = boundingBox.x - margin;\r\n            this.currentBBox.y = boundingBox.y - margin;\r\n\r\n            this.svgElement.setAttribute('viewBox',this.currentBBox.x+' '+this.currentBBox.y+' '+this.currentBBox.w+' '+this.currentBBox.h);\r\n            this.svgElement.style.transform = this.svgElement.style.webkitTransform = 'translate(' + this.currentBBox.x + 'px,' + this.currentBBox.y + 'px)';\r\n        }\r\n    }\r\n};\r\nfunction HImageElement(data,globalData,comp){\r\n    this.assetData = globalData.getAssetData(data.refId);\r\n    this.initElement(data,globalData,comp);\r\n}\r\n\r\nextendPrototype([BaseElement,TransformElement,HBaseElement,HSolidElement,HierarchyElement,FrameElement,RenderableElement], HImageElement);\r\n\r\n\r\nHImageElement.prototype.createContent = function(){\r\n    var assetPath = this.globalData.getAssetsPath(this.assetData);\r\n    var img = new Image();\r\n\r\n    if(this.data.hasMask){\r\n        this.imageElem = createNS('image');\r\n        this.imageElem.setAttribute('width',this.assetData.w+\"px\");\r\n        this.imageElem.setAttribute('height',this.assetData.h+\"px\");\r\n        this.imageElem.setAttributeNS('http://www.w3.org/1999/xlink','href',assetPath);\r\n        this.layerElement.appendChild(this.imageElem);\r\n        this.baseElement.setAttribute('width',this.assetData.w);\r\n        this.baseElement.setAttribute('height',this.assetData.h);\r\n    } else {\r\n        this.layerElement.appendChild(img);\r\n    }\r\n    img.src = assetPath;\r\n    if(this.data.ln){\r\n        this.baseElement.setAttribute('id',this.data.ln);\r\n    }\r\n};\r\nfunction HCameraElement(data,globalData,comp){\r\n    this.initFrame();\r\n    this.initBaseData(data,globalData,comp);\r\n    this.initHierarchy();\r\n    var getProp = PropertyFactory.getProp;\r\n    this.pe = getProp(this,data.pe,0,0,this);\r\n    if(data.ks.p.s){\r\n        this.px = getProp(this,data.ks.p.x,1,0,this);\r\n        this.py = getProp(this,data.ks.p.y,1,0,this);\r\n        this.pz = getProp(this,data.ks.p.z,1,0,this);\r\n    }else{\r\n        this.p = getProp(this,data.ks.p,1,0,this);\r\n    }\r\n    if(data.ks.a){\r\n        this.a = getProp(this,data.ks.a,1,0,this);\r\n    }\r\n    if(data.ks.or.k.length && data.ks.or.k[0].to){\r\n        var i,len = data.ks.or.k.length;\r\n        for(i=0;i<len;i+=1){\r\n            data.ks.or.k[i].to = null;\r\n            data.ks.or.k[i].ti = null;\r\n        }\r\n    }\r\n    this.or = getProp(this,data.ks.or,1,degToRads,this);\r\n    this.or.sh = true;\r\n    this.rx = getProp(this,data.ks.rx,0,degToRads,this);\r\n    this.ry = getProp(this,data.ks.ry,0,degToRads,this);\r\n    this.rz = getProp(this,data.ks.rz,0,degToRads,this);\r\n    this.mat = new Matrix();\r\n    this._prevMat = new Matrix();\r\n    this._isFirstFrame = true;\r\n    \r\n    // TODO: find a better way to make the HCamera element to be compatible with the LayerInterface and TransformInterface.\r\n    this.finalTransform = {\r\n        mProp: this\r\n    };\r\n}\r\nextendPrototype([BaseElement, FrameElement, HierarchyElement], HCameraElement);\r\n\r\nHCameraElement.prototype.setup = function() {\r\n    var i, len = this.comp.threeDElements.length, comp;\r\n    for(i=0;i<len;i+=1){\r\n        //[perspectiveElem,container]\r\n        comp = this.comp.threeDElements[i];\r\n        if(comp.type === '3d') {\r\n            comp.perspectiveElem.style.perspective = comp.perspectiveElem.style.webkitPerspective = this.pe.v+'px';\r\n            comp.container.style.transformOrigin = comp.container.style.mozTransformOrigin = comp.container.style.webkitTransformOrigin = \"0px 0px 0px\";\r\n            comp.perspectiveElem.style.transform = comp.perspectiveElem.style.webkitTransform = 'matrix3d(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1)';\r\n        }\r\n    }\r\n};\r\n\r\nHCameraElement.prototype.createElements = function(){\r\n};\r\n\r\nHCameraElement.prototype.hide = function(){\r\n};\r\n\r\nHCameraElement.prototype.renderFrame = function(){\r\n    var _mdf = this._isFirstFrame;\r\n    var i, len;\r\n    if(this.hierarchy){\r\n        len = this.hierarchy.length;\r\n        for(i=0;i<len;i+=1){\r\n            _mdf = this.hierarchy[i].finalTransform.mProp._mdf || _mdf;\r\n        }\r\n    }\r\n    if(_mdf || this.pe._mdf || (this.p && this.p._mdf) || (this.px && (this.px._mdf || this.py._mdf || this.pz._mdf)) || this.rx._mdf || this.ry._mdf || this.rz._mdf || this.or._mdf || (this.a && this.a._mdf)) {\r\n        this.mat.reset();\r\n\r\n        if(this.hierarchy){\r\n            var mat;\r\n            len = this.hierarchy.length - 1;\r\n            for (i = len; i >= 0; i -= 1) {\r\n                /*mat = this.hierarchy[i].finalTransform.mProp.v.props;\r\n                console.log(mat)\r\n                this.mat.transform(-mat[0],-mat[1],-mat[2],-mat[3],-mat[4],-mat[5],-mat[6],-mat[7],-mat[8],-mat[9],-mat[10],-mat[11],-mat[12],-mat[13],-mat[14],mat[15]);\r\n                console.log(this.mat.props)*/\r\n                var mTransf = this.hierarchy[i].finalTransform.mProp;\r\n                this.mat.translate(-mTransf.p.v[0],-mTransf.p.v[1],mTransf.p.v[2]);\r\n                this.mat.rotateX(-mTransf.or.v[0]).rotateY(-mTransf.or.v[1]).rotateZ(mTransf.or.v[2]);\r\n                this.mat.rotateX(-mTransf.rx.v).rotateY(-mTransf.ry.v).rotateZ(mTransf.rz.v);\r\n                this.mat.scale(1/mTransf.s.v[0],1/mTransf.s.v[1],1/mTransf.s.v[2]);\r\n                this.mat.translate(mTransf.a.v[0],mTransf.a.v[1],mTransf.a.v[2]);\r\n            }\r\n        }\r\n\r\n        if(this.p){\r\n            this.mat.translate(-this.p.v[0],-this.p.v[1],this.p.v[2]);\r\n        }else{\r\n            this.mat.translate(-this.px.v,-this.py.v,this.pz.v);\r\n        }\r\n        if(this.a){\r\n            var diffVector = [this.p.v[0]-this.a.v[0],this.p.v[1]-this.a.v[1],this.p.v[2]-this.a.v[2]];\r\n            var mag = Math.sqrt(Math.pow(diffVector[0],2)+Math.pow(diffVector[1],2)+Math.pow(diffVector[2],2));\r\n            //var lookDir = getNormalizedPoint(getDiffVector(this.a.v,this.p.v));\r\n            var lookDir = [diffVector[0]/mag,diffVector[1]/mag,diffVector[2]/mag];\r\n            var lookLengthOnXZ = Math.sqrt( lookDir[2]*lookDir[2] + lookDir[0]*lookDir[0] );\r\n            var m_rotationX = (Math.atan2( lookDir[1], lookLengthOnXZ ));\r\n            var m_rotationY = (Math.atan2( lookDir[0], -lookDir[2]));\r\n            this.mat.rotateY(m_rotationY).rotateX(-m_rotationX);\r\n\r\n        }\r\n        this.mat.rotateX(-this.rx.v).rotateY(-this.ry.v).rotateZ(this.rz.v);\r\n        this.mat.rotateX(-this.or.v[0]).rotateY(-this.or.v[1]).rotateZ(this.or.v[2]);\r\n        this.mat.translate(this.globalData.compSize.w/2,this.globalData.compSize.h/2,0);\r\n        this.mat.translate(0,0,this.pe.v);\r\n\r\n\r\n        \r\n\r\n        var hasMatrixChanged = !this._prevMat.equals(this.mat);\r\n        if((hasMatrixChanged || this.pe._mdf) && this.comp.threeDElements) {\r\n            len = this.comp.threeDElements.length;\r\n            var comp;\r\n            for(i=0;i<len;i+=1){\r\n                comp = this.comp.threeDElements[i];\r\n                if(comp.type === '3d') {\r\n                    if(hasMatrixChanged) {\r\n                        comp.container.style.transform = comp.container.style.webkitTransform = this.mat.toCSS();\r\n                    }\r\n                    if(this.pe._mdf) {\r\n                        comp.perspectiveElem.style.perspective = comp.perspectiveElem.style.webkitPerspective = this.pe.v+'px';\r\n                    }\r\n                }\r\n            }\r\n            this.mat.clone(this._prevMat);\r\n        }\r\n    }\r\n    this._isFirstFrame = false;\r\n};\r\n\r\nHCameraElement.prototype.prepareFrame = function(num) {\r\n    this.prepareProperties(num, true);\r\n};\r\n\r\nHCameraElement.prototype.destroy = function(){\r\n};\r\nHCameraElement.prototype.getBaseElement = function(){return null;};\r\nfunction HEffects() {\r\n}\r\nHEffects.prototype.renderFrame = function(){};\r\nvar animationManager = (function(){\r\n    var moduleOb = {};\r\n    var registeredAnimations = [];\r\n    var initTime = 0;\r\n    var len = 0;\r\n    var playingAnimationsNum = 0;\r\n    var _stopped = true;\r\n    var _isFrozen = false;\r\n\r\n    function removeElement(ev){\r\n        var i = 0;\r\n        var animItem = ev.target;\r\n        while(i<len) {\r\n            if (registeredAnimations[i].animation === animItem) {\r\n                registeredAnimations.splice(i, 1);\r\n                i -= 1;\r\n                len -= 1;\r\n                if(!animItem.isPaused){\r\n                    subtractPlayingCount();\r\n                }\r\n            }\r\n            i += 1;\r\n        }\r\n    }\r\n\r\n    function registerAnimation(element, animationData){\r\n        if(!element){\r\n            return null;\r\n        }\r\n        var i=0;\r\n        while(i<len){\r\n            if(registeredAnimations[i].elem == element && registeredAnimations[i].elem !== null ){\r\n                return registeredAnimations[i].animation;\r\n            }\r\n            i+=1;\r\n        }\r\n        var animItem = new AnimationItem();\r\n        setupAnimation(animItem, element);\r\n        animItem.setData(element, animationData);\r\n        return animItem;\r\n    }\r\n\r\n    function getRegisteredAnimations() {\r\n        var i, len = registeredAnimations.length;\r\n        var animations = [];\r\n        for(i = 0; i < len; i += 1) {\r\n            animations.push(registeredAnimations[i].animation);\r\n        }\r\n        return animations;\r\n    }\r\n\r\n    function addPlayingCount(){\r\n        playingAnimationsNum += 1;\r\n        activate();\r\n    }\r\n\r\n    function subtractPlayingCount(){\r\n        playingAnimationsNum -= 1;\r\n    }\r\n\r\n    function setupAnimation(animItem, element){\r\n        animItem.addEventListener('destroy',removeElement);\r\n        animItem.addEventListener('_active',addPlayingCount);\r\n        animItem.addEventListener('_idle',subtractPlayingCount);\r\n        registeredAnimations.push({elem: element,animation:animItem});\r\n        len += 1;\r\n    }\r\n\r\n    function loadAnimation(params){\r\n        var animItem = new AnimationItem();\r\n        setupAnimation(animItem, null);\r\n        animItem.setParams(params);\r\n        return animItem;\r\n    }\r\n\r\n\r\n    function setSpeed(val,animation){\r\n        var i;\r\n        for(i=0;i<len;i+=1){\r\n            registeredAnimations[i].animation.setSpeed(val, animation);\r\n        }\r\n    }\r\n\r\n    function setDirection(val, animation){\r\n        var i;\r\n        for(i=0;i<len;i+=1){\r\n            registeredAnimations[i].animation.setDirection(val, animation);\r\n        }\r\n    }\r\n\r\n    function play(animation){\r\n        var i;\r\n        for(i=0;i<len;i+=1){\r\n            registeredAnimations[i].animation.play(animation);\r\n        }\r\n    }\r\n    function resume(nowTime) {\r\n        var elapsedTime = nowTime - initTime;\r\n        var i;\r\n        for(i=0;i<len;i+=1){\r\n            registeredAnimations[i].animation.advanceTime(elapsedTime);\r\n        }\r\n        initTime = nowTime;\r\n        if(playingAnimationsNum && !_isFrozen) {\r\n            window.requestAnimationFrame(resume);\r\n        } else {\r\n            _stopped = true;\r\n        }\r\n    }\r\n\r\n    function first(nowTime){\r\n        initTime = nowTime;\r\n        window.requestAnimationFrame(resume);\r\n    }\r\n\r\n    function pause(animation) {\r\n        var i;\r\n        for(i=0;i<len;i+=1){\r\n            registeredAnimations[i].animation.pause(animation);\r\n        }\r\n    }\r\n\r\n    function goToAndStop(value,isFrame,animation) {\r\n        var i;\r\n        for(i=0;i<len;i+=1){\r\n            registeredAnimations[i].animation.goToAndStop(value,isFrame,animation);\r\n        }\r\n    }\r\n\r\n    function stop(animation) {\r\n        var i;\r\n        for(i=0;i<len;i+=1){\r\n            registeredAnimations[i].animation.stop(animation);\r\n        }\r\n    }\r\n\r\n    function togglePause(animation) {\r\n        var i;\r\n        for(i=0;i<len;i+=1){\r\n            registeredAnimations[i].animation.togglePause(animation);\r\n        }\r\n    }\r\n\r\n    function destroy(animation) {\r\n        var i;\r\n        for(i=(len-1);i>=0;i-=1){\r\n            registeredAnimations[i].animation.destroy(animation);\r\n        }\r\n    }\r\n\r\n    function searchAnimations(animationData, standalone, renderer){\r\n        var animElements = [].concat([].slice.call(document.getElementsByClassName('lottie')),\r\n                  [].slice.call(document.getElementsByClassName('bodymovin')));\r\n        var i, len = animElements.length;\r\n        for(i=0;i<len;i+=1){\r\n            if(renderer){\r\n                animElements[i].setAttribute('data-bm-type',renderer);\r\n            }\r\n            registerAnimation(animElements[i], animationData);\r\n        }\r\n        if(standalone && len === 0){\r\n            if(!renderer){\r\n                renderer = 'svg';\r\n            }\r\n            var body = document.getElementsByTagName('body')[0];\r\n            body.innerHTML = '';\r\n            var div = createTag('div');\r\n            div.style.width = '100%';\r\n            div.style.height = '100%';\r\n            div.setAttribute('data-bm-type',renderer);\r\n            body.appendChild(div);\r\n            registerAnimation(div, animationData);\r\n        }\r\n    }\r\n\r\n    function resize(){\r\n        var i;\r\n        for(i=0;i<len;i+=1){\r\n            registeredAnimations[i].animation.resize();\r\n        }\r\n    }\r\n\r\n    function activate(){\r\n        if(!_isFrozen && playingAnimationsNum){\r\n            if(_stopped) {\r\n                window.requestAnimationFrame(first);\r\n                _stopped = false;\r\n            }\r\n        }\r\n    }\r\n\r\n    function freeze() {\r\n        _isFrozen = true;\r\n    }\r\n\r\n    function unfreeze() {\r\n        _isFrozen = false;\r\n        activate();\r\n    }\r\n\r\n    moduleOb.registerAnimation = registerAnimation;\r\n    moduleOb.loadAnimation = loadAnimation;\r\n    moduleOb.setSpeed = setSpeed;\r\n    moduleOb.setDirection = setDirection;\r\n    moduleOb.play = play;\r\n    moduleOb.pause = pause;\r\n    moduleOb.stop = stop;\r\n    moduleOb.togglePause = togglePause;\r\n    moduleOb.searchAnimations = searchAnimations;\r\n    moduleOb.resize = resize;\r\n    //moduleOb.start = start;\r\n    moduleOb.goToAndStop = goToAndStop;\r\n    moduleOb.destroy = destroy;\r\n    moduleOb.freeze = freeze;\r\n    moduleOb.unfreeze = unfreeze;\r\n    moduleOb.getRegisteredAnimations = getRegisteredAnimations;\r\n    return moduleOb;\r\n}());\r\n\r\nvar AnimationItem = function () {\r\n    this._cbs = [];\r\n    this.name = '';\r\n    this.path = '';\r\n    this.isLoaded = false;\r\n    this.currentFrame = 0;\r\n    this.currentRawFrame = 0;\r\n    this.totalFrames = 0;\r\n    this.frameRate = 0;\r\n    this.frameMult = 0;\r\n    this.playSpeed = 1;\r\n    this.playDirection = 1;\r\n    this.playCount = 0;\r\n    this.animationData = {};\r\n    this.assets = [];\r\n    this.isPaused = true;\r\n    this.autoplay = false;\r\n    this.loop = true;\r\n    this.renderer = null;\r\n    this.animationID = createElementID();\r\n    this.assetsPath = '';\r\n    this.timeCompleted = 0;\r\n    this.segmentPos = 0;\r\n    this.subframeEnabled = subframeEnabled;\r\n    this.segments = [];\r\n    this._idle = true;\r\n    this._completedLoop = false;\r\n    this.projectInterface = ProjectInterface();\r\n    this.imagePreloader = new ImagePreloader();\r\n};\r\n\r\nextendPrototype([BaseEvent], AnimationItem);\r\n\r\nAnimationItem.prototype.setParams = function(params) {\r\n    if(params.context){\r\n        this.context = params.context;\r\n    }\r\n    if(params.wrapper || params.container){\r\n        this.wrapper = params.wrapper || params.container;\r\n    }\r\n    var animType = params.animType ? params.animType : params.renderer ? params.renderer : 'svg';\r\n    switch(animType){\r\n        case 'canvas':\r\n            this.renderer = new CanvasRenderer(this, params.rendererSettings);\r\n            break;\r\n        case 'svg':\r\n            this.renderer = new SVGRenderer(this, params.rendererSettings);\r\n            break;\r\n        default:\r\n            this.renderer = new HybridRenderer(this, params.rendererSettings);\r\n            break;\r\n    }\r\n    this.renderer.setProjectInterface(this.projectInterface);\r\n    this.animType = animType;\r\n\r\n    if(params.loop === '' || params.loop === null){\r\n    }else if(params.loop === false){\r\n        this.loop = false;\r\n    }else if(params.loop === true){\r\n        this.loop = true;\r\n    }else{\r\n        this.loop = parseInt(params.loop);\r\n    }\r\n    this.autoplay = 'autoplay' in params ? params.autoplay : true;\r\n    this.name = params.name ? params.name :  '';\r\n    this.autoloadSegments = params.hasOwnProperty('autoloadSegments') ? params.autoloadSegments :  true;\r\n    this.assetsPath = params.assetsPath;\r\n    if(params.animationData){\r\n        this.configAnimation(params.animationData);\r\n    }else if(params.path){\r\n        if(params.path.substr(-4) != 'json'){\r\n            if (params.path.substr(-1, 1) != '/') {\r\n                params.path += '/';\r\n            }\r\n            params.path += 'data.json';\r\n        }\r\n\r\n        if(params.path.lastIndexOf('\\\\') != -1){\r\n            this.path = params.path.substr(0,params.path.lastIndexOf('\\\\')+1);\r\n        }else{\r\n            this.path = params.path.substr(0,params.path.lastIndexOf('/')+1);\r\n        }\r\n        this.fileName = params.path.substr(params.path.lastIndexOf('/')+1);\r\n        this.fileName = this.fileName.substr(0,this.fileName.lastIndexOf('.json'));\r\n\r\n        assetLoader.load(params.path, this.configAnimation.bind(this), function() {\r\n            this.trigger('data_failed');\r\n        }.bind(this));\r\n    }\r\n};\r\n\r\nAnimationItem.prototype.setData = function (wrapper, animationData) {\r\n    var params = {\r\n        wrapper: wrapper,\r\n        animationData: animationData ? (typeof animationData  === \"object\") ? animationData : JSON.parse(animationData) : null\r\n    };\r\n    var wrapperAttributes = wrapper.attributes;\r\n\r\n    params.path = wrapperAttributes.getNamedItem('data-animation-path') ? wrapperAttributes.getNamedItem('data-animation-path').value : wrapperAttributes.getNamedItem('data-bm-path') ? wrapperAttributes.getNamedItem('data-bm-path').value :  wrapperAttributes.getNamedItem('bm-path') ? wrapperAttributes.getNamedItem('bm-path').value : '';\r\n    params.animType = wrapperAttributes.getNamedItem('data-anim-type') ? wrapperAttributes.getNamedItem('data-anim-type').value : wrapperAttributes.getNamedItem('data-bm-type') ? wrapperAttributes.getNamedItem('data-bm-type').value : wrapperAttributes.getNamedItem('bm-type') ? wrapperAttributes.getNamedItem('bm-type').value :  wrapperAttributes.getNamedItem('data-bm-renderer') ? wrapperAttributes.getNamedItem('data-bm-renderer').value : wrapperAttributes.getNamedItem('bm-renderer') ? wrapperAttributes.getNamedItem('bm-renderer').value : 'canvas';\r\n\r\n    var loop = wrapperAttributes.getNamedItem('data-anim-loop') ? wrapperAttributes.getNamedItem('data-anim-loop').value :  wrapperAttributes.getNamedItem('data-bm-loop') ? wrapperAttributes.getNamedItem('data-bm-loop').value :  wrapperAttributes.getNamedItem('bm-loop') ? wrapperAttributes.getNamedItem('bm-loop').value : '';\r\n    if(loop === ''){\r\n    }else if(loop === 'false'){\r\n        params.loop = false;\r\n    }else if(loop === 'true'){\r\n        params.loop = true;\r\n    }else{\r\n        params.loop = parseInt(loop);\r\n    }\r\n    var autoplay = wrapperAttributes.getNamedItem('data-anim-autoplay') ? wrapperAttributes.getNamedItem('data-anim-autoplay').value :  wrapperAttributes.getNamedItem('data-bm-autoplay') ? wrapperAttributes.getNamedItem('data-bm-autoplay').value :  wrapperAttributes.getNamedItem('bm-autoplay') ? wrapperAttributes.getNamedItem('bm-autoplay').value : true;\r\n    params.autoplay = autoplay !== \"false\";\r\n\r\n    params.name = wrapperAttributes.getNamedItem('data-name') ? wrapperAttributes.getNamedItem('data-name').value :  wrapperAttributes.getNamedItem('data-bm-name') ? wrapperAttributes.getNamedItem('data-bm-name').value : wrapperAttributes.getNamedItem('bm-name') ? wrapperAttributes.getNamedItem('bm-name').value :  '';\r\n    var prerender = wrapperAttributes.getNamedItem('data-anim-prerender') ? wrapperAttributes.getNamedItem('data-anim-prerender').value :  wrapperAttributes.getNamedItem('data-bm-prerender') ? wrapperAttributes.getNamedItem('data-bm-prerender').value :  wrapperAttributes.getNamedItem('bm-prerender') ? wrapperAttributes.getNamedItem('bm-prerender').value : '';\r\n\r\n    if(prerender === 'false'){\r\n        params.prerender = false;\r\n    }\r\n    this.setParams(params);\r\n};\r\n\r\nAnimationItem.prototype.includeLayers = function(data) {\r\n    if(data.op > this.animationData.op){\r\n        this.animationData.op = data.op;\r\n        this.totalFrames = Math.floor(data.op - this.animationData.ip);\r\n    }\r\n    var layers = this.animationData.layers;\r\n    var i, len = layers.length;\r\n    var newLayers = data.layers;\r\n    var j, jLen = newLayers.length;\r\n    for(j=0;j<jLen;j+=1){\r\n        i = 0;\r\n        while(i<len){\r\n            if(layers[i].id == newLayers[j].id){\r\n                layers[i] = newLayers[j];\r\n                break;\r\n            }\r\n            i += 1;\r\n        }\r\n    }\r\n    if(data.chars || data.fonts){\r\n        this.renderer.globalData.fontManager.addChars(data.chars);\r\n        this.renderer.globalData.fontManager.addFonts(data.fonts, this.renderer.globalData.defs);\r\n    }\r\n    if(data.assets){\r\n        len = data.assets.length;\r\n        for(i = 0; i < len; i += 1){\r\n            this.animationData.assets.push(data.assets[i]);\r\n        }\r\n    }\r\n    this.animationData.__complete = false;\r\n    dataManager.completeData(this.animationData,this.renderer.globalData.fontManager);\r\n    this.renderer.includeLayers(data.layers);\r\n    if(expressionsPlugin){\r\n        expressionsPlugin.initExpressions(this);\r\n    }\r\n    this.loadNextSegment();\r\n};\r\n\r\nAnimationItem.prototype.loadNextSegment = function() {\r\n    var segments = this.animationData.segments;\r\n    if(!segments || segments.length === 0 || !this.autoloadSegments){\r\n        this.trigger('data_ready');\r\n        this.timeCompleted = this.totalFrames;\r\n        return;\r\n    }\r\n    var segment = segments.shift();\r\n    this.timeCompleted = segment.time * this.frameRate;\r\n    var segmentPath = this.path+this.fileName+'_' + this.segmentPos + '.json';\r\n    this.segmentPos += 1;\r\n    assetLoader.load(segmentPath, this.includeLayers.bind(this), function() {\r\n        this.trigger('data_failed');\r\n    }.bind(this));\r\n};\r\n\r\nAnimationItem.prototype.loadSegments = function() {\r\n    var segments = this.animationData.segments;\r\n    if(!segments) {\r\n        this.timeCompleted = this.totalFrames;\r\n    }\r\n    this.loadNextSegment();\r\n};\r\n\r\nAnimationItem.prototype.imagesLoaded = function() {\r\n    this.trigger('loaded_images');\r\n    this.checkLoaded()\r\n}\r\n\r\nAnimationItem.prototype.preloadImages = function() {\r\n    this.imagePreloader.setAssetsPath(this.assetsPath);\r\n    this.imagePreloader.setPath(this.path);\r\n    this.imagePreloader.loadAssets(this.animationData.assets, this.imagesLoaded.bind(this));\r\n}\r\n\r\nAnimationItem.prototype.configAnimation = function (animData) {\r\n    if(!this.renderer){\r\n        return;\r\n    }\r\n    this.animationData = animData;\r\n    this.totalFrames = Math.floor(this.animationData.op - this.animationData.ip);\r\n    this.renderer.configAnimation(animData);\r\n    if(!animData.assets){\r\n        animData.assets = [];\r\n    }\r\n    this.renderer.searchExtraCompositions(animData.assets);\r\n\r\n    this.assets = this.animationData.assets;\r\n    this.frameRate = this.animationData.fr;\r\n    this.firstFrame = Math.round(this.animationData.ip);\r\n    this.frameMult = this.animationData.fr / 1000;\r\n    this.trigger('config_ready');\r\n    this.preloadImages();\r\n    this.loadSegments();\r\n    this.updaFrameModifier();\r\n    this.waitForFontsLoaded();\r\n};\r\n\r\nAnimationItem.prototype.waitForFontsLoaded = function(){\r\n    if(!this.renderer) {\r\n        return;\r\n    }\r\n    if(this.renderer.globalData.fontManager.loaded()){\r\n        this.checkLoaded();\r\n    }else{\r\n        setTimeout(this.waitForFontsLoaded.bind(this),20);\r\n    }\r\n}\r\n\r\nAnimationItem.prototype.checkLoaded = function () {\r\n    if (!this.isLoaded && this.renderer.globalData.fontManager.loaded() && (this.imagePreloader.loaded() || this.renderer.rendererType !== 'canvas')) {\r\n        this.isLoaded = true;\r\n        dataManager.completeData(this.animationData, this.renderer.globalData.fontManager);\r\n        if(expressionsPlugin){\r\n            expressionsPlugin.initExpressions(this);\r\n        }\r\n        this.renderer.initItems();\r\n        setTimeout(function() {\r\n            this.trigger('DOMLoaded');\r\n        }.bind(this), 0);\r\n        this.gotoFrame();\r\n        if(this.autoplay){\r\n            this.play();\r\n        }\r\n    }\r\n};\r\n\r\nAnimationItem.prototype.resize = function () {\r\n    this.renderer.updateContainerSize();\r\n};\r\n\r\nAnimationItem.prototype.setSubframe = function(flag){\r\n    this.subframeEnabled = flag ? true : false;\r\n};\r\n\r\nAnimationItem.prototype.gotoFrame = function () {\r\n    this.currentFrame = this.subframeEnabled ? this.currentRawFrame : ~~this.currentRawFrame;\r\n\r\n    if(this.timeCompleted !== this.totalFrames && this.currentFrame > this.timeCompleted){\r\n        this.currentFrame = this.timeCompleted;\r\n    }\r\n    this.trigger('enterFrame');\r\n    this.renderFrame();\r\n};\r\n\r\nAnimationItem.prototype.renderFrame = function () {\r\n    if(this.isLoaded === false){\r\n        return;\r\n    }\r\n    this.renderer.renderFrame(this.currentFrame + this.firstFrame);\r\n};\r\n\r\nAnimationItem.prototype.play = function (name) {\r\n    if(name && this.name != name){\r\n        return;\r\n    }\r\n    if(this.isPaused === true){\r\n        this.isPaused = false;\r\n        if(this._idle){\r\n            this._idle = false;\r\n            this.trigger('_active');\r\n        }\r\n    }\r\n};\r\n\r\nAnimationItem.prototype.pause = function (name) {\r\n    if(name && this.name != name){\r\n        return;\r\n    }\r\n    if(this.isPaused === false){\r\n        this.isPaused = true;\r\n        this._idle = true;\r\n        this.trigger('_idle');\r\n    }\r\n};\r\n\r\nAnimationItem.prototype.togglePause = function (name) {\r\n    if(name && this.name != name){\r\n        return;\r\n    }\r\n    if(this.isPaused === true){\r\n        this.play();\r\n    }else{\r\n        this.pause();\r\n    }\r\n};\r\n\r\nAnimationItem.prototype.stop = function (name) {\r\n    if(name && this.name != name){\r\n        return;\r\n    }\r\n    this.pause();\r\n    this.playCount = 0;\r\n    this._completedLoop = false;\r\n    this.setCurrentRawFrameValue(0);\r\n};\r\n\r\nAnimationItem.prototype.goToAndStop = function (value, isFrame, name) {\r\n    if(name && this.name != name){\r\n        return;\r\n    }\r\n    if(isFrame){\r\n        this.setCurrentRawFrameValue(value);\r\n    }else{\r\n        this.setCurrentRawFrameValue(value * this.frameModifier);\r\n    }\r\n    this.pause();\r\n};\r\n\r\nAnimationItem.prototype.goToAndPlay = function (value, isFrame, name) {\r\n    this.goToAndStop(value, isFrame, name);\r\n    this.play();\r\n};\r\n\r\nAnimationItem.prototype.advanceTime = function (value) {\r\n    if (this.isPaused === true || this.isLoaded === false) {\r\n        return;\r\n    }\r\n    var nextValue = this.currentRawFrame + value * this.frameModifier;\r\n    var _isComplete = false;\r\n    // Checking if nextValue > totalFrames - 1 for addressing non looping and looping animations.\r\n    // If animation won't loop, it should stop at totalFrames - 1. If it will loop it should complete the last frame and then loop.\r\n    if (nextValue >= this.totalFrames - 1 && this.frameModifier > 0) {\r\n        if (!this.loop || this.playCount === this.loop) {\r\n            if (!this.checkSegments(nextValue >  this.totalFrames ? nextValue % this.totalFrames : 0)) {\r\n                _isComplete = true;\r\n                nextValue = this.totalFrames - 1;\r\n            }\r\n        } else if (nextValue >= this.totalFrames) {\r\n            this.playCount += 1;\r\n            if (!this.checkSegments(nextValue % this.totalFrames)) {\r\n                this.setCurrentRawFrameValue(nextValue % this.totalFrames);\r\n                this._completedLoop = true;\r\n                this.trigger('loopComplete');\r\n            }\r\n        } else {\r\n            this.setCurrentRawFrameValue(nextValue);\r\n        }\r\n    } else if(nextValue < 0) {\r\n        if (!this.checkSegments(nextValue % this.totalFrames)) {\r\n            if (this.loop && !(this.playCount-- <= 0 && this.loop !== true)) {\r\n                this.setCurrentRawFrameValue(this.totalFrames + (nextValue % this.totalFrames));\r\n                if(!this._completedLoop) {\r\n                    this._completedLoop = true;\r\n                } else {\r\n                    this.trigger('loopComplete');\r\n                }\r\n            } else {\r\n                _isComplete = true;\r\n                nextValue = 0;\r\n            }\r\n        }\r\n    } else {\r\n        this.setCurrentRawFrameValue(nextValue);\r\n    }\r\n    if (_isComplete) {\r\n        this.setCurrentRawFrameValue(nextValue);\r\n        this.pause();\r\n        this.trigger('complete');\r\n    }\r\n};\r\n\r\nAnimationItem.prototype.adjustSegment = function(arr, offset){\r\n    this.playCount = 0;\r\n    if(arr[1] < arr[0]){\r\n        if(this.frameModifier > 0){\r\n            if(this.playSpeed < 0){\r\n                this.setSpeed(-this.playSpeed);\r\n            } else {\r\n                this.setDirection(-1);\r\n            }\r\n        }\r\n        this.timeCompleted = this.totalFrames = arr[0] - arr[1];\r\n        this.firstFrame = arr[1];\r\n        this.setCurrentRawFrameValue(this.totalFrames - 0.001 - offset);\r\n    } else if(arr[1] > arr[0]){\r\n        if(this.frameModifier < 0){\r\n            if(this.playSpeed < 0){\r\n                this.setSpeed(-this.playSpeed);\r\n            } else {\r\n                this.setDirection(1);\r\n            }\r\n        }\r\n        this.timeCompleted = this.totalFrames = arr[1] - arr[0];\r\n        this.firstFrame = arr[0];\r\n        this.setCurrentRawFrameValue(0.001 + offset);\r\n    }\r\n    this.trigger('segmentStart');\r\n};\r\nAnimationItem.prototype.setSegment = function (init,end) {\r\n    var pendingFrame = -1;\r\n    if(this.isPaused) {\r\n        if (this.currentRawFrame + this.firstFrame < init) {\r\n            pendingFrame = init;\r\n        } else if (this.currentRawFrame + this.firstFrame > end) {\r\n            pendingFrame = end - init;\r\n        }\r\n    }\r\n\r\n    this.firstFrame = init;\r\n    this.timeCompleted = this.totalFrames = end - init;\r\n    if(pendingFrame !== -1) {\r\n        this.goToAndStop(pendingFrame,true);\r\n    }\r\n};\r\n\r\nAnimationItem.prototype.playSegments = function (arr, forceFlag) {\r\n    if (forceFlag) {\r\n        this.segments.length = 0;\r\n    }\r\n    if (typeof arr[0] === 'object') {\r\n        var i, len = arr.length;\r\n        for (i = 0; i < len; i += 1) {\r\n            this.segments.push(arr[i]);\r\n        }\r\n    } else {\r\n        this.segments.push(arr);\r\n    }\r\n    if (this.segments.length && forceFlag) {\r\n        this.adjustSegment(this.segments.shift(), 0);\r\n    }\r\n    if (this.isPaused) {\r\n        this.play();\r\n    }\r\n};\r\n\r\nAnimationItem.prototype.resetSegments = function (forceFlag) {\r\n    this.segments.length = 0;\r\n    this.segments.push([this.animationData.ip,this.animationData.op]);\r\n    //this.segments.push([this.animationData.ip*this.frameRate,Math.floor(this.animationData.op - this.animationData.ip+this.animationData.ip*this.frameRate)]);\r\n    if (forceFlag) {\r\n        this.checkSegments(0);\r\n    }\r\n};\r\nAnimationItem.prototype.checkSegments = function(offset) {\r\n    if (this.segments.length) {\r\n        this.adjustSegment(this.segments.shift(), offset);\r\n        return true;\r\n    }\r\n    return false;\r\n};\r\n\r\nAnimationItem.prototype.destroy = function (name) {\r\n    if ((name && this.name != name) || !this.renderer) {\r\n        return;\r\n    }\r\n    this.renderer.destroy();\r\n    this.imagePreloader.destroy();\r\n    this.trigger('destroy');\r\n    this._cbs = null;\r\n    this.onEnterFrame = this.onLoopComplete = this.onComplete = this.onSegmentStart = this.onDestroy = null;\r\n    this.renderer = null;\r\n};\r\n\r\nAnimationItem.prototype.setCurrentRawFrameValue = function(value){\r\n    this.currentRawFrame = value;\r\n    this.gotoFrame();\r\n};\r\n\r\nAnimationItem.prototype.setSpeed = function (val) {\r\n    this.playSpeed = val;\r\n    this.updaFrameModifier();\r\n};\r\n\r\nAnimationItem.prototype.setDirection = function (val) {\r\n    this.playDirection = val < 0 ? -1 : 1;\r\n    this.updaFrameModifier();\r\n};\r\n\r\nAnimationItem.prototype.updaFrameModifier = function () {\r\n    this.frameModifier = this.frameMult * this.playSpeed * this.playDirection;\r\n};\r\n\r\nAnimationItem.prototype.getPath = function () {\r\n    return this.path;\r\n};\r\n\r\nAnimationItem.prototype.getAssetsPath = function (assetData) {\r\n    var path = '';\r\n    if(assetData.e) {\r\n        path = assetData.p;\r\n    } else if(this.assetsPath){\r\n        var imagePath = assetData.p;\r\n        if(imagePath.indexOf('images/') !== -1){\r\n            imagePath = imagePath.split('/')[1];\r\n        }\r\n        path = this.assetsPath + imagePath;\r\n    } else {\r\n        path = this.path;\r\n        path += assetData.u ? assetData.u : '';\r\n        path += assetData.p;\r\n    }\r\n    return path;\r\n};\r\n\r\nAnimationItem.prototype.getAssetData = function (id) {\r\n    var i = 0, len = this.assets.length;\r\n    while (i < len) {\r\n        if(id == this.assets[i].id){\r\n            return this.assets[i];\r\n        }\r\n        i += 1;\r\n    }\r\n};\r\n\r\nAnimationItem.prototype.hide = function () {\r\n    this.renderer.hide();\r\n};\r\n\r\nAnimationItem.prototype.show = function () {\r\n    this.renderer.show();\r\n};\r\n\r\nAnimationItem.prototype.getDuration = function (isFrame) {\r\n    return isFrame ? this.totalFrames : this.totalFrames / this.frameRate;\r\n};\r\n\r\nAnimationItem.prototype.trigger = function(name){\r\n    if(this._cbs && this._cbs[name]){\r\n        switch(name){\r\n            case 'enterFrame':\r\n                this.triggerEvent(name,new BMEnterFrameEvent(name,this.currentFrame,this.totalFrames,this.frameModifier));\r\n                break;\r\n            case 'loopComplete':\r\n                this.triggerEvent(name,new BMCompleteLoopEvent(name,this.loop,this.playCount,this.frameMult));\r\n                break;\r\n            case 'complete':\r\n                this.triggerEvent(name,new BMCompleteEvent(name,this.frameMult));\r\n                break;\r\n            case 'segmentStart':\r\n                this.triggerEvent(name,new BMSegmentStartEvent(name,this.firstFrame,this.totalFrames));\r\n                break;\r\n            case 'destroy':\r\n                this.triggerEvent(name,new BMDestroyEvent(name,this));\r\n                break;\r\n            default:\r\n                this.triggerEvent(name);\r\n        }\r\n    }\r\n    if(name === 'enterFrame' && this.onEnterFrame){\r\n        this.onEnterFrame.call(this,new BMEnterFrameEvent(name,this.currentFrame,this.totalFrames,this.frameMult));\r\n    }\r\n    if(name === 'loopComplete' && this.onLoopComplete){\r\n        this.onLoopComplete.call(this,new BMCompleteLoopEvent(name,this.loop,this.playCount,this.frameMult));\r\n    }\r\n    if(name === 'complete' && this.onComplete){\r\n        this.onComplete.call(this,new BMCompleteEvent(name,this.frameMult));\r\n    }\r\n    if(name === 'segmentStart' && this.onSegmentStart){\r\n        this.onSegmentStart.call(this,new BMSegmentStartEvent(name,this.firstFrame,this.totalFrames));\r\n    }\r\n    if(name === 'destroy' && this.onDestroy){\r\n        this.onDestroy.call(this,new BMDestroyEvent(name,this));\r\n    }\r\n};\r\n\r\nvar Expressions = (function(){\r\n    var ob = {};\r\n    ob.initExpressions = initExpressions;\r\n\r\n\r\n    function initExpressions(animation){\r\n\r\n    \tvar stackCount = 0;\r\n    \tvar registers = [];\r\n\r\n    \tfunction pushExpression() {\r\n\t\t\tstackCount += 1;\r\n    \t}\r\n\r\n    \tfunction popExpression() {\r\n\t\t\tstackCount -= 1;\r\n\t\t\tif (stackCount === 0) {\r\n\t\t\t\treleaseInstances();\r\n\t\t\t}\r\n    \t}\r\n\r\n    \tfunction registerExpressionProperty(expression) {\r\n    \t\tif (registers.indexOf(expression) === -1) {\r\n\t\t\t\tregisters.push(expression)\r\n    \t\t}\r\n    \t}\r\n\r\n    \tfunction releaseInstances() {\r\n    \t\tvar i, len = registers.length;\r\n    \t\tfor (i = 0; i < len; i += 1) {\r\n\t\t\t\tregisters[i].release();\r\n    \t\t}\r\n    \t\tregisters.length = 0;\r\n    \t}\r\n\r\n        animation.renderer.compInterface = CompExpressionInterface(animation.renderer);\r\n        animation.renderer.globalData.projectInterface.registerComposition(animation.renderer);\r\n        animation.renderer.globalData.pushExpression = pushExpression;\r\n        animation.renderer.globalData.popExpression = popExpression;\r\n        animation.renderer.globalData.registerExpressionProperty = registerExpressionProperty;\r\n    }\r\n   return ob;\r\n}());\r\n\r\nexpressionsPlugin = Expressions;\r\n\r\nvar ExpressionManager = (function(){\r\n    'use strict';\r\n    var ob = {};\r\n    var Math = BMMath;\r\n    var window = null;\r\n    var document = null;\r\n\r\n    function $bm_isInstanceOfArray(arr) {\r\n        return arr.constructor === Array || arr.constructor === Float32Array;\r\n    }\r\n\r\n    function isNumerable(tOfV, v) {\r\n        return tOfV === 'number' || tOfV === 'boolean' || tOfV === 'string' || v instanceof Number;\r\n    }\r\n\r\n    function $bm_neg(a){\r\n        var tOfA = typeof a;\r\n        if(tOfA === 'number' || tOfA === 'boolean'  || a instanceof Number ){\r\n            return -a;\r\n        }\r\n        if($bm_isInstanceOfArray(a)){\r\n            var i, lenA = a.length;\r\n            var retArr = [];\r\n            for(i=0;i<lenA;i+=1){\r\n                retArr[i] = -a[i];\r\n            }\r\n            return retArr;\r\n        }\r\n        if (a.propType) {\r\n            return a.v;\r\n        }\r\n    }\r\n\r\n    var easeInBez = BezierFactory.getBezierEasing(0.333,0,.833,.833, 'easeIn').get;\r\n    var easeOutBez = BezierFactory.getBezierEasing(0.167,0.167,.667,1, 'easeOut').get;\r\n    var easeInOutBez = BezierFactory.getBezierEasing(.33,0,.667,1, 'easeInOut').get;\r\n\r\n    function sum(a,b) {\r\n        var tOfA = typeof a;\r\n        var tOfB = typeof b;\r\n        if(tOfA === 'string' || tOfB === 'string'){\r\n            return a + b;\r\n        }\r\n        if(isNumerable(tOfA, a) && isNumerable(tOfB, b)) {\r\n            return a + b;\r\n        }\r\n        if($bm_isInstanceOfArray(a) && isNumerable(tOfB, b)){\r\n            a = a.slice(0);\r\n            a[0] = a[0] + b;\r\n            return a;\r\n        }\r\n        if(isNumerable(tOfA, a) && $bm_isInstanceOfArray(b)){\r\n            b = b.slice(0);\r\n            b[0] = a + b[0];\r\n            return b;\r\n        }\r\n        if($bm_isInstanceOfArray(a) && $bm_isInstanceOfArray(b)){\r\n            \r\n            var i = 0, lenA = a.length, lenB = b.length;\r\n            var retArr = [];\r\n            while(i<lenA || i < lenB){\r\n                if((typeof a[i] === 'number' || a[i] instanceof Number) && (typeof b[i] === 'number' || b[i] instanceof Number)){\r\n                    retArr[i] = a[i] + b[i];\r\n                }else{\r\n                    retArr[i] = b[i] === undefined ? a[i] : a[i] || b[i];\r\n                }\r\n                i += 1;\r\n            }\r\n            return retArr;\r\n        }\r\n        return 0;\r\n    }\r\n    var add = sum;\r\n\r\n    function sub(a,b) {\r\n        var tOfA = typeof a;\r\n        var tOfB = typeof b;\r\n        if(isNumerable(tOfA, a) && isNumerable(tOfB, b)) {\r\n            if(tOfA === 'string') {\r\n                a = parseInt(a);\r\n            }\r\n            if(tOfB === 'string') {\r\n                b = parseInt(b);\r\n            }\r\n            return a - b;\r\n        }\r\n        if( $bm_isInstanceOfArray(a) && isNumerable(tOfB, b)){\r\n            a = a.slice(0);\r\n            a[0] = a[0] - b;\r\n            return a;\r\n        }\r\n        if(isNumerable(tOfA, a) &&  $bm_isInstanceOfArray(b)){\r\n            b = b.slice(0);\r\n            b[0] = a - b[0];\r\n            return b;\r\n        }\r\n        if($bm_isInstanceOfArray(a) && $bm_isInstanceOfArray(b)){\r\n            var i = 0, lenA = a.length, lenB = b.length;\r\n            var retArr = [];\r\n            while(i<lenA || i < lenB){\r\n                if((typeof a[i] === 'number' || a[i] instanceof Number) && (typeof b[i] === 'number' || b[i] instanceof Number)){\r\n                    retArr[i] = a[i] - b[i];\r\n                }else{\r\n                    retArr[i] = b[i] === undefined ? a[i] : a[i] || b[i];\r\n                }\r\n                i += 1;\r\n            }\r\n            return retArr;\r\n        }\r\n        return 0;\r\n    }\r\n\r\n    function mul(a,b) {\r\n        var tOfA = typeof a;\r\n        var tOfB = typeof b;\r\n        var arr;\r\n        if(isNumerable(tOfA, a) && isNumerable(tOfB, b)) {\r\n            return a * b;\r\n        }\r\n\r\n        var i, len;\r\n        if($bm_isInstanceOfArray(a) && isNumerable(tOfB, b)){\r\n            len = a.length;\r\n            arr = createTypedArray('float32', len);\r\n            for(i=0;i<len;i+=1){\r\n                arr[i] = a[i] * b;\r\n            }\r\n            return arr;\r\n        }\r\n        if(isNumerable(tOfA, a) && $bm_isInstanceOfArray(b)){\r\n            len = b.length;\r\n            arr = createTypedArray('float32', len);\r\n            for(i=0;i<len;i+=1){\r\n                arr[i] = a * b[i];\r\n            }\r\n            return arr;\r\n        }\r\n        return 0;\r\n    }\r\n\r\n    function div(a,b) {\r\n        var tOfA = typeof a;\r\n        var tOfB = typeof b;\r\n        var arr;\r\n        if(isNumerable(tOfA, a) && isNumerable(tOfB, b)) {\r\n            return a / b;\r\n        }\r\n        var i, len;\r\n        if($bm_isInstanceOfArray(a) && isNumerable(tOfB, b)){\r\n            len = a.length;\r\n            arr = createTypedArray('float32', len);\r\n            for(i=0;i<len;i+=1){\r\n                arr[i] = a[i] / b;\r\n            }\r\n            return arr;\r\n        }\r\n        if(isNumerable(tOfA, a) && $bm_isInstanceOfArray(b)){\r\n            len = b.length;\r\n            arr = createTypedArray('float32', len);\r\n            for(i=0;i<len;i+=1){\r\n                arr[i] = a / b[i];\r\n            }\r\n            return arr;\r\n        }\r\n        return 0;\r\n    }\r\n    function mod(a,b) {\r\n        if(typeof a === 'string') {\r\n            a = parseInt(a);\r\n        }\r\n        if(typeof b === 'string') {\r\n            b = parseInt(b);\r\n        }\r\n        return a % b;\r\n    }\r\n    var $bm_sum = sum;\r\n    var $bm_sub = sub;\r\n    var $bm_mul = mul;\r\n    var $bm_div = div;\r\n    var $bm_mod = mod;\r\n\r\n    function clamp(num, min, max) {\r\n        if(min > max){\r\n            var mm = max;\r\n            max = min;\r\n            min = mm;\r\n        }\r\n        return Math.min(Math.max(num, min), max);\r\n    }\r\n\r\n    function radiansToDegrees(val) {\r\n        return val/degToRads;\r\n    }\r\n    var radians_to_degrees = radiansToDegrees;\r\n\r\n    function degreesToRadians(val) {\r\n        return val*degToRads;\r\n    }\r\n    var degrees_to_radians = radiansToDegrees;\r\n\r\n    var helperLengthArray = [0,0,0,0,0,0];\r\n\r\n    function length(arr1, arr2) {\r\n        if (typeof arr1 === 'number' || arr1 instanceof Number) {\r\n            arr2 = arr2 || 0;\r\n            return Math.abs(arr1 - arr2);\r\n        }\r\n        if(!arr2) {\r\n            arr2 = helperLengthArray;\r\n        }\r\n        var i, len = Math.min(arr1.length, arr2.length);\r\n        var addedLength = 0;\r\n        for (i = 0; i < len; i += 1) {\r\n            addedLength += Math.pow(arr2[i] - arr1[i], 2);\r\n        }\r\n        return Math.sqrt(addedLength);\r\n    }\r\n\r\n    function normalize(vec) {\r\n        return div(vec, length(vec));\r\n    }\r\n\r\n    function rgbToHsl(val) {\r\n        var r = val[0]; var g = val[1]; var b = val[2];\r\n        var max = Math.max(r, g, b), min = Math.min(r, g, b);\r\n        var h, s, l = (max + min) / 2;\r\n\r\n        if(max == min){\r\n            h = s = 0; // achromatic\r\n        }else{\r\n            var d = max - min;\r\n            s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\r\n            switch(max){\r\n                case r: h = (g - b) / d + (g < b ? 6 : 0); break;\r\n                case g: h = (b - r) / d + 2; break;\r\n                case b: h = (r - g) / d + 4; break;\r\n            }\r\n            h /= 6;\r\n        }\r\n\r\n        return [h, s, l,val[3]];\r\n    }\r\n\r\n    function hue2rgb(p, q, t){\r\n        if(t < 0) t += 1;\r\n        if(t > 1) t -= 1;\r\n        if(t < 1/6) return p + (q - p) * 6 * t;\r\n        if(t < 1/2) return q;\r\n        if(t < 2/3) return p + (q - p) * (2/3 - t) * 6;\r\n        return p;\r\n    }\r\n\r\n    function hslToRgb(val){\r\n        var h = val[0];\r\n        var s = val[1];\r\n        var l = val[2];\r\n\r\n        var r, g, b;\r\n\r\n        if(s === 0){\r\n            r = g = b = l; // achromatic\r\n        }else{\r\n\r\n            var q = l < 0.5 ? l * (1 + s) : l + s - l * s;\r\n            var p = 2 * l - q;\r\n            r = hue2rgb(p, q, h + 1/3);\r\n            g = hue2rgb(p, q, h);\r\n            b = hue2rgb(p, q, h - 1/3);\r\n        }\r\n\r\n        return [r, g , b, val[3]];\r\n    }\r\n\r\n    function linear(t, tMin, tMax, value1, value2){\r\n        if(value1 === undefined || value2 === undefined){\r\n            value1 = tMin;\r\n            value2 = tMax;\r\n            tMin = 0;\r\n            tMax = 1;\r\n        }\r\n        if(tMax < tMin) {\r\n            var _tMin = tMax;\r\n            tMax = tMin;\r\n            tMin = _tMin;\r\n        }\r\n        if(t <= tMin) {\r\n            return value1;\r\n        }else if(t >= tMax){\r\n            return value2;\r\n        }\r\n        var perc = tMax === tMin ? 0 : (t-tMin)/(tMax-tMin);\r\n        if(!value1.length){\r\n            return value1 + (value2-value1)*perc;\r\n        }\r\n        var i, len = value1.length;\r\n        var arr = createTypedArray('float32', len);\r\n        for(i=0;i<len;i+=1){\r\n            arr[i] = value1[i] + (value2[i]-value1[i])*perc;\r\n        }\r\n        return arr;\r\n    }\r\n    function random(min,max){\r\n        if(max === undefined){\r\n            if(min === undefined){\r\n                min = 0;\r\n                max = 1;\r\n            } else {\r\n                max = min;\r\n                min = undefined;\r\n            }\r\n        }\r\n        if(max.length){\r\n            var i, len = max.length;\r\n            if(!min){\r\n                min = createTypedArray('float32', len);\r\n            }\r\n            var arr = createTypedArray('float32', len);\r\n            var rnd = BMMath.random();\r\n            for(i=0;i<len;i+=1){\r\n                arr[i] = min[i] + rnd*(max[i]-min[i]);\r\n            }\r\n            return arr;\r\n        }\r\n        if(min === undefined){\r\n            min = 0;\r\n        }\r\n        var rndm = BMMath.random();\r\n        return min + rndm*(max-min);\r\n    }\r\n\r\n    function createPath(points, inTangents, outTangents, closed) {\r\n        var i, len = points.length;\r\n        var path = shape_pool.newElement();\r\n        path.setPathData(!!closed, len);\r\n        var arrPlaceholder = [0,0], inVertexPoint, outVertexPoint;\r\n        for(i = 0; i < len; i += 1) {\r\n            inVertexPoint = (inTangents && inTangents[i]) ? inTangents[i] : arrPlaceholder;\r\n            outVertexPoint = (outTangents && outTangents[i]) ? outTangents[i] : arrPlaceholder;\r\n            path.setTripleAt(points[i][0],points[i][1],outVertexPoint[0] + points[i][0],outVertexPoint[1] + points[i][1],inVertexPoint[0] + points[i][0],inVertexPoint[1] + points[i][1],i,true);\r\n        }\r\n        return path;\r\n    }\r\n\r\n    function initiateExpression(elem,data,property){\r\n        var val = data.x;\r\n        var needsVelocity = /velocity(?![\\w\\d])/.test(val);\r\n        var _needsRandom = val.indexOf('random') !== -1;\r\n        var elemType = elem.data.ty;\r\n        var transform,$bm_transform,content,effect;\r\n        var thisProperty = property;\r\n        thisProperty.valueAtTime = thisProperty.getValueAtTime;\r\n        Object.defineProperty(thisProperty, 'value', {\r\n            get: function() {\r\n                return thisProperty.v\r\n            }\r\n        })\r\n        elem.comp.frameDuration = 1/elem.comp.globalData.frameRate;\r\n        elem.comp.displayStartTime = 0;\r\n        var inPoint = elem.data.ip/elem.comp.globalData.frameRate;\r\n        var outPoint = elem.data.op/elem.comp.globalData.frameRate;\r\n        var width = elem.data.sw ? elem.data.sw : 0;\r\n        var height = elem.data.sh ? elem.data.sh : 0;\r\n        var name = elem.data.nm;\r\n        var loopIn, loop_in, loopOut, loop_out, smooth;\r\n        var toWorld,fromWorld,fromComp,toComp,fromCompToSurface, position, rotation, anchorPoint, scale, thisLayer, thisComp,mask,valueAtTime,velocityAtTime;\r\n        var __expression_functions = [];\r\n        if(data.xf) {\r\n            var i, len = data.xf.length;\r\n            for(i = 0; i < len; i += 1) {\r\n                __expression_functions[i] = eval('(function(){ return ' + data.xf[i] + '}())');\r\n            }\r\n        }\r\n\r\n        var scoped_bm_rt;\r\n        var expression_function = eval('[function _expression_function(){' + val+';scoped_bm_rt=$bm_rt}' + ']')[0];\r\n        var numKeys = property.kf ? data.k.length : 0;\r\n\r\n        var active = !this.data || this.data.hd !== true;\r\n\r\n        var wiggle = function wiggle(freq,amp){\r\n            var i,j, len = this.pv.length ? this.pv.length : 1;\r\n            var addedAmps = createTypedArray('float32', len);\r\n            freq = 5;\r\n            var iterations = Math.floor(time*freq);\r\n            i = 0;\r\n            j = 0;\r\n            while(i<iterations){\r\n                //var rnd = BMMath.random();\r\n                for(j=0;j<len;j+=1){\r\n                    addedAmps[j] += -amp + amp*2*BMMath.random();\r\n                    //addedAmps[j] += -amp + amp*2*rnd;\r\n                }\r\n                i += 1;\r\n            }\r\n            //var rnd2 = BMMath.random();\r\n            var periods = time*freq;\r\n            var perc = periods - Math.floor(periods);\r\n            var arr = createTypedArray('float32', len);\r\n            if(len>1){\r\n                for(j=0;j<len;j+=1){\r\n                    arr[j] = this.pv[j] + addedAmps[j] + (-amp + amp*2*BMMath.random())*perc;\r\n                    //arr[j] = this.pv[j] + addedAmps[j] + (-amp + amp*2*rnd)*perc;\r\n                    //arr[i] = this.pv[i] + addedAmp + amp1*perc + amp2*(1-perc);\r\n                }\r\n                return arr;\r\n            } else {\r\n                return this.pv + addedAmps[0] + (-amp + amp*2*BMMath.random())*perc;\r\n            }\r\n        }.bind(this);\r\n\r\n        if(thisProperty.loopIn) {\r\n            loopIn = thisProperty.loopIn.bind(thisProperty);\r\n            loop_in = loopIn;\r\n        }\r\n\r\n        if(thisProperty.loopOut) {\r\n            loopOut = thisProperty.loopOut.bind(thisProperty);\r\n            loop_out = loopOut;\r\n        }\r\n\r\n        if(thisProperty.smooth) {\r\n            smooth = thisProperty.smooth.bind(thisProperty);\r\n        }\r\n\r\n        function loopInDuration(type,duration){\r\n            return loopIn(type,duration,true);\r\n        }\r\n\r\n        function loopOutDuration(type,duration){\r\n            return loopOut(type,duration,true);\r\n        }\r\n\r\n        if(this.getValueAtTime) {\r\n            valueAtTime = this.getValueAtTime.bind(this);\r\n        }\r\n\r\n        if(this.getVelocityAtTime) {\r\n            velocityAtTime = this.getVelocityAtTime.bind(this);\r\n        }\r\n\r\n        var comp = elem.comp.globalData.projectInterface.bind(elem.comp.globalData.projectInterface);\r\n\r\n        function lookAt(elem1,elem2){\r\n            var fVec = [elem2[0]-elem1[0],elem2[1]-elem1[1],elem2[2]-elem1[2]];\r\n            var pitch = Math.atan2(fVec[0],Math.sqrt(fVec[1]*fVec[1]+fVec[2]*fVec[2]))/degToRads;\r\n            var yaw = -Math.atan2(fVec[1],fVec[2])/degToRads;\r\n            return [yaw,pitch,0];\r\n        }\r\n\r\n        function easeOut(t, tMin, tMax, val1, val2){\r\n            return applyEase(easeOutBez, t, tMin, tMax, val1, val2);\r\n        }\r\n\r\n        function easeIn(t, tMin, tMax, val1, val2){\r\n            return applyEase(easeInBez, t, tMin, tMax, val1, val2);\r\n        }\r\n\r\n        function ease(t, tMin, tMax, val1, val2){\r\n            return applyEase(easeInOutBez, t, tMin, tMax, val1, val2);\r\n        }\r\n\r\n        function applyEase(fn, t, tMin, tMax, val1, val2) {\r\n            if(val1 === undefined){\r\n                val1 = tMin;\r\n                val2 = tMax;\r\n            } else {\r\n                t = (t - tMin) / (tMax - tMin);\r\n            }\r\n            t = t > 1 ? 1 : t < 0 ? 0 : t;\r\n            var mult = fn(t);\r\n            if($bm_isInstanceOfArray(val1)) {\r\n                var i, len = val1.length;\r\n                var arr = createTypedArray('float32', len);\r\n                for (i = 0; i < len; i += 1) {\r\n                    arr[i] = (val2[i] - val1[i]) * mult + val1[i];\r\n                }\r\n                return arr;\r\n            } else {\r\n                return (val2 - val1) * mult + val1;\r\n            }\r\n        }\r\n\r\n        function nearestKey(time){\r\n            var i, len = data.k.length,index,keyTime;\r\n            if(!data.k.length || typeof(data.k[0]) === 'number'){\r\n                index = 0;\r\n                keyTime = 0;\r\n            } else {\r\n                index = -1;\r\n                time *= elem.comp.globalData.frameRate;\r\n                if (time < data.k[0].t) {\r\n                    index = 1;\r\n                    keyTime = data.k[0].t;\r\n                } else {\r\n                    for(i=0;i<len-1;i+=1){\r\n                        if(time === data.k[i].t){\r\n                            index = i + 1;\r\n                            keyTime = data.k[i].t;\r\n                            break;\r\n                        }else if(time>data.k[i].t && time<data.k[i+1].t){\r\n                            if(time-data.k[i].t > data.k[i+1].t - time){\r\n                                index = i + 2;\r\n                                keyTime = data.k[i+1].t;\r\n                            } else {\r\n                                index = i + 1;\r\n                                keyTime = data.k[i].t;\r\n                            }\r\n                            break;\r\n                        }\r\n                    }\r\n                    if(index === -1){\r\n                        index = i + 1;\r\n                        keyTime = data.k[i].t;\r\n                    }\r\n                }\r\n                \r\n            }\r\n            var ob = {};\r\n            ob.index = index;\r\n            ob.time = keyTime/elem.comp.globalData.frameRate;\r\n            return ob;\r\n        }\r\n\r\n        function key(ind){\r\n            var ob, i, len;\r\n            if(!data.k.length || typeof(data.k[0]) === 'number'){\r\n                throw new Error('The property has no keyframe at index ' + ind);\r\n            }\r\n            ind -= 1;\r\n            ob = {\r\n                time: data.k[ind].t/elem.comp.globalData.frameRate,\r\n                value: []\r\n            };\r\n            var arr = data.k[ind].hasOwnProperty('s') ? data.k[ind].s : data.k[ind - 1].e;\r\n\r\n            len = arr.length;\r\n            for(i=0;i<len;i+=1){\r\n                ob[i] = arr[i];\r\n                ob.value[i] = arr[i]\r\n            }\r\n            return ob;\r\n        }\r\n\r\n        function framesToTime(frames, fps) { \r\n            if (!fps) {\r\n                fps = elem.comp.globalData.frameRate;\r\n            }\r\n            return frames / fps;\r\n        }\r\n\r\n        function timeToFrames(t, fps) {\r\n            if (!t && t !== 0) {\r\n                t = time;\r\n            }\r\n            if (!fps) {\r\n                fps = elem.comp.globalData.frameRate;\r\n            }\r\n            return t * fps;\r\n        }\r\n\r\n        function seedRandom(seed){\r\n            BMMath.seedrandom(randSeed + seed);\r\n        }\r\n\r\n        function sourceRectAtTime() {\r\n            return elem.sourceRectAtTime();\r\n        }\r\n\r\n        function substring(init, end) {\r\n            if(typeof value === 'string') {\r\n                if(end === undefined) {\r\n                return value.substring(init)\r\n                }\r\n                return value.substring(init, end)\r\n            }\r\n            return '';\r\n        }\r\n\r\n        function substr(init, end) {\r\n            if(typeof value === 'string') {\r\n                if(end === undefined) {\r\n                return value.substr(init)\r\n                }\r\n                return value.substr(init, end)\r\n            }\r\n            return '';\r\n        }\r\n\r\n        var time, velocity, value, text, textIndex, textTotal, selectorValue;\r\n        var index = elem.data.ind;\r\n        var hasParent = !!(elem.hierarchy && elem.hierarchy.length);\r\n        var parent;\r\n        var randSeed = Math.floor(Math.random()*1000000);\r\n        var globalData = elem.globalData;\r\n        function executeExpression(_value) {\r\n            // globalData.pushExpression();\r\n            value = _value;\r\n            if (_needsRandom) {\r\n                seedRandom(randSeed);\r\n            }\r\n            if (this.frameExpressionId === elem.globalData.frameId && this.propType !== 'textSelector') {\r\n                return value;\r\n            }\r\n            if(this.propType === 'textSelector'){\r\n                textIndex = this.textIndex;\r\n                textTotal = this.textTotal;\r\n                selectorValue = this.selectorValue;\r\n            }\r\n            if (!thisLayer) {\r\n                text = elem.layerInterface.text;\r\n                thisLayer = elem.layerInterface;\r\n                thisComp = elem.comp.compInterface;\r\n                toWorld = thisLayer.toWorld.bind(thisLayer);\r\n                fromWorld = thisLayer.fromWorld.bind(thisLayer);\r\n                fromComp = thisLayer.fromComp.bind(thisLayer);\r\n                toComp = thisLayer.toComp.bind(thisLayer);\r\n                mask = thisLayer.mask ? thisLayer.mask.bind(thisLayer) : null;\r\n                fromCompToSurface = fromComp;\r\n            }\r\n            if (!transform) {\r\n                transform = elem.layerInterface(\"ADBE Transform Group\");\r\n                $bm_transform = transform;\r\n                if(transform) {\r\n                    anchorPoint = transform.anchorPoint;\r\n                    /*position = transform.position;\r\n                    rotation = transform.rotation;\r\n                    scale = transform.scale;*/\r\n                }\r\n            }\r\n            \r\n            if (elemType === 4 && !content) {\r\n                content = thisLayer(\"ADBE Root Vectors Group\");\r\n            }\r\n            if (!effect) {\r\n                effect = thisLayer(4);\r\n            }\r\n            hasParent = !!(elem.hierarchy && elem.hierarchy.length);\r\n            if (hasParent && !parent) {\r\n                parent = elem.hierarchy[0].layerInterface;\r\n            }\r\n            time = this.comp.renderedFrame/this.comp.globalData.frameRate;\r\n            if (needsVelocity) {\r\n                velocity = velocityAtTime(time);\r\n            }\r\n            expression_function();\r\n            this.frameExpressionId = elem.globalData.frameId;\r\n\r\n\r\n            //TODO: Check if it's possible to return on ShapeInterface the .v value\r\n            if (scoped_bm_rt.propType === \"shape\") {\r\n                scoped_bm_rt = scoped_bm_rt.v;\r\n            }\r\n            // globalData.popExpression();\r\n            return scoped_bm_rt;\r\n        }\r\n        return executeExpression;\r\n    }\r\n\r\n    ob.initiateExpression = initiateExpression;\r\n    return ob;\r\n}());\r\nvar expressionHelpers = (function(){\r\n\r\n    function searchExpressions(elem,data,prop){\r\n        if(data.x){\r\n            prop.k = true;\r\n            prop.x = true;\r\n            prop.initiateExpression = ExpressionManager.initiateExpression;\r\n            prop.effectsSequence.push(prop.initiateExpression(elem,data,prop).bind(prop));\r\n        }\r\n    }\r\n\r\n    function getValueAtTime(frameNum) {\r\n        frameNum *= this.elem.globalData.frameRate;\r\n        frameNum -= this.offsetTime;\r\n        if(frameNum !== this._cachingAtTime.lastFrame) {\r\n            this._cachingAtTime.lastIndex = this._cachingAtTime.lastFrame < frameNum ? this._cachingAtTime.lastIndex : 0;\r\n            this._cachingAtTime.value = this.interpolateValue(frameNum, this._cachingAtTime);\r\n            this._cachingAtTime.lastFrame = frameNum;\r\n        }\r\n        return this._cachingAtTime.value;\r\n\r\n    }\r\n\r\n    function getSpeedAtTime(frameNum) {\r\n        var delta = -0.01;\r\n        var v1 = this.getValueAtTime(frameNum);\r\n        var v2 = this.getValueAtTime(frameNum + delta);\r\n        var speed = 0;\r\n        if(v1.length){\r\n            var i;\r\n            for(i=0;i<v1.length;i+=1){\r\n                speed += Math.pow(v2[i] - v1[i], 2);\r\n            }\r\n            speed = Math.sqrt(speed) * 100;\r\n        } else {\r\n            speed = 0;\r\n        }\r\n        return speed;\r\n    }\r\n\r\n    function getVelocityAtTime(frameNum) {\r\n        if(this.vel !== undefined){\r\n            return this.vel;\r\n        }\r\n        var delta = -0.001;\r\n        //frameNum += this.elem.data.st;\r\n        var v1 = this.getValueAtTime(frameNum);\r\n        var v2 = this.getValueAtTime(frameNum + delta);\r\n        var velocity;\r\n        if(v1.length){\r\n            velocity = createTypedArray('float32', v1.length);\r\n            var i;\r\n            for(i=0;i<v1.length;i+=1){\r\n                //removing frameRate\r\n                //if needed, don't add it here\r\n                //velocity[i] = this.elem.globalData.frameRate*((v2[i] - v1[i])/delta);\r\n                velocity[i] = (v2[i] - v1[i])/delta;\r\n            }\r\n        } else {\r\n            velocity = (v2 - v1)/delta;\r\n        }\r\n        return velocity;\r\n    }\r\n\r\n    function getStaticValueAtTime() {\r\n        return this.pv;\r\n    }\r\n\r\n    function setGroupProperty(propertyGroup){\r\n        this.propertyGroup = propertyGroup;\r\n    }\r\n\r\n\treturn {\r\n\t\tsearchExpressions: searchExpressions,\r\n\t\tgetSpeedAtTime: getSpeedAtTime,\r\n\t\tgetVelocityAtTime: getVelocityAtTime,\r\n\t\tgetValueAtTime: getValueAtTime,\r\n\t\tgetStaticValueAtTime: getStaticValueAtTime,\r\n\t\tsetGroupProperty: setGroupProperty,\r\n\t}\r\n}());\r\n(function addPropertyDecorator() {\r\n\r\n    function loopOut(type,duration,durationFlag){\r\n        if(!this.k || !this.keyframes){\r\n            return this.pv;\r\n        }\r\n        type = type ? type.toLowerCase() : '';\r\n        var currentFrame = this.comp.renderedFrame;\r\n        var keyframes = this.keyframes;\r\n        var lastKeyFrame = keyframes[keyframes.length - 1].t;\r\n        if(currentFrame<=lastKeyFrame){\r\n            return this.pv;\r\n        }else{\r\n            var cycleDuration, firstKeyFrame;\r\n            if(!durationFlag){\r\n                if(!duration || duration > keyframes.length - 1){\r\n                    duration = keyframes.length - 1;\r\n                }\r\n                firstKeyFrame = keyframes[keyframes.length - 1 - duration].t;\r\n                cycleDuration = lastKeyFrame - firstKeyFrame;\r\n            } else {\r\n                if(!duration){\r\n                    cycleDuration = Math.max(0,lastKeyFrame - this.elem.data.ip);\r\n                } else {\r\n                    cycleDuration = Math.abs(lastKeyFrame - elem.comp.globalData.frameRate*duration);\r\n                }\r\n                firstKeyFrame = lastKeyFrame - cycleDuration;\r\n            }\r\n            var i, len, ret;\r\n            if(type === 'pingpong') {\r\n                var iterations = Math.floor((currentFrame - firstKeyFrame)/cycleDuration);\r\n                if(iterations % 2 !== 0){\r\n                    return this.getValueAtTime(((cycleDuration - (currentFrame - firstKeyFrame) % cycleDuration +  firstKeyFrame)) / this.comp.globalData.frameRate, 0);\r\n                }\r\n            } else if(type === 'offset'){\r\n                var initV = this.getValueAtTime(firstKeyFrame / this.comp.globalData.frameRate, 0);\r\n                var endV = this.getValueAtTime(lastKeyFrame / this.comp.globalData.frameRate, 0);\r\n                var current = this.getValueAtTime(((currentFrame - firstKeyFrame) % cycleDuration +  firstKeyFrame) / this.comp.globalData.frameRate, 0);\r\n                var repeats = Math.floor((currentFrame - firstKeyFrame)/cycleDuration);\r\n                if(this.pv.length){\r\n                    ret = new Array(initV.length);\r\n                    len = ret.length;\r\n                    for(i=0;i<len;i+=1){\r\n                        ret[i] = (endV[i]-initV[i])*repeats + current[i];\r\n                    }\r\n                    return ret;\r\n                }\r\n                return (endV-initV)*repeats + current;\r\n            } else if(type === 'continue'){\r\n                var lastValue = this.getValueAtTime(lastKeyFrame / this.comp.globalData.frameRate, 0);\r\n                var nextLastValue = this.getValueAtTime((lastKeyFrame - 0.001) / this.comp.globalData.frameRate, 0);\r\n                if(this.pv.length){\r\n                    ret = new Array(lastValue.length);\r\n                    len = ret.length;\r\n                    for(i=0;i<len;i+=1){\r\n                        ret[i] = lastValue[i] + (lastValue[i]-nextLastValue[i])*((currentFrame - lastKeyFrame)/ this.comp.globalData.frameRate)/0.0005;\r\n                    }\r\n                    return ret;\r\n                }\r\n                return lastValue + (lastValue-nextLastValue)*(((currentFrame - lastKeyFrame))/0.001);\r\n            }\r\n            return this.getValueAtTime((((currentFrame - firstKeyFrame) % cycleDuration +  firstKeyFrame)) / this.comp.globalData.frameRate, 0);\r\n        }\r\n    }\r\n\r\n    function loopIn(type,duration, durationFlag) {\r\n        if(!this.k){\r\n            return this.pv;\r\n        }\r\n        type = type ? type.toLowerCase() : '';\r\n        var currentFrame = this.comp.renderedFrame;\r\n        var keyframes = this.keyframes;\r\n        var firstKeyFrame = keyframes[0].t;\r\n        if(currentFrame>=firstKeyFrame){\r\n            return this.pv;\r\n        }else{\r\n            var cycleDuration, lastKeyFrame;\r\n            if(!durationFlag){\r\n                if(!duration || duration > keyframes.length - 1){\r\n                    duration = keyframes.length - 1;\r\n                }\r\n                lastKeyFrame = keyframes[duration].t;\r\n                cycleDuration = lastKeyFrame - firstKeyFrame;\r\n            } else {\r\n                if(!duration){\r\n                    cycleDuration = Math.max(0,this.elem.data.op - firstKeyFrame);\r\n                } else {\r\n                    cycleDuration = Math.abs(elem.comp.globalData.frameRate*duration);\r\n                }\r\n                lastKeyFrame = firstKeyFrame + cycleDuration;\r\n            }\r\n            var i, len, ret;\r\n            if(type === 'pingpong') {\r\n                var iterations = Math.floor((firstKeyFrame - currentFrame)/cycleDuration);\r\n                if(iterations % 2 === 0){\r\n                    return this.getValueAtTime((((firstKeyFrame - currentFrame)%cycleDuration +  firstKeyFrame)) / this.comp.globalData.frameRate, 0);\r\n                }\r\n            } else if(type === 'offset'){\r\n                var initV = this.getValueAtTime(firstKeyFrame / this.comp.globalData.frameRate, 0);\r\n                var endV = this.getValueAtTime(lastKeyFrame / this.comp.globalData.frameRate, 0);\r\n                var current = this.getValueAtTime((cycleDuration - (firstKeyFrame - currentFrame)%cycleDuration +  firstKeyFrame) / this.comp.globalData.frameRate, 0);\r\n                var repeats = Math.floor((firstKeyFrame - currentFrame)/cycleDuration)+1;\r\n                if(this.pv.length){\r\n                    ret = new Array(initV.length);\r\n                    len = ret.length;\r\n                    for(i=0;i<len;i+=1){\r\n                        ret[i] = current[i]-(endV[i]-initV[i])*repeats;\r\n                    }\r\n                    return ret;\r\n                }\r\n                return current-(endV-initV)*repeats;\r\n            } else if(type === 'continue'){\r\n                var firstValue = this.getValueAtTime(firstKeyFrame / this.comp.globalData.frameRate, 0);\r\n                var nextFirstValue = this.getValueAtTime((firstKeyFrame + 0.001) / this.comp.globalData.frameRate, 0);\r\n                if(this.pv.length){\r\n                    ret = new Array(firstValue.length);\r\n                    len = ret.length;\r\n                    for(i=0;i<len;i+=1){\r\n                        ret[i] = firstValue[i] + (firstValue[i]-nextFirstValue[i])*(firstKeyFrame - currentFrame)/0.001;\r\n                    }\r\n                    return ret;\r\n                }\r\n                return firstValue + (firstValue-nextFirstValue)*(firstKeyFrame - currentFrame)/0.001;\r\n            }\r\n            return this.getValueAtTime(((cycleDuration - (firstKeyFrame - currentFrame) % cycleDuration +  firstKeyFrame)) / this.comp.globalData.frameRate, 0);\r\n        }\r\n    }\r\n\r\n    function smooth(width, samples) {\r\n        if (!this.k){\r\n            return this.pv;\r\n        }\r\n        width = (width || 0.4) * 0.5;\r\n        samples = Math.floor(samples || 5);\r\n        if (samples <= 1) {\r\n            return this.pv;\r\n        }\r\n        var currentTime = this.comp.renderedFrame / this.comp.globalData.frameRate;\r\n        var initFrame = currentTime - width;\r\n        var endFrame = currentTime + width;\r\n        var sampleFrequency = samples > 1 ? (endFrame - initFrame) / (samples - 1) : 1;\r\n        var i = 0, j = 0;\r\n        var value;\r\n        if (this.pv.length) {\r\n            value = createTypedArray('float32', this.pv.length);\r\n        } else {\r\n            value = 0;\r\n        }\r\n        var sampleValue;\r\n        while (i < samples) {\r\n            sampleValue = this.getValueAtTime(initFrame + i * sampleFrequency);\r\n            if(this.pv.length) {\r\n                for (j = 0; j < this.pv.length; j += 1) {\r\n                    value[j] += sampleValue[j];\r\n                }\r\n            } else {\r\n                value += sampleValue;\r\n            }\r\n            i += 1;\r\n        }\r\n        if(this.pv.length) {\r\n            for (j = 0; j < this.pv.length; j += 1) {\r\n                value[j] /= samples;\r\n            }\r\n        } else {\r\n            value /= samples;\r\n        }\r\n        return value;\r\n    }\r\n\r\n    function getValueAtTime(frameNum) {\r\n        frameNum *= this.elem.globalData.frameRate;\r\n        frameNum -= this.offsetTime;\r\n        if(frameNum !== this._cachingAtTime.lastFrame) {\r\n            this._cachingAtTime.lastIndex = this._cachingAtTime.lastFrame < frameNum ? this._cachingAtTime.lastIndex : 0;\r\n            this._cachingAtTime.value = this.interpolateValue(frameNum, this._cachingAtTime);\r\n            this._cachingAtTime.lastFrame = frameNum;\r\n        }\r\n        return this._cachingAtTime.value;\r\n\r\n    }\r\n\r\n    function getTransformValueAtTime(time) {\r\n        console.warn('Transform at time not supported');\r\n    }\r\n\r\n    function getTransformStaticValueAtTime(time) {\r\n\r\n    }\r\n\r\n    var getTransformProperty = TransformPropertyFactory.getTransformProperty;\r\n    TransformPropertyFactory.getTransformProperty = function(elem, data, container) {\r\n        var prop = getTransformProperty(elem, data, container);\r\n        if(prop.dynamicProperties.length) {\r\n            prop.getValueAtTime = getTransformValueAtTime.bind(prop);\r\n        } else {\r\n            prop.getValueAtTime = getTransformStaticValueAtTime.bind(prop);\r\n        }\r\n        prop.setGroupProperty = expressionHelpers.setGroupProperty;\r\n        return prop;\r\n    };\r\n\r\n    var propertyGetProp = PropertyFactory.getProp;\r\n    PropertyFactory.getProp = function(elem,data,type, mult, container){\r\n        var prop = propertyGetProp(elem,data,type, mult, container);\r\n        //prop.getVelocityAtTime = getVelocityAtTime;\r\n        //prop.loopOut = loopOut;\r\n        //prop.loopIn = loopIn;\r\n        if(prop.kf){\r\n            prop.getValueAtTime = expressionHelpers.getValueAtTime.bind(prop);\r\n        } else {\r\n            prop.getValueAtTime = expressionHelpers.getStaticValueAtTime.bind(prop);\r\n        }\r\n        prop.setGroupProperty = expressionHelpers.setGroupProperty;\r\n        prop.loopOut = loopOut;\r\n        prop.loopIn = loopIn;\r\n        prop.smooth = smooth;\r\n        prop.getVelocityAtTime = expressionHelpers.getVelocityAtTime.bind(prop);\r\n        prop.getSpeedAtTime = expressionHelpers.getSpeedAtTime.bind(prop);\r\n        prop.numKeys = data.a === 1 ? data.k.length : 0;\r\n        prop.propertyIndex = data.ix;\r\n        var value = 0;\r\n        if(type !== 0) {\r\n            value = createTypedArray('float32', data.a === 1 ?  data.k[0].s.length : data.k.length);\r\n        }\r\n        prop._cachingAtTime = {\r\n            lastFrame: initialDefaultFrame,\r\n            lastIndex: 0,\r\n            value: value\r\n        };\r\n        expressionHelpers.searchExpressions(elem,data,prop);\r\n        if(prop.k){\r\n            container.addDynamicProperty(prop);\r\n        }\r\n\r\n        return prop;\r\n    };\r\n\r\n    function getShapeValueAtTime(frameNum) {\r\n        //For now this caching object is created only when needed instead of creating it when the shape is initialized.\r\n        if (!this._cachingAtTime) {\r\n            this._cachingAtTime = {\r\n                shapeValue: shape_pool.clone(this.pv),\r\n                lastIndex: 0,\r\n                lastTime: initialDefaultFrame\r\n            };\r\n        }\r\n        \r\n        frameNum *= this.elem.globalData.frameRate;\r\n        frameNum -= this.offsetTime;\r\n        if(frameNum !== this._cachingAtTime.lastTime) {\r\n            this._cachingAtTime.lastIndex = this._cachingAtTime.lastTime < frameNum ? this._caching.lastIndex : 0;\r\n            this._cachingAtTime.lastTime = frameNum;\r\n            this.interpolateShape(frameNum, this._cachingAtTime.shapeValue, this._cachingAtTime);\r\n        }\r\n        return this._cachingAtTime.shapeValue;\r\n    }\r\n\r\n    var ShapePropertyConstructorFunction = ShapePropertyFactory.getConstructorFunction();\r\n    var KeyframedShapePropertyConstructorFunction = ShapePropertyFactory.getKeyframedConstructorFunction();\r\n\r\n    function ShapeExpressions(){}\r\n    ShapeExpressions.prototype = {\r\n        vertices: function(prop, time){\r\n            if (this.k) {\r\n                this.getValue();\r\n            }\r\n            var shapePath = this.v;\r\n            if(time !== undefined) {\r\n                shapePath = this.getValueAtTime(time, 0);\r\n            }\r\n            var i, len = shapePath._length;\r\n            var vertices = shapePath[prop];\r\n            var points = shapePath.v;\r\n            var arr = createSizedArray(len);\r\n            for(i = 0; i < len; i += 1) {\r\n                if(prop === 'i' || prop === 'o') {\r\n                    arr[i] = [vertices[i][0] - points[i][0], vertices[i][1] - points[i][1]];\r\n                } else {\r\n                    arr[i] = [vertices[i][0], vertices[i][1]];\r\n                }\r\n                \r\n            }\r\n            return arr;\r\n        },\r\n        points: function(time){\r\n            return this.vertices('v', time);\r\n        },\r\n        inTangents: function(time){\r\n            return this.vertices('i', time);\r\n        },\r\n        outTangents: function(time){\r\n            return this.vertices('o', time);\r\n        },\r\n        isClosed: function(){\r\n            return this.v.c;\r\n        },\r\n        pointOnPath: function(perc, time){\r\n            var shapePath = this.v;\r\n            if(time !== undefined) {\r\n                shapePath = this.getValueAtTime(time, 0);\r\n            }\r\n            if(!this._segmentsLength) {\r\n                this._segmentsLength = bez.getSegmentsLength(shapePath);\r\n            }\r\n\r\n            var segmentsLength = this._segmentsLength;\r\n            var lengths = segmentsLength.lengths;\r\n            var lengthPos = segmentsLength.totalLength * perc;\r\n            var i = 0, len = lengths.length;\r\n            var j = 0, jLen;\r\n            var accumulatedLength = 0, pt;\r\n            while(i < len) {\r\n                if(accumulatedLength + lengths[i].addedLength > lengthPos) {\r\n                    var initIndex = i;\r\n                    var endIndex = (shapePath.c && i === len - 1) ? 0 : i + 1;\r\n                    var segmentPerc = (lengthPos - accumulatedLength)/lengths[i].addedLength;\r\n                    pt = bez.getPointInSegment(shapePath.v[initIndex], shapePath.v[endIndex], shapePath.o[initIndex], shapePath.i[endIndex], segmentPerc, lengths[i]);\r\n                    break;\r\n                } else {\r\n                    accumulatedLength += lengths[i].addedLength;\r\n                }\r\n                i += 1;\r\n            }\r\n            if(!pt){\r\n                pt = shapePath.c ? [shapePath.v[0][0],shapePath.v[0][1]]:[shapePath.v[shapePath._length-1][0],shapePath.v[shapePath._length-1][1]];\r\n            }\r\n            return pt;\r\n        },\r\n        vectorOnPath: function(perc, time, vectorType){\r\n            //perc doesn't use triple equality because it can be a Number object as well as a primitive.\r\n            perc = perc == 1 ? this.v.c ? 0 : 0.999 : perc;\r\n            var pt1 = this.pointOnPath(perc, time);\r\n            var pt2 = this.pointOnPath(perc + 0.001, time);\r\n            var xLength = pt2[0] - pt1[0];\r\n            var yLength = pt2[1] - pt1[1];\r\n            var magnitude = Math.sqrt(Math.pow(xLength,2) + Math.pow(yLength,2));\r\n            if (magnitude === 0) {\r\n                return [0,0];\r\n            }\r\n            var unitVector = vectorType === 'tangent' ? [xLength/magnitude, yLength/magnitude] : [-yLength/magnitude, xLength/magnitude];\r\n            return unitVector;\r\n        },\r\n        tangentOnPath: function(perc, time){\r\n            return this.vectorOnPath(perc, time, 'tangent');\r\n        },\r\n        normalOnPath: function(perc, time){\r\n            return this.vectorOnPath(perc, time, 'normal');\r\n        },\r\n        setGroupProperty: expressionHelpers.setGroupProperty,\r\n        getValueAtTime: expressionHelpers.getStaticValueAtTime\r\n    };\r\n    extendPrototype([ShapeExpressions], ShapePropertyConstructorFunction);\r\n    extendPrototype([ShapeExpressions], KeyframedShapePropertyConstructorFunction);\r\n    KeyframedShapePropertyConstructorFunction.prototype.getValueAtTime = getShapeValueAtTime;\r\n    KeyframedShapePropertyConstructorFunction.prototype.initiateExpression = ExpressionManager.initiateExpression;\r\n\r\n    var propertyGetShapeProp = ShapePropertyFactory.getShapeProp;\r\n    ShapePropertyFactory.getShapeProp = function(elem,data,type, arr, trims){\r\n        var prop = propertyGetShapeProp(elem,data,type, arr, trims);\r\n        prop.propertyIndex = data.ix;\r\n        prop.lock = false;\r\n        if(type === 3){\r\n            expressionHelpers.searchExpressions(elem,data.pt,prop);\r\n        } else if(type === 4){\r\n            expressionHelpers.searchExpressions(elem,data.ks,prop);\r\n        }\r\n        if(prop.k){\r\n            elem.addDynamicProperty(prop);\r\n        }\r\n        return prop;\r\n    };\r\n}());\r\n(function addDecorator() {\r\n\r\n    function searchExpressions(){\r\n        if(this.data.d.x){\r\n            this.calculateExpression = ExpressionManager.initiateExpression.bind(this)(this.elem,this.data.d,this);\r\n            this.addEffect(this.getExpressionValue.bind(this));\r\n            return true;\r\n        }\r\n    }\r\n\r\n    TextProperty.prototype.getExpressionValue = function(currentValue, text) {\r\n        var newValue = this.calculateExpression(text);\r\n        if(currentValue.t !== newValue) {\r\n            var newData = {};\r\n            this.copyData(newData, currentValue);\r\n            newData.t = newValue.toString();\r\n            newData.__complete = false;\r\n            return newData;\r\n        }\r\n        return currentValue;\r\n    }\r\n\r\n    TextProperty.prototype.searchProperty = function(){\r\n\r\n        var isKeyframed = this.searchKeyframes();\r\n        var hasExpressions = this.searchExpressions();\r\n        this.kf = isKeyframed || hasExpressions;\r\n        return this.kf;\r\n    };\r\n\r\n    TextProperty.prototype.searchExpressions = searchExpressions;\r\n    \r\n}());\r\nvar ShapeExpressionInterface = (function(){\r\n\r\n    function iterateElements(shapes,view, propertyGroup){\r\n        var arr = [];\r\n        var i, len = shapes ? shapes.length : 0;\r\n        for(i=0;i<len;i+=1){\r\n            if(shapes[i].ty == 'gr'){\r\n                arr.push(groupInterfaceFactory(shapes[i],view[i],propertyGroup));\r\n            }else if(shapes[i].ty == 'fl'){\r\n                arr.push(fillInterfaceFactory(shapes[i],view[i],propertyGroup));\r\n            }else if(shapes[i].ty == 'st'){\r\n                arr.push(strokeInterfaceFactory(shapes[i],view[i],propertyGroup));\r\n            }else if(shapes[i].ty == 'tm'){\r\n                arr.push(trimInterfaceFactory(shapes[i],view[i],propertyGroup));\r\n            }else if(shapes[i].ty == 'tr'){\r\n                //arr.push(transformInterfaceFactory(shapes[i],view[i],propertyGroup));\r\n            }else if(shapes[i].ty == 'el'){\r\n                arr.push(ellipseInterfaceFactory(shapes[i],view[i],propertyGroup));\r\n            }else if(shapes[i].ty == 'sr'){\r\n                arr.push(starInterfaceFactory(shapes[i],view[i],propertyGroup));\r\n            } else if(shapes[i].ty == 'sh'){\r\n                arr.push(pathInterfaceFactory(shapes[i],view[i],propertyGroup));\r\n            } else if(shapes[i].ty == 'rc'){\r\n                arr.push(rectInterfaceFactory(shapes[i],view[i],propertyGroup));\r\n            } else if(shapes[i].ty == 'rd'){\r\n                arr.push(roundedInterfaceFactory(shapes[i],view[i],propertyGroup));\r\n            } else if(shapes[i].ty == 'rp'){\r\n                arr.push(repeaterInterfaceFactory(shapes[i],view[i],propertyGroup));\r\n            }\r\n        }\r\n        return arr;\r\n    }\r\n\r\n    function contentsInterfaceFactory(shape,view, propertyGroup){\r\n       var interfaces;\r\n       var interfaceFunction = function _interfaceFunction(value){\r\n           var i = 0, len = interfaces.length;\r\n            while(i<len){\r\n                if(interfaces[i]._name === value || interfaces[i].mn === value || interfaces[i].propertyIndex === value || interfaces[i].ix === value || interfaces[i].ind === value){\r\n                   return interfaces[i];\r\n                }\r\n                i+=1;\r\n            }\r\n            if(typeof value === 'number'){\r\n               return interfaces[value-1];\r\n            }\r\n       };\r\n       interfaceFunction.propertyGroup = function(val){\r\n           if(val === 1){\r\n               return interfaceFunction;\r\n           } else{\r\n               return propertyGroup(val-1);\r\n           }\r\n       };\r\n       interfaces = iterateElements(shape.it, view.it, interfaceFunction.propertyGroup);\r\n       interfaceFunction.numProperties = interfaces.length;\r\n       interfaceFunction.propertyIndex = shape.cix;\r\n       interfaceFunction._name = shape.nm;\r\n\r\n       return interfaceFunction;\r\n   }\r\n\r\n    function groupInterfaceFactory(shape,view, propertyGroup){\r\n        var interfaceFunction = function _interfaceFunction(value){\r\n            switch(value){\r\n                case 'ADBE Vectors Group':\r\n                case 'Contents':\r\n                case 2:\r\n                    return interfaceFunction.content;\r\n                //Not necessary for now. Keeping them here in case a new case appears\r\n                //case 'ADBE Vector Transform Group':\r\n                //case 3:\r\n                default:\r\n                    return interfaceFunction.transform;\r\n            }\r\n        };\r\n        interfaceFunction.propertyGroup = function(val){\r\n            if(val === 1){\r\n                return interfaceFunction;\r\n            } else{\r\n                return propertyGroup(val-1);\r\n            }\r\n        };\r\n        var content = contentsInterfaceFactory(shape,view,interfaceFunction.propertyGroup);\r\n        var transformInterface = transformInterfaceFactory(shape.it[shape.it.length - 1],view.it[view.it.length - 1],interfaceFunction.propertyGroup);\r\n        interfaceFunction.content = content;\r\n        interfaceFunction.transform = transformInterface;\r\n        Object.defineProperty(interfaceFunction, '_name', {\r\n            get: function(){\r\n                return shape.nm;\r\n            }\r\n        });\r\n        //interfaceFunction.content = interfaceFunction;\r\n        interfaceFunction.numProperties = shape.np;\r\n        interfaceFunction.propertyIndex = shape.ix;\r\n        interfaceFunction.nm = shape.nm;\r\n        interfaceFunction.mn = shape.mn;\r\n        return interfaceFunction;\r\n    }\r\n\r\n    function fillInterfaceFactory(shape,view,propertyGroup){\r\n        function interfaceFunction(val){\r\n            if(val === 'Color' || val === 'color'){\r\n                return interfaceFunction.color;\r\n            } else if(val === 'Opacity' || val === 'opacity'){\r\n                return interfaceFunction.opacity;\r\n            }\r\n        }\r\n        Object.defineProperties(interfaceFunction, {\r\n            'color': {\r\n                get: ExpressionPropertyInterface(view.c)\r\n            },\r\n            'opacity': {\r\n                get: ExpressionPropertyInterface(view.o)\r\n            },\r\n            '_name': { value: shape.nm },\r\n            'mn': { value: shape.mn }\r\n        });\r\n\r\n        view.c.setGroupProperty(propertyGroup);\r\n        view.o.setGroupProperty(propertyGroup);\r\n        return interfaceFunction;\r\n    }\r\n\r\n    function strokeInterfaceFactory(shape,view,propertyGroup){\r\n        function _propertyGroup(val){\r\n            if(val === 1){\r\n                return ob;\r\n            } else{\r\n                return propertyGroup(val-1);\r\n            }\r\n        }\r\n        function _dashPropertyGroup(val){\r\n            if(val === 1){\r\n                return dashOb;\r\n            } else{\r\n                return _propertyGroup(val-1);\r\n            }\r\n        }\r\n        function addPropertyToDashOb(i) {\r\n            Object.defineProperty(dashOb, shape.d[i].nm, {\r\n                get: ExpressionPropertyInterface(view.d.dataProps[i].p)\r\n            });\r\n        }\r\n        var i, len = shape.d ? shape.d.length : 0;\r\n        var dashOb = {};\r\n        for (i = 0; i < len; i += 1) {\r\n            addPropertyToDashOb(i);\r\n            view.d.dataProps[i].p.setGroupProperty(_dashPropertyGroup);\r\n        }\r\n\r\n        function interfaceFunction(val){\r\n            if(val === 'Color' || val === 'color'){\r\n                return interfaceFunction.color;\r\n            } else if(val === 'Opacity' || val === 'opacity'){\r\n                return interfaceFunction.opacity;\r\n            } else if(val === 'Stroke Width' || val === 'stroke width'){\r\n                return interfaceFunction.strokeWidth;\r\n            }\r\n        }\r\n        Object.defineProperties(interfaceFunction, {\r\n            'color': {\r\n                get: ExpressionPropertyInterface(view.c)\r\n            },\r\n            'opacity': {\r\n                get: ExpressionPropertyInterface(view.o)\r\n            },\r\n            'strokeWidth': {\r\n                get: ExpressionPropertyInterface(view.w)\r\n            },\r\n            'dash': {\r\n                get: function() {\r\n                    return dashOb;\r\n                }\r\n            },\r\n            '_name': { value: shape.nm },\r\n            'mn': { value: shape.mn }\r\n        });\r\n\r\n        view.c.setGroupProperty(_propertyGroup);\r\n        view.o.setGroupProperty(_propertyGroup);\r\n        view.w.setGroupProperty(_propertyGroup);\r\n        return interfaceFunction;\r\n    }\r\n\r\n    function trimInterfaceFactory(shape,view,propertyGroup){\r\n        function _propertyGroup(val){\r\n            if(val == 1){\r\n                return interfaceFunction;\r\n            } else {\r\n                return propertyGroup(--val);\r\n            }\r\n        }\r\n        interfaceFunction.propertyIndex = shape.ix;\r\n\r\n        view.s.setGroupProperty(_propertyGroup);\r\n        view.e.setGroupProperty(_propertyGroup);\r\n        view.o.setGroupProperty(_propertyGroup);\r\n\r\n        function interfaceFunction(val){\r\n            if(val === shape.e.ix || val === 'End' || val === 'end'){\r\n                return interfaceFunction.end;\r\n            }\r\n            if(val === shape.s.ix){\r\n                return interfaceFunction.start;\r\n            }\r\n            if(val === shape.o.ix){\r\n                return interfaceFunction.offset;\r\n            }\r\n        }\r\n        interfaceFunction.propertyIndex = shape.ix;\r\n        interfaceFunction.propertyGroup = propertyGroup;\r\n\r\n        Object.defineProperties(interfaceFunction, {\r\n            'start': {\r\n                get: ExpressionPropertyInterface(view.s)\r\n            },\r\n            'end': {\r\n                get: ExpressionPropertyInterface(view.e)\r\n            },\r\n            'offset': {\r\n                get: ExpressionPropertyInterface(view.o)\r\n            },\r\n            '_name': { value: shape.nm }\r\n        });\r\n        interfaceFunction.mn = shape.mn;\r\n        return interfaceFunction;\r\n    }\r\n\r\n    function transformInterfaceFactory(shape,view,propertyGroup){\r\n        function _propertyGroup(val){\r\n            if(val == 1){\r\n                return interfaceFunction;\r\n            } else {\r\n                return propertyGroup(--val);\r\n            }\r\n        }\r\n        view.transform.mProps.o.setGroupProperty(_propertyGroup);\r\n        view.transform.mProps.p.setGroupProperty(_propertyGroup);\r\n        view.transform.mProps.a.setGroupProperty(_propertyGroup);\r\n        view.transform.mProps.s.setGroupProperty(_propertyGroup);\r\n        view.transform.mProps.r.setGroupProperty(_propertyGroup);\r\n        if(view.transform.mProps.sk){\r\n            view.transform.mProps.sk.setGroupProperty(_propertyGroup);\r\n            view.transform.mProps.sa.setGroupProperty(_propertyGroup);\r\n        }\r\n        view.transform.op.setGroupProperty(_propertyGroup);\r\n\r\n        function interfaceFunction(value){\r\n            if(shape.a.ix === value || value === 'Anchor Point'){\r\n                return interfaceFunction.anchorPoint;\r\n            }\r\n            if(shape.o.ix === value || value === 'Opacity'){\r\n                return interfaceFunction.opacity;\r\n            }\r\n            if(shape.p.ix === value || value === 'Position'){\r\n                return interfaceFunction.position;\r\n            }\r\n            if(shape.r.ix === value || value === 'Rotation' || value === 'ADBE Vector Rotation'){\r\n                return interfaceFunction.rotation;\r\n            }\r\n            if(shape.s.ix === value || value === 'Scale'){\r\n                return interfaceFunction.scale;\r\n            }\r\n            if(shape.sk && shape.sk.ix === value || value === 'Skew'){\r\n                return interfaceFunction.skew;\r\n            }\r\n            if(shape.sa && shape.sa.ix === value || value === 'Skew Axis'){\r\n                return interfaceFunction.skewAxis;\r\n            }\r\n\r\n        }\r\n        Object.defineProperties(interfaceFunction, {\r\n            'opacity': {\r\n                get: ExpressionPropertyInterface(view.transform.mProps.o)\r\n            },\r\n            'position': {\r\n                get: ExpressionPropertyInterface(view.transform.mProps.p)\r\n            },\r\n            'anchorPoint': {\r\n                get: ExpressionPropertyInterface(view.transform.mProps.a)\r\n            },\r\n            'scale': {\r\n                get: ExpressionPropertyInterface(view.transform.mProps.s)\r\n            },\r\n            'rotation': {\r\n                get: ExpressionPropertyInterface(view.transform.mProps.r)\r\n            },\r\n            'skew': {\r\n                get: ExpressionPropertyInterface(view.transform.mProps.sk)\r\n            },\r\n            'skewAxis': {\r\n                get: ExpressionPropertyInterface(view.transform.mProps.sa)\r\n            },\r\n            '_name': { value: shape.nm }\r\n        });\r\n        interfaceFunction.ty = 'tr';\r\n        interfaceFunction.mn = shape.mn;\r\n        interfaceFunction.propertyGroup = propertyGroup;\r\n        return interfaceFunction;\r\n    }\r\n\r\n    function ellipseInterfaceFactory(shape,view,propertyGroup){\r\n        function _propertyGroup(val){\r\n            if(val == 1){\r\n                return interfaceFunction;\r\n            } else {\r\n                return propertyGroup(--val);\r\n            }\r\n        }\r\n        interfaceFunction.propertyIndex = shape.ix;\r\n        var prop = view.sh.ty === 'tm' ? view.sh.prop : view.sh;\r\n        prop.s.setGroupProperty(_propertyGroup);\r\n        prop.p.setGroupProperty(_propertyGroup);\r\n        function interfaceFunction(value){\r\n            if(shape.p.ix === value){\r\n                return interfaceFunction.position;\r\n            }\r\n            if(shape.s.ix === value){\r\n                return interfaceFunction.size;\r\n            }\r\n        }\r\n\r\n        Object.defineProperties(interfaceFunction, {\r\n            'size': {\r\n                get: ExpressionPropertyInterface(prop.s)\r\n            },\r\n            'position': {\r\n                get: ExpressionPropertyInterface(prop.p)\r\n            },\r\n            '_name': { value: shape.nm }\r\n        });\r\n        interfaceFunction.mn = shape.mn;\r\n        return interfaceFunction;\r\n    }\r\n\r\n    function starInterfaceFactory(shape,view,propertyGroup){\r\n        function _propertyGroup(val){\r\n            if(val == 1){\r\n                return interfaceFunction;\r\n            } else {\r\n                return propertyGroup(--val);\r\n            }\r\n        }\r\n        var prop = view.sh.ty === 'tm' ? view.sh.prop : view.sh;\r\n        interfaceFunction.propertyIndex = shape.ix;\r\n        prop.or.setGroupProperty(_propertyGroup);\r\n        prop.os.setGroupProperty(_propertyGroup);\r\n        prop.pt.setGroupProperty(_propertyGroup);\r\n        prop.p.setGroupProperty(_propertyGroup);\r\n        prop.r.setGroupProperty(_propertyGroup);\r\n        if(shape.ir){\r\n            prop.ir.setGroupProperty(_propertyGroup);\r\n            prop.is.setGroupProperty(_propertyGroup);\r\n        }\r\n\r\n        function interfaceFunction(value){\r\n            if(shape.p.ix === value){\r\n                return interfaceFunction.position;\r\n            }\r\n            if(shape.r.ix === value){\r\n                return interfaceFunction.rotation;\r\n            }\r\n            if(shape.pt.ix === value){\r\n                return interfaceFunction.points;\r\n            }\r\n            if(shape.or.ix === value || 'ADBE Vector Star Outer Radius' === value){\r\n                return interfaceFunction.outerRadius;\r\n            }\r\n            if(shape.os.ix === value){\r\n                return interfaceFunction.outerRoundness;\r\n            }\r\n            if(shape.ir && (shape.ir.ix === value || 'ADBE Vector Star Inner Radius' === value)){\r\n                return interfaceFunction.innerRadius;\r\n            }\r\n            if(shape.is && shape.is.ix === value){\r\n                return interfaceFunction.innerRoundness;\r\n            }\r\n\r\n        }\r\n\r\n        Object.defineProperties(interfaceFunction, {\r\n            'position': {\r\n                get: ExpressionPropertyInterface(prop.p)\r\n            },\r\n            'rotation': {\r\n                get: ExpressionPropertyInterface(prop.r)\r\n            },\r\n            'points': {\r\n                get: ExpressionPropertyInterface(prop.pt)\r\n            },\r\n            'outerRadius': {\r\n                get: ExpressionPropertyInterface(prop.or)\r\n            },\r\n            'outerRoundness': {\r\n                get: ExpressionPropertyInterface(prop.os)\r\n            },\r\n            'innerRadius': {\r\n                get: ExpressionPropertyInterface(prop.ir)\r\n            },\r\n            'innerRoundness': {\r\n                get: ExpressionPropertyInterface(prop.is)\r\n            },\r\n            '_name': { value: shape.nm }\r\n        });\r\n        interfaceFunction.mn = shape.mn;\r\n        return interfaceFunction;\r\n    }\r\n\r\n    function rectInterfaceFactory(shape,view,propertyGroup){\r\n        function _propertyGroup(val){\r\n            if(val == 1){\r\n                return interfaceFunction;\r\n            } else {\r\n                return propertyGroup(--val);\r\n            }\r\n        }\r\n        var prop = view.sh.ty === 'tm' ? view.sh.prop : view.sh;\r\n        interfaceFunction.propertyIndex = shape.ix;\r\n        prop.p.setGroupProperty(_propertyGroup);\r\n        prop.s.setGroupProperty(_propertyGroup);\r\n        prop.r.setGroupProperty(_propertyGroup);\r\n\r\n        function interfaceFunction(value){\r\n            if(shape.p.ix === value){\r\n                return interfaceFunction.position;\r\n            }\r\n            if(shape.r.ix === value){\r\n                return interfaceFunction.roundness;\r\n            }\r\n            if(shape.s.ix === value || value === 'Size' || value === 'ADBE Vector Rect Size'){\r\n                return interfaceFunction.size;\r\n            }\r\n\r\n        }\r\n        Object.defineProperties(interfaceFunction, {\r\n            'position': {\r\n                get: ExpressionPropertyInterface(prop.p)\r\n            },\r\n            'roundness': {\r\n                get: ExpressionPropertyInterface(prop.r)\r\n            },\r\n            'size': {\r\n                get: ExpressionPropertyInterface(prop.s)\r\n            },\r\n            '_name': { value: shape.nm }\r\n        });\r\n        interfaceFunction.mn = shape.mn;\r\n        return interfaceFunction;\r\n    }\r\n\r\n    function roundedInterfaceFactory(shape,view,propertyGroup){\r\n        function _propertyGroup(val){\r\n            if(val == 1){\r\n                return interfaceFunction;\r\n            } else {\r\n                return propertyGroup(--val);\r\n            }\r\n        }\r\n        var prop = view;\r\n        interfaceFunction.propertyIndex = shape.ix;\r\n        prop.rd.setGroupProperty(_propertyGroup);\r\n\r\n        function interfaceFunction(value){\r\n            if(shape.r.ix === value || 'Round Corners 1' === value){\r\n                return interfaceFunction.radius;\r\n            }\r\n\r\n        }\r\n        Object.defineProperties(interfaceFunction, {\r\n            'radius': {\r\n                get: ExpressionPropertyInterface(prop.rd)\r\n            },\r\n            '_name': { value: shape.nm }\r\n        });\r\n        interfaceFunction.mn = shape.mn;\r\n        return interfaceFunction;\r\n    }\r\n\r\n    function repeaterInterfaceFactory(shape,view,propertyGroup){\r\n        function _propertyGroup(val){\r\n            if(val == 1){\r\n                return interfaceFunction;\r\n            } else {\r\n                return propertyGroup(--val);\r\n            }\r\n        }\r\n        var prop = view;\r\n        interfaceFunction.propertyIndex = shape.ix;\r\n        prop.c.setGroupProperty(_propertyGroup);\r\n        prop.o.setGroupProperty(_propertyGroup);\r\n\r\n        function interfaceFunction(value){\r\n            if(shape.c.ix === value || 'Copies' === value){\r\n                return interfaceFunction.copies;\r\n            } else if(shape.o.ix === value || 'Offset' === value){\r\n                return interfaceFunction.offset;\r\n            }\r\n\r\n        }\r\n        Object.defineProperties(interfaceFunction, {\r\n            'copies': {\r\n                get: ExpressionPropertyInterface(prop.c)\r\n            },\r\n            'offset': {\r\n                get: ExpressionPropertyInterface(prop.o)\r\n            },\r\n            '_name': { value: shape.nm }\r\n        });\r\n        interfaceFunction.mn = shape.mn;\r\n        return interfaceFunction;\r\n    }\r\n\r\n    function pathInterfaceFactory(shape,view,propertyGroup){\r\n        var prop = view.sh;\r\n        function _propertyGroup(val){\r\n            if(val == 1){\r\n                return interfaceFunction;\r\n            } else {\r\n                return propertyGroup(--val);\r\n            }\r\n        }\r\n        prop.setGroupProperty(_propertyGroup);\r\n\r\n        function interfaceFunction(val){\r\n            if(val === 'Shape' || val === 'shape' || val === 'Path' || val === 'path' || val === 'ADBE Vector Shape' || val === 2){\r\n                return interfaceFunction.path;\r\n            }\r\n        }\r\n        Object.defineProperties(interfaceFunction, {\r\n            'path': {\r\n                get: function(){\r\n                    if(prop.k){\r\n                        prop.getValue();\r\n                    }\r\n                    return prop;\r\n                }\r\n            },\r\n            'shape': {\r\n                get: function(){\r\n                    if(prop.k){\r\n                        prop.getValue();\r\n                    }\r\n                    return prop;\r\n                }\r\n            },\r\n            '_name': { value: shape.nm },\r\n            'ix': { value: shape.ix },\r\n            'mn': { value: shape.mn }\r\n        });\r\n        return interfaceFunction;\r\n    }\r\n\r\n    return function(shapes,view,propertyGroup) {\r\n        var interfaces;\r\n        function _interfaceFunction(value){\r\n            if(typeof value === 'number'){\r\n                return interfaces[value-1];\r\n            } else {\r\n                var i = 0, len = interfaces.length;\r\n                while(i<len){\r\n                    if(interfaces[i]._name === value){\r\n                        return interfaces[i];\r\n                    }\r\n                    i+=1;\r\n                }\r\n            }\r\n        }\r\n        _interfaceFunction.propertyGroup = propertyGroup;\r\n        interfaces = iterateElements(shapes, view, _interfaceFunction);\r\n        _interfaceFunction.numProperties = interfaces.length;\r\n        return _interfaceFunction;\r\n    };\r\n}());\r\n\r\nvar TextExpressionInterface = (function(){\r\n\treturn function(elem){\r\n        var _prevValue, _sourceText;\r\n        function _thisLayerFunction(){\r\n        }\r\n        Object.defineProperty(_thisLayerFunction, \"sourceText\", {\r\n            get: function(){\r\n                elem.textProperty.getValue()\r\n                var stringValue = elem.textProperty.currentData.t;\r\n                if(stringValue !== _prevValue) {\r\n                    elem.textProperty.currentData.t = _prevValue;\r\n                    _sourceText = new String(stringValue);\r\n                    //If stringValue is an empty string, eval returns undefined, so it has to be returned as a String primitive\r\n                    _sourceText.value = stringValue ? stringValue : new String(stringValue);\r\n                }\r\n                return _sourceText;\r\n            }\r\n        });\r\n        return _thisLayerFunction;\r\n    };\r\n}());\r\nvar LayerExpressionInterface = (function (){\r\n    function toWorld(arr, time){\r\n        var toWorldMat = new Matrix();\r\n        toWorldMat.reset();\r\n        var transformMat;\r\n        if(time) {\r\n            //Todo implement value at time on transform properties\r\n            //transformMat = this._elem.finalTransform.mProp.getValueAtTime(time);\r\n            transformMat = this._elem.finalTransform.mProp;\r\n        } else {\r\n            transformMat = this._elem.finalTransform.mProp;\r\n        }\r\n        transformMat.applyToMatrix(toWorldMat);\r\n        if(this._elem.hierarchy && this._elem.hierarchy.length){\r\n            var i, len = this._elem.hierarchy.length;\r\n            for(i=0;i<len;i+=1){\r\n                this._elem.hierarchy[i].finalTransform.mProp.applyToMatrix(toWorldMat);\r\n            }\r\n            return toWorldMat.applyToPointArray(arr[0],arr[1],arr[2]||0);\r\n        }\r\n        return toWorldMat.applyToPointArray(arr[0],arr[1],arr[2]||0);\r\n    }\r\n    function fromWorld(arr, time){\r\n        var toWorldMat = new Matrix();\r\n        toWorldMat.reset();\r\n        var transformMat;\r\n        if(time) {\r\n            //Todo implement value at time on transform properties\r\n            //transformMat = this._elem.finalTransform.mProp.getValueAtTime(time);\r\n            transformMat = this._elem.finalTransform.mProp;\r\n        } else {\r\n            transformMat = this._elem.finalTransform.mProp;\r\n        }\r\n        transformMat.applyToMatrix(toWorldMat);\r\n        if(this._elem.hierarchy && this._elem.hierarchy.length){\r\n            var i, len = this._elem.hierarchy.length;\r\n            for(i=0;i<len;i+=1){\r\n                this._elem.hierarchy[i].finalTransform.mProp.applyToMatrix(toWorldMat);\r\n            }\r\n            return toWorldMat.inversePoint(arr);\r\n        }\r\n        return toWorldMat.inversePoint(arr);\r\n    }\r\n    function fromComp(arr){\r\n        var toWorldMat = new Matrix();\r\n        toWorldMat.reset();\r\n        this._elem.finalTransform.mProp.applyToMatrix(toWorldMat);\r\n        if(this._elem.hierarchy && this._elem.hierarchy.length){\r\n            var i, len = this._elem.hierarchy.length;\r\n            for(i=0;i<len;i+=1){\r\n                this._elem.hierarchy[i].finalTransform.mProp.applyToMatrix(toWorldMat);\r\n            }\r\n            return toWorldMat.inversePoint(arr);\r\n        }\r\n        return toWorldMat.inversePoint(arr);\r\n    }\r\n\r\n    function sampleImage() {\r\n        return [1,1,1,1];\r\n    }\r\n\r\n\r\n    return function(elem){\r\n\r\n        var transformInterface;\r\n\r\n        function _registerMaskInterface(maskManager){\r\n            _thisLayerFunction.mask = new MaskManagerInterface(maskManager, elem);\r\n        }\r\n        function _registerEffectsInterface(effects){\r\n            _thisLayerFunction.effect = effects;\r\n        }\r\n\r\n        function _thisLayerFunction(name){\r\n            switch(name){\r\n                case \"ADBE Root Vectors Group\":\r\n                case \"Contents\":\r\n                case 2:\r\n                    return _thisLayerFunction.shapeInterface;\r\n                case 1:\r\n                case 6:\r\n                case \"Transform\":\r\n                case \"transform\":\r\n                case \"ADBE Transform Group\":\r\n                    return transformInterface;\r\n                case 4:\r\n                case \"ADBE Effect Parade\":\r\n                case \"effects\":\r\n                case \"Effects\":\r\n                    return _thisLayerFunction.effect;\r\n            }\r\n        }\r\n        _thisLayerFunction.toWorld = toWorld;\r\n        _thisLayerFunction.fromWorld = fromWorld;\r\n        _thisLayerFunction.toComp = toWorld;\r\n        _thisLayerFunction.fromComp = fromComp;\r\n        _thisLayerFunction.sampleImage = sampleImage;\r\n        _thisLayerFunction.sourceRectAtTime = elem.sourceRectAtTime.bind(elem);\r\n        _thisLayerFunction._elem = elem;\r\n        transformInterface = TransformExpressionInterface(elem.finalTransform.mProp);\r\n        var anchorPointDescriptor = getDescriptor(transformInterface, 'anchorPoint');\r\n        Object.defineProperties(_thisLayerFunction,{\r\n            hasParent: {\r\n                get: function(){\r\n                    return elem.hierarchy.length;\r\n                }\r\n            },\r\n            parent: {\r\n                get: function(){\r\n                    return elem.hierarchy[0].layerInterface;\r\n                }\r\n            },\r\n            rotation: getDescriptor(transformInterface, 'rotation'),\r\n            scale: getDescriptor(transformInterface, 'scale'),\r\n            position: getDescriptor(transformInterface, 'position'),\r\n            opacity: getDescriptor(transformInterface, 'opacity'),\r\n            anchorPoint: anchorPointDescriptor,\r\n            anchor_point: anchorPointDescriptor,\r\n            transform: {\r\n                get: function () {\r\n                    return transformInterface;\r\n                }\r\n            },\r\n            active: {\r\n                get: function(){\r\n                    return elem.isInRange;\r\n                }\r\n            }\r\n        });\r\n\r\n        _thisLayerFunction.startTime = elem.data.st;\r\n        _thisLayerFunction.index = elem.data.ind;\r\n        _thisLayerFunction.source = elem.data.refId;\r\n        _thisLayerFunction.height = elem.data.ty === 0 ? elem.data.h : 100;\r\n        _thisLayerFunction.width = elem.data.ty === 0 ? elem.data.w : 100;\r\n        _thisLayerFunction.inPoint = elem.data.ip/elem.comp.globalData.frameRate;\r\n        _thisLayerFunction.outPoint = elem.data.op/elem.comp.globalData.frameRate;\r\n        _thisLayerFunction._name = elem.data.nm;\r\n\r\n        _thisLayerFunction.registerMaskInterface = _registerMaskInterface;\r\n        _thisLayerFunction.registerEffectsInterface = _registerEffectsInterface;\r\n        return _thisLayerFunction;\r\n    };\r\n}());\r\n\r\nvar CompExpressionInterface = (function () {\r\n    return function(comp) {\r\n        function _thisLayerFunction(name) {\r\n            var i = 0, len = comp.layers.length;\r\n            while ( i < len) {\r\n                if (comp.layers[i].nm === name || comp.layers[i].ind === name) {\r\n                    return comp.elements[i].layerInterface;\r\n                }\r\n                i += 1;\r\n            }\r\n            return null;\r\n            //return {active:false};\r\n        }\r\n        Object.defineProperty(_thisLayerFunction, \"_name\", { value: comp.data.nm });\r\n        _thisLayerFunction.layer = _thisLayerFunction;\r\n        _thisLayerFunction.pixelAspect = 1;\r\n        _thisLayerFunction.height = comp.data.h || comp.globalData.compSize.h;\r\n        _thisLayerFunction.width = comp.data.w || comp.globalData.compSize.w;\r\n        _thisLayerFunction.pixelAspect = 1;\r\n        _thisLayerFunction.frameDuration = 1 / comp.globalData.frameRate;\r\n        _thisLayerFunction.displayStartTime = 0;\r\n        _thisLayerFunction.numLayers = comp.layers.length;\r\n        return _thisLayerFunction;\r\n    };\r\n}());\r\nvar TransformExpressionInterface = (function (){\r\n    return function(transform){\r\n        function _thisFunction(name){\r\n            switch(name){\r\n                case \"scale\":\r\n                case \"Scale\":\r\n                case \"ADBE Scale\":\r\n                case 6:\r\n                    return _thisFunction.scale;\r\n                case \"rotation\":\r\n                case \"Rotation\":\r\n                case \"ADBE Rotation\":\r\n                case \"ADBE Rotate Z\":\r\n                case 10:\r\n                    return _thisFunction.rotation;\r\n                case \"ADBE Rotate X\":\r\n                    return _thisFunction.xRotation;\r\n                case \"ADBE Rotate Y\":\r\n                    return _thisFunction.yRotation;\r\n                case \"position\":\r\n                case \"Position\":\r\n                case \"ADBE Position\":\r\n                case 2:\r\n                    return _thisFunction.position;\r\n                case 'ADBE Position_0':\r\n                    return _thisFunction.xPosition;\r\n                case 'ADBE Position_1':\r\n                    return _thisFunction.yPosition;\r\n                case 'ADBE Position_2':\r\n                    return _thisFunction.zPosition;\r\n                case \"anchorPoint\":\r\n                case \"AnchorPoint\":\r\n                case \"Anchor Point\":\r\n                case \"ADBE AnchorPoint\":\r\n                case 1:\r\n                    return _thisFunction.anchorPoint;\r\n                case \"opacity\":\r\n                case \"Opacity\":\r\n                case 11:\r\n                    return _thisFunction.opacity;\r\n            }\r\n        }\r\n\r\n        Object.defineProperty(_thisFunction, \"rotation\", {\r\n            get: ExpressionPropertyInterface(transform.r || transform.rz)\r\n        });\r\n\r\n        Object.defineProperty(_thisFunction, \"zRotation\", {\r\n            get: ExpressionPropertyInterface(transform.rz || transform.r)\r\n        });\r\n\r\n        Object.defineProperty(_thisFunction, \"xRotation\", {\r\n            get: ExpressionPropertyInterface(transform.rx)\r\n        });\r\n\r\n        Object.defineProperty(_thisFunction, \"yRotation\", {\r\n            get: ExpressionPropertyInterface(transform.ry)\r\n        });\r\n        Object.defineProperty(_thisFunction, \"scale\", {\r\n            get: ExpressionPropertyInterface(transform.s)\r\n        });\r\n\r\n        if(transform.p) {\r\n            var _transformFactory = ExpressionPropertyInterface(transform.p);\r\n        }\r\n        Object.defineProperty(_thisFunction, \"position\", {\r\n            get: function () {\r\n                if(transform.p) {\r\n                    return _transformFactory();\r\n                } else {\r\n                    return [transform.px.v, transform.py.v, transform.pz ? transform.pz.v : 0];\r\n                }\r\n            }\r\n        });\r\n\r\n        Object.defineProperty(_thisFunction, \"xPosition\", {\r\n            get: ExpressionPropertyInterface(transform.px)\r\n        });\r\n\r\n        Object.defineProperty(_thisFunction, \"yPosition\", {\r\n            get: ExpressionPropertyInterface(transform.py)\r\n        });\r\n\r\n        Object.defineProperty(_thisFunction, \"zPosition\", {\r\n            get: ExpressionPropertyInterface(transform.pz)\r\n        });\r\n\r\n        Object.defineProperty(_thisFunction, \"anchorPoint\", {\r\n            get: ExpressionPropertyInterface(transform.a)\r\n        });\r\n\r\n        Object.defineProperty(_thisFunction, \"opacity\", {\r\n            get: ExpressionPropertyInterface(transform.o)\r\n        });\r\n\r\n        Object.defineProperty(_thisFunction, \"skew\", {\r\n            get: ExpressionPropertyInterface(transform.sk)\r\n        });\r\n\r\n        Object.defineProperty(_thisFunction, \"skewAxis\", {\r\n            get: ExpressionPropertyInterface(transform.sa)\r\n        });\r\n\r\n        Object.defineProperty(_thisFunction, \"orientation\", {\r\n            get: ExpressionPropertyInterface(transform.or)\r\n        });\r\n\r\n        return _thisFunction;\r\n    };\r\n}());\r\nvar ProjectInterface = (function (){\r\n\r\n    function registerComposition(comp){\r\n        this.compositions.push(comp);\r\n    }\r\n\r\n    return function(){\r\n        function _thisProjectFunction(name){\r\n            var i = 0, len = this.compositions.length;\r\n            while(i<len){\r\n                if(this.compositions[i].data && this.compositions[i].data.nm === name){\r\n                    if(this.compositions[i].prepareFrame && this.compositions[i].data.xt) {\r\n                        this.compositions[i].prepareFrame(this.currentFrame);\r\n                    }\r\n                    return this.compositions[i].compInterface;\r\n                }\r\n                i+=1;\r\n            }\r\n        }\r\n\r\n        _thisProjectFunction.compositions = [];\r\n        _thisProjectFunction.currentFrame = 0;\r\n\r\n        _thisProjectFunction.registerComposition = registerComposition;\r\n\r\n\r\n\r\n        return _thisProjectFunction;\r\n    };\r\n}());\r\nvar EffectsExpressionInterface = (function (){\r\n    var ob = {\r\n        createEffectsInterface: createEffectsInterface\r\n    };\r\n\r\n    function createEffectsInterface(elem, propertyGroup){\r\n        if(elem.effectsManager){\r\n\r\n            var effectElements = [];\r\n            var effectsData = elem.data.ef;\r\n            var i, len = elem.effectsManager.effectElements.length;\r\n            for(i=0;i<len;i+=1){\r\n                effectElements.push(createGroupInterface(effectsData[i],elem.effectsManager.effectElements[i],propertyGroup,elem));\r\n            }\r\n\r\n            return function(name){\r\n                var effects = elem.data.ef || [], i = 0, len = effects.length;\r\n                while(i<len) {\r\n                    if(name === effects[i].nm || name === effects[i].mn || name === effects[i].ix){\r\n                        return effectElements[i];\r\n                    }\r\n                    i += 1;\r\n                }\r\n            };\r\n        }\r\n    }\r\n\r\n    function createGroupInterface(data,elements, propertyGroup, elem){\r\n        var effectElements = [];\r\n        var i, len = data.ef.length;\r\n        for(i=0;i<len;i+=1){\r\n            if(data.ef[i].ty === 5){\r\n                effectElements.push(createGroupInterface(data.ef[i],elements.effectElements[i],elements.effectElements[i].propertyGroup, elem));\r\n            } else {\r\n                effectElements.push(createValueInterface(elements.effectElements[i],data.ef[i].ty, elem, _propertyGroup));\r\n            }\r\n        }\r\n\r\n        function _propertyGroup(val) {\r\n            if(val === 1){\r\n               return groupInterface;\r\n            } else{\r\n               return propertyGroup(val-1);\r\n            }\r\n        }\r\n\r\n        var groupInterface = function(name){\r\n            var effects = data.ef, i = 0, len = effects.length;\r\n            while(i<len) {\r\n                if(name === effects[i].nm || name === effects[i].mn || name === effects[i].ix){\r\n                    if(effects[i].ty === 5){\r\n                        return effectElements[i];\r\n                    } else {\r\n                        return effectElements[i]();\r\n                    }\r\n                }\r\n                i += 1;\r\n            }\r\n            return effectElements[0]();\r\n        };\r\n\r\n        groupInterface.propertyGroup = _propertyGroup;\r\n\r\n        if(data.mn === 'ADBE Color Control'){\r\n            Object.defineProperty(groupInterface, 'color', {\r\n                get: function(){\r\n                    return effectElements[0]();\r\n                }\r\n            });\r\n        }\r\n        Object.defineProperty(groupInterface, 'numProperties', {\r\n            get: function(){\r\n                return data.np;\r\n            }\r\n        });\r\n        groupInterface.active = groupInterface.enabled = data.en !== 0;\r\n        return groupInterface;\r\n    }\r\n\r\n    function createValueInterface(element, type, elem, propertyGroup){\r\n        var expressionProperty = ExpressionPropertyInterface(element.p);\r\n        function interfaceFunction(){\r\n            if(type === 10){\r\n                return elem.comp.compInterface(element.p.v);\r\n            }\r\n            return expressionProperty();\r\n        }\r\n\r\n        if(element.p.setGroupProperty) {\r\n            element.p.setGroupProperty(propertyGroup);\r\n        }\r\n\r\n        return interfaceFunction;\r\n    }\r\n\r\n    return ob;\r\n\r\n}());\r\nvar MaskManagerInterface = (function(){\r\n\r\n\tfunction MaskInterface(mask, data){\r\n\t\tthis._mask = mask;\r\n\t\tthis._data = data;\r\n\t}\r\n\tObject.defineProperty(MaskInterface.prototype, 'maskPath', {\r\n        get: function(){\r\n            if(this._mask.prop.k){\r\n                this._mask.prop.getValue();\r\n            }\r\n            return this._mask.prop;\r\n        }\r\n    });\r\n\tObject.defineProperty(MaskInterface.prototype, 'maskOpacity', {\r\n        get: function(){\r\n            if(this._mask.op.k){\r\n                this._mask.op.getValue();\r\n            }\r\n            return this._mask.op.v * 100;\r\n        }\r\n    });\r\n\r\n\tvar MaskManager = function(maskManager, elem){\r\n\t\tvar _maskManager = maskManager;\r\n\t\tvar _elem = elem;\r\n\t\tvar _masksInterfaces = createSizedArray(maskManager.viewData.length);\r\n\t\tvar i, len = maskManager.viewData.length;\r\n\t\tfor(i = 0; i < len; i += 1) {\r\n\t\t\t_masksInterfaces[i] = new MaskInterface(maskManager.viewData[i], maskManager.masksProperties[i]);\r\n\t\t}\r\n\r\n\t\tvar maskFunction = function(name){\r\n\t\t\ti = 0;\r\n\t\t    while(i<len){\r\n\t\t        if(maskManager.masksProperties[i].nm === name){\r\n\t\t            return _masksInterfaces[i];\r\n\t\t        }\r\n\t\t        i += 1;\r\n\t\t    }\r\n\t\t};\r\n\t\treturn maskFunction;\r\n\t};\r\n\treturn MaskManager;\r\n}());\r\n\r\nvar ExpressionPropertyInterface = (function() {\r\n\r\n    var defaultUnidimensionalValue = {pv:0, v:0, mult: 1}\r\n    var defaultMultidimensionalValue = {pv:[0,0,0], v:[0,0,0], mult: 1}\r\n\r\n    function completeProperty(expressionValue, property, type) {\r\n        Object.defineProperty(expressionValue, 'velocity', {\r\n            get: function(){\r\n                return property.getVelocityAtTime(property.comp.currentFrame);\r\n            }\r\n        });\r\n        expressionValue.numKeys = property.keyframes ? property.keyframes.length : 0;\r\n        expressionValue.key = function(pos) {\r\n            if (!expressionValue.numKeys) {\r\n                return 0;\r\n            } else {\r\n                var value = '';\r\n                if ('s' in property.keyframes[pos-1]) {\r\n                    value = property.keyframes[pos-1].s;\r\n                } else if ('e' in property.keyframes[pos-2]) {\r\n                    value = property.keyframes[pos-2].e;\r\n                } else {\r\n                    value = property.keyframes[pos-2].s;\r\n                }\r\n                var valueProp = type === 'unidimensional' ? new Number(value) : Object.assign({}, value);\r\n                valueProp.time = property.keyframes[pos-1].t / property.elem.comp.globalData.frameRate;\r\n                return valueProp;\r\n            }\r\n        };\r\n        expressionValue.valueAtTime = property.getValueAtTime;\r\n        expressionValue.speedAtTime = property.getSpeedAtTime;\r\n        expressionValue.velocityAtTime = property.getVelocityAtTime;\r\n        expressionValue.propertyGroup = property.propertyGroup;\r\n    }\r\n\r\n    function UnidimensionalPropertyInterface(property) {\r\n        if(!property || !('pv' in property)) {\r\n            property = defaultUnidimensionalValue;\r\n        }\r\n        var mult = 1 / property.mult;\r\n        var val = property.pv * mult;\r\n        var expressionValue = new Number(val);\r\n        expressionValue.value = val;\r\n        completeProperty(expressionValue, property, 'unidimensional');\r\n\r\n        return function() {\r\n            if (property.k) {\r\n                property.getValue();\r\n            }\r\n            val = property.v * mult;\r\n            if(expressionValue.value !== val) {\r\n                expressionValue = new Number(val);\r\n                expressionValue.value = val;\r\n                completeProperty(expressionValue, property, 'unidimensional');\r\n            }\r\n            return expressionValue;\r\n        }\r\n    }\r\n\r\n    function MultidimensionalPropertyInterface(property) {\r\n        if(!property || !('pv' in property)) {\r\n            property = defaultMultidimensionalValue;\r\n        }\r\n        var mult = 1 / property.mult;\r\n        var len = property.pv.length;\r\n        var expressionValue = createTypedArray('float32', len);\r\n        var arrValue = createTypedArray('float32', len);\r\n        expressionValue.value = arrValue;\r\n        completeProperty(expressionValue, property, 'multidimensional');\r\n\r\n        return function() {\r\n            if (property.k) {\r\n                property.getValue();\r\n            }\r\n            for (var i = 0; i < len; i += 1) {\r\n                expressionValue[i] = arrValue[i] = property.v[i] * mult;\r\n            }\r\n            return expressionValue;\r\n        }\r\n    }\r\n\r\n    //TODO: try to avoid using this getter\r\n    function defaultGetter() {\r\n        return defaultUnidimensionalValue;\r\n    }\r\n    \r\n    return function(property) {\r\n        if(!property) {\r\n            return defaultGetter;\r\n        } else if (property.propType === 'unidimensional') {\r\n            return UnidimensionalPropertyInterface(property);\r\n        } else {\r\n            return MultidimensionalPropertyInterface(property);\r\n        }\r\n    }\r\n}());\r\n\r\n(function(){\r\n\r\n    var TextExpressionSelectorProp = (function(){\r\n\r\n        function getValueProxy(index,total){\r\n            this.textIndex = index+1;\r\n            this.textTotal = total;\r\n            this.v = this.getValue() * this.mult;\r\n            return this.v;\r\n        }\r\n\r\n        return function TextExpressionSelectorProp(elem,data){\r\n            this.pv = 1;\r\n            this.comp = elem.comp;\r\n            this.elem = elem;\r\n            this.mult = 0.01;\r\n            this.propType = 'textSelector';\r\n            this.textTotal = data.totalChars;\r\n            this.selectorValue = 100;\r\n            this.lastValue = [1,1,1];\r\n            this.k = true;\r\n            this.x = true;\r\n            this.getValue = ExpressionManager.initiateExpression.bind(this)(elem,data,this);\r\n            this.getMult = getValueProxy;\r\n            this.getVelocityAtTime = expressionHelpers.getVelocityAtTime;\r\n            if(this.kf){\r\n                this.getValueAtTime = expressionHelpers.getValueAtTime.bind(this);\r\n            } else {\r\n                this.getValueAtTime = expressionHelpers.getStaticValueAtTime.bind(this);\r\n            }\r\n            this.setGroupProperty = expressionHelpers.setGroupProperty;\r\n        };\r\n    }());\r\n\r\n\tvar propertyGetTextProp = TextSelectorProp.getTextSelectorProp;\r\n\tTextSelectorProp.getTextSelectorProp = function(elem, data,arr){\r\n\t    if(data.t === 1){\r\n\t        return new TextExpressionSelectorProp(elem, data,arr);\r\n\t    } else {\r\n\t        return propertyGetTextProp(elem,data,arr);\r\n\t    }\r\n\t};\r\n}());\r\nfunction SliderEffect(data,elem, container){\r\n    this.p = PropertyFactory.getProp(elem,data.v,0,0,container);\r\n}\r\nfunction AngleEffect(data,elem, container){\r\n    this.p = PropertyFactory.getProp(elem,data.v,0,0,container);\r\n}\r\nfunction ColorEffect(data,elem, container){\r\n    this.p = PropertyFactory.getProp(elem,data.v,1,0,container);\r\n}\r\nfunction PointEffect(data,elem, container){\r\n    this.p = PropertyFactory.getProp(elem,data.v,1,0,container);\r\n}\r\nfunction LayerIndexEffect(data,elem, container){\r\n    this.p = PropertyFactory.getProp(elem,data.v,0,0,container);\r\n}\r\nfunction MaskIndexEffect(data,elem, container){\r\n    this.p = PropertyFactory.getProp(elem,data.v,0,0,container);\r\n}\r\nfunction CheckboxEffect(data,elem, container){\r\n    this.p = PropertyFactory.getProp(elem,data.v,0,0,container);\r\n}\r\nfunction NoValueEffect(){\r\n    this.p = {};\r\n}\r\nfunction EffectsManager(){}\r\nfunction EffectsManager(data,element){\r\n    var effects = data.ef || [];\r\n    this.effectElements = [];\r\n    var i,len = effects.length;\r\n    var effectItem;\r\n    for(i=0;i<len;i++) {\r\n        effectItem = new GroupEffect(effects[i],element);\r\n        this.effectElements.push(effectItem);\r\n    }\r\n}\r\n\r\nfunction GroupEffect(data,element){\r\n    this.init(data,element);\r\n}\r\n\r\nextendPrototype([DynamicPropertyContainer], GroupEffect);\r\n\r\nGroupEffect.prototype.getValue = GroupEffect.prototype.iterateDynamicProperties;\r\n\r\nGroupEffect.prototype.init = function(data,element){\r\n    this.data = data;\r\n    this.effectElements = [];\r\n    this.initDynamicPropertyContainer(element);\r\n    var i, len = this.data.ef.length;\r\n    var eff, effects = this.data.ef;\r\n    for(i=0;i<len;i+=1){\r\n        eff = null;\r\n        switch(effects[i].ty){\r\n            case 0:\r\n                eff = new SliderEffect(effects[i],element,this);\r\n                break;\r\n            case 1:\r\n                eff = new AngleEffect(effects[i],element,this);\r\n                break;\r\n            case 2:\r\n                eff = new ColorEffect(effects[i],element,this);\r\n                break;\r\n            case 3:\r\n                eff = new PointEffect(effects[i],element,this);\r\n                break;\r\n            case 4:\r\n            case 7:\r\n                eff = new CheckboxEffect(effects[i],element,this);\r\n                break;\r\n            case 10:\r\n                eff = new LayerIndexEffect(effects[i],element,this);\r\n                break;\r\n            case 11:\r\n                eff = new MaskIndexEffect(effects[i],element,this);\r\n                break;\r\n            case 5:\r\n                eff = new EffectsManager(effects[i],element,this);\r\n                break;\r\n            //case 6:\r\n            default:\r\n                eff = new NoValueEffect(effects[i],element,this);\r\n                break;\r\n        }\r\n        if(eff) {\r\n            this.effectElements.push(eff);\r\n        }\r\n    }\r\n};\r\n\r\n    var lottiejs = {};\r\n\r\n    var _isFrozen = false;\r\n\r\n    function setLocationHref (href) {\r\n        locationHref = href;\r\n    }\r\n\r\n    function searchAnimations() {\r\n        if (standalone === true) {\r\n            animationManager.searchAnimations(animationData, standalone, renderer);\r\n        } else {\r\n            animationManager.searchAnimations();\r\n        }\r\n    }\r\n\r\n    function setSubframeRendering(flag) {\r\n        subframeEnabled = flag;\r\n    }\r\n\r\n    function loadAnimation(params) {\r\n        if (standalone === true) {\r\n            params.animationData = JSON.parse(animationData);\r\n        }\r\n        return animationManager.loadAnimation(params);\r\n    }\r\n\r\n    function setQuality(value) {\r\n        if (typeof value === 'string') {\r\n            switch (value) {\r\n                case 'high':\r\n                    defaultCurveSegments = 200;\r\n                    break;\r\n                case 'medium':\r\n                    defaultCurveSegments = 50;\r\n                    break;\r\n                case 'low':\r\n                    defaultCurveSegments = 10;\r\n                    break;\r\n            }\r\n        } else if (!isNaN(value) && value > 1) {\r\n            defaultCurveSegments = value;\r\n        }\r\n        if (defaultCurveSegments >= 50) {\r\n            roundValues(false);\r\n        } else {\r\n            roundValues(true);\r\n        }\r\n    }\r\n\r\n    function inBrowser() {\r\n        return typeof navigator !== 'undefined';\r\n    }\r\n\r\n    function installPlugin(type, plugin) {\r\n        if (type === 'expressions') {\r\n            expressionsPlugin = plugin;\r\n        }\r\n    }\r\n\r\n    function getFactory(name) {\r\n        switch (name) {\r\n            case \"propertyFactory\":\r\n                return PropertyFactory;\r\n            case \"shapePropertyFactory\":\r\n                return ShapePropertyFactory;\r\n            case \"matrix\":\r\n                return Matrix;\r\n        }\r\n    }\r\n\r\n    lottiejs.play = animationManager.play;\r\n    lottiejs.pause = animationManager.pause;\r\n    lottiejs.setLocationHref = setLocationHref;\r\n    lottiejs.togglePause = animationManager.togglePause;\r\n    lottiejs.setSpeed = animationManager.setSpeed;\r\n    lottiejs.setDirection = animationManager.setDirection;\r\n    lottiejs.stop = animationManager.stop;\r\n    lottiejs.searchAnimations = searchAnimations;\r\n    lottiejs.registerAnimation = animationManager.registerAnimation;\r\n    lottiejs.loadAnimation = loadAnimation;\r\n    lottiejs.setSubframeRendering = setSubframeRendering;\r\n    lottiejs.resize = animationManager.resize;\r\n    //lottiejs.start = start;\r\n    lottiejs.goToAndStop = animationManager.goToAndStop;\r\n    lottiejs.destroy = animationManager.destroy;\r\n    lottiejs.setQuality = setQuality;\r\n    lottiejs.inBrowser = inBrowser;\r\n    lottiejs.installPlugin = installPlugin;\r\n    lottiejs.freeze = animationManager.freeze;\r\n    lottiejs.unfreeze = animationManager.unfreeze;\r\n    lottiejs.getRegisteredAnimations = animationManager.getRegisteredAnimations;\r\n    lottiejs.__getFactory = getFactory;\r\n    lottiejs.version = '5.5.6';\r\n\r\n    function checkReady() {\r\n        if (document.readyState === \"complete\") {\r\n            clearInterval(readyStateCheckInterval);\r\n            searchAnimations();\r\n        }\r\n    }\r\n\r\n    function getQueryVariable(variable) {\r\n        var vars = queryString.split('&');\r\n        for (var i = 0; i < vars.length; i++) {\r\n            var pair = vars[i].split('=');\r\n            if (decodeURIComponent(pair[0]) == variable) {\r\n                return decodeURIComponent(pair[1]);\r\n            }\r\n        }\r\n    }\r\n    var standalone = '__[STANDALONE]__';\r\n    var animationData = '__[ANIMATIONDATA]__';\r\n    var renderer = '';\r\n    if (standalone) {\r\n        var scripts = document.getElementsByTagName('script');\r\n        var index = scripts.length - 1;\r\n        var myScript = scripts[index] || {\r\n            src: ''\r\n        };\r\n        var queryString = myScript.src.replace(/^[^\\?]+\\??/, '');\r\n        renderer = getQueryVariable('renderer');\r\n    }\r\n    var readyStateCheckInterval = setInterval(checkReady, 100);\r\n    return lottiejs;\r\n}));\r\n","import mod from \"-!../../node_modules/_mini-css-extract-plugin@0.6.0@mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../node_modules/_css-loader@1.0.1@css-loader/index.js??ref--8-oneOf-1-1!../../node_modules/_vue-loader@15.7.0@vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/_postcss-loader@3.0.0@postcss-loader/src/index.js??ref--8-oneOf-1-2!../../node_modules/_sass-loader@7.1.0@sass-loader/lib/loader.js??ref--8-oneOf-1-3!../../node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js??ref--0-0!../../node_modules/_vue-loader@15.7.0@vue-loader/lib/index.js??vue-loader-options!./lottie.vue?vue&type=style&index=0&id=168b94a0&lang=scss&scoped=true&\"; export default mod; export * from \"-!../../node_modules/_mini-css-extract-plugin@0.6.0@mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../node_modules/_css-loader@1.0.1@css-loader/index.js??ref--8-oneOf-1-1!../../node_modules/_vue-loader@15.7.0@vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/_postcss-loader@3.0.0@postcss-loader/src/index.js??ref--8-oneOf-1-2!../../node_modules/_sass-loader@7.1.0@sass-loader/lib/loader.js??ref--8-oneOf-1-3!../../node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js??ref--0-0!../../node_modules/_vue-loader@15.7.0@vue-loader/lib/index.js??vue-loader-options!./lottie.vue?vue&type=style&index=0&id=168b94a0&lang=scss&scoped=true&\""],"sourceRoot":""}